
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Campaign
 * 
 */
export type Campaign = $Result.DefaultSelection<Prisma.$CampaignPayload>
/**
 * Model LoanType
 * 
 */
export type LoanType = $Result.DefaultSelection<Prisma.$LoanTypePayload>
/**
 * Model Lead
 * 
 */
export type Lead = $Result.DefaultSelection<Prisma.$LeadPayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model LeadToPushRecord
 * 
 */
export type LeadToPushRecord = $Result.DefaultSelection<Prisma.$LeadToPushRecordPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const Role: {
  client: 'client',
  admin: 'admin',
  user: 'user',
  superadmin: 'superadmin'
};

export type Role = (typeof Role)[keyof typeof Role]

}

export type Role = $Enums.Role

export const Role: typeof $Enums.Role

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Campaigns
 * const campaigns = await prisma.campaign.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Campaigns
   * const campaigns = await prisma.campaign.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<'extends', Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.campaign`: Exposes CRUD operations for the **Campaign** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Campaigns
    * const campaigns = await prisma.campaign.findMany()
    * ```
    */
  get campaign(): Prisma.CampaignDelegate<ExtArgs>;

  /**
   * `prisma.loanType`: Exposes CRUD operations for the **LoanType** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more LoanTypes
    * const loanTypes = await prisma.loanType.findMany()
    * ```
    */
  get loanType(): Prisma.LoanTypeDelegate<ExtArgs>;

  /**
   * `prisma.lead`: Exposes CRUD operations for the **Lead** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Leads
    * const leads = await prisma.lead.findMany()
    * ```
    */
  get lead(): Prisma.LeadDelegate<ExtArgs>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs>;

  /**
   * `prisma.leadToPushRecord`: Exposes CRUD operations for the **LeadToPushRecord** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more LeadToPushRecords
    * const leadToPushRecords = await prisma.leadToPushRecord.findMany()
    * ```
    */
  get leadToPushRecord(): Prisma.LeadToPushRecordDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.9.1
   * Query Engine version: 23fdc5965b1e05fc54e5f26ed3de66776b93de64
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Campaign: 'Campaign',
    LoanType: 'LoanType',
    Lead: 'Lead',
    User: 'User',
    LeadToPushRecord: 'LeadToPushRecord'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }


  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs}, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    meta: {
      modelProps: 'campaign' | 'loanType' | 'lead' | 'user' | 'leadToPushRecord'
      txIsolationLevel: Prisma.TransactionIsolationLevel
    },
    model: {
      Campaign: {
        payload: Prisma.$CampaignPayload<ExtArgs>
        fields: Prisma.CampaignFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CampaignFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CampaignPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CampaignFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CampaignPayload>
          }
          findFirst: {
            args: Prisma.CampaignFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CampaignPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CampaignFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CampaignPayload>
          }
          findMany: {
            args: Prisma.CampaignFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CampaignPayload>[]
          }
          create: {
            args: Prisma.CampaignCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CampaignPayload>
          }
          createMany: {
            args: Prisma.CampaignCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.CampaignDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CampaignPayload>
          }
          update: {
            args: Prisma.CampaignUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CampaignPayload>
          }
          deleteMany: {
            args: Prisma.CampaignDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.CampaignUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.CampaignUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CampaignPayload>
          }
          aggregate: {
            args: Prisma.CampaignAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCampaign>
          }
          groupBy: {
            args: Prisma.CampaignGroupByArgs<ExtArgs>,
            result: $Utils.Optional<CampaignGroupByOutputType>[]
          }
          count: {
            args: Prisma.CampaignCountArgs<ExtArgs>,
            result: $Utils.Optional<CampaignCountAggregateOutputType> | number
          }
        }
      }
      LoanType: {
        payload: Prisma.$LoanTypePayload<ExtArgs>
        fields: Prisma.LoanTypeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LoanTypeFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LoanTypePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LoanTypeFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LoanTypePayload>
          }
          findFirst: {
            args: Prisma.LoanTypeFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LoanTypePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LoanTypeFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LoanTypePayload>
          }
          findMany: {
            args: Prisma.LoanTypeFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LoanTypePayload>[]
          }
          create: {
            args: Prisma.LoanTypeCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LoanTypePayload>
          }
          createMany: {
            args: Prisma.LoanTypeCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.LoanTypeDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LoanTypePayload>
          }
          update: {
            args: Prisma.LoanTypeUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LoanTypePayload>
          }
          deleteMany: {
            args: Prisma.LoanTypeDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.LoanTypeUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.LoanTypeUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LoanTypePayload>
          }
          aggregate: {
            args: Prisma.LoanTypeAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateLoanType>
          }
          groupBy: {
            args: Prisma.LoanTypeGroupByArgs<ExtArgs>,
            result: $Utils.Optional<LoanTypeGroupByOutputType>[]
          }
          count: {
            args: Prisma.LoanTypeCountArgs<ExtArgs>,
            result: $Utils.Optional<LoanTypeCountAggregateOutputType> | number
          }
        }
      }
      Lead: {
        payload: Prisma.$LeadPayload<ExtArgs>
        fields: Prisma.LeadFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LeadFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LeadPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LeadFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LeadPayload>
          }
          findFirst: {
            args: Prisma.LeadFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LeadPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LeadFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LeadPayload>
          }
          findMany: {
            args: Prisma.LeadFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LeadPayload>[]
          }
          create: {
            args: Prisma.LeadCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LeadPayload>
          }
          createMany: {
            args: Prisma.LeadCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.LeadDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LeadPayload>
          }
          update: {
            args: Prisma.LeadUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LeadPayload>
          }
          deleteMany: {
            args: Prisma.LeadDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.LeadUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.LeadUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LeadPayload>
          }
          aggregate: {
            args: Prisma.LeadAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateLead>
          }
          groupBy: {
            args: Prisma.LeadGroupByArgs<ExtArgs>,
            result: $Utils.Optional<LeadGroupByOutputType>[]
          }
          count: {
            args: Prisma.LeadCountArgs<ExtArgs>,
            result: $Utils.Optional<LeadCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>,
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>,
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      LeadToPushRecord: {
        payload: Prisma.$LeadToPushRecordPayload<ExtArgs>
        fields: Prisma.LeadToPushRecordFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LeadToPushRecordFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LeadToPushRecordPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LeadToPushRecordFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LeadToPushRecordPayload>
          }
          findFirst: {
            args: Prisma.LeadToPushRecordFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LeadToPushRecordPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LeadToPushRecordFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LeadToPushRecordPayload>
          }
          findMany: {
            args: Prisma.LeadToPushRecordFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LeadToPushRecordPayload>[]
          }
          create: {
            args: Prisma.LeadToPushRecordCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LeadToPushRecordPayload>
          }
          createMany: {
            args: Prisma.LeadToPushRecordCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.LeadToPushRecordDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LeadToPushRecordPayload>
          }
          update: {
            args: Prisma.LeadToPushRecordUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LeadToPushRecordPayload>
          }
          deleteMany: {
            args: Prisma.LeadToPushRecordDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.LeadToPushRecordUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.LeadToPushRecordUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$LeadToPushRecordPayload>
          }
          aggregate: {
            args: Prisma.LeadToPushRecordAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateLeadToPushRecord>
          }
          groupBy: {
            args: Prisma.LeadToPushRecordGroupByArgs<ExtArgs>,
            result: $Utils.Optional<LeadToPushRecordGroupByOutputType>[]
          }
          count: {
            args: Prisma.LeadToPushRecordCountArgs<ExtArgs>,
            result: $Utils.Optional<LeadToPushRecordCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<'define', Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type LoanTypeCountOutputType
   */

  export type LoanTypeCountOutputType = {
    campaigns: number
  }

  export type LoanTypeCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    campaigns?: boolean | LoanTypeCountOutputTypeCountCampaignsArgs
  }

  // Custom InputTypes

  /**
   * LoanTypeCountOutputType without action
   */
  export type LoanTypeCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LoanTypeCountOutputType
     */
    select?: LoanTypeCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * LoanTypeCountOutputType without action
   */
  export type LoanTypeCountOutputTypeCountCampaignsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CampaignWhereInput
  }



  /**
   * Models
   */

  /**
   * Model Campaign
   */

  export type AggregateCampaign = {
    _count: CampaignCountAggregateOutputType | null
    _avg: CampaignAvgAggregateOutputType | null
    _sum: CampaignSumAggregateOutputType | null
    _min: CampaignMinAggregateOutputType | null
    _max: CampaignMaxAggregateOutputType | null
  }

  export type CampaignAvgAggregateOutputType = {
    id: number | null
    isActive: number | null
    LoanTypeId: number | null
  }

  export type CampaignSumAggregateOutputType = {
    id: number | null
    isActive: number | null
    LoanTypeId: number | null
  }

  export type CampaignMinAggregateOutputType = {
    id: number | null
    CampaignName: string | null
    LoanType: string | null
    CampaignFields: string | null
    CampaignImg: string | null
    isActive: number | null
    LoanTypeId: number | null
  }

  export type CampaignMaxAggregateOutputType = {
    id: number | null
    CampaignName: string | null
    LoanType: string | null
    CampaignFields: string | null
    CampaignImg: string | null
    isActive: number | null
    LoanTypeId: number | null
  }

  export type CampaignCountAggregateOutputType = {
    id: number
    CampaignName: number
    LoanType: number
    CampaignFields: number
    CampaignImg: number
    isActive: number
    LoanTypeId: number
    _all: number
  }


  export type CampaignAvgAggregateInputType = {
    id?: true
    isActive?: true
    LoanTypeId?: true
  }

  export type CampaignSumAggregateInputType = {
    id?: true
    isActive?: true
    LoanTypeId?: true
  }

  export type CampaignMinAggregateInputType = {
    id?: true
    CampaignName?: true
    LoanType?: true
    CampaignFields?: true
    CampaignImg?: true
    isActive?: true
    LoanTypeId?: true
  }

  export type CampaignMaxAggregateInputType = {
    id?: true
    CampaignName?: true
    LoanType?: true
    CampaignFields?: true
    CampaignImg?: true
    isActive?: true
    LoanTypeId?: true
  }

  export type CampaignCountAggregateInputType = {
    id?: true
    CampaignName?: true
    LoanType?: true
    CampaignFields?: true
    CampaignImg?: true
    isActive?: true
    LoanTypeId?: true
    _all?: true
  }

  export type CampaignAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Campaign to aggregate.
     */
    where?: CampaignWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Campaigns to fetch.
     */
    orderBy?: CampaignOrderByWithRelationInput | CampaignOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CampaignWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Campaigns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Campaigns.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Campaigns
    **/
    _count?: true | CampaignCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CampaignAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CampaignSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CampaignMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CampaignMaxAggregateInputType
  }

  export type GetCampaignAggregateType<T extends CampaignAggregateArgs> = {
        [P in keyof T & keyof AggregateCampaign]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCampaign[P]>
      : GetScalarType<T[P], AggregateCampaign[P]>
  }




  export type CampaignGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CampaignWhereInput
    orderBy?: CampaignOrderByWithAggregationInput | CampaignOrderByWithAggregationInput[]
    by: CampaignScalarFieldEnum[] | CampaignScalarFieldEnum
    having?: CampaignScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CampaignCountAggregateInputType | true
    _avg?: CampaignAvgAggregateInputType
    _sum?: CampaignSumAggregateInputType
    _min?: CampaignMinAggregateInputType
    _max?: CampaignMaxAggregateInputType
  }

  export type CampaignGroupByOutputType = {
    id: number
    CampaignName: string | null
    LoanType: string | null
    CampaignFields: string | null
    CampaignImg: string | null
    isActive: number
    LoanTypeId: number
    _count: CampaignCountAggregateOutputType | null
    _avg: CampaignAvgAggregateOutputType | null
    _sum: CampaignSumAggregateOutputType | null
    _min: CampaignMinAggregateOutputType | null
    _max: CampaignMaxAggregateOutputType | null
  }

  type GetCampaignGroupByPayload<T extends CampaignGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CampaignGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CampaignGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CampaignGroupByOutputType[P]>
            : GetScalarType<T[P], CampaignGroupByOutputType[P]>
        }
      >
    >


  export type CampaignSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    CampaignName?: boolean
    LoanType?: boolean
    CampaignFields?: boolean
    CampaignImg?: boolean
    isActive?: boolean
    LoanTypeId?: boolean
    loanType?: boolean | LoanTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["campaign"]>

  export type CampaignSelectScalar = {
    id?: boolean
    CampaignName?: boolean
    LoanType?: boolean
    CampaignFields?: boolean
    CampaignImg?: boolean
    isActive?: boolean
    LoanTypeId?: boolean
  }

  export type CampaignInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    loanType?: boolean | LoanTypeDefaultArgs<ExtArgs>
  }


  export type $CampaignPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Campaign"
    objects: {
      loanType: Prisma.$LoanTypePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      CampaignName: string | null
      LoanType: string | null
      CampaignFields: string | null
      CampaignImg: string | null
      isActive: number
      LoanTypeId: number
    }, ExtArgs["result"]["campaign"]>
    composites: {}
  }


  type CampaignGetPayload<S extends boolean | null | undefined | CampaignDefaultArgs> = $Result.GetResult<Prisma.$CampaignPayload, S>

  type CampaignCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CampaignFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CampaignCountAggregateInputType | true
    }

  export interface CampaignDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Campaign'], meta: { name: 'Campaign' } }
    /**
     * Find zero or one Campaign that matches the filter.
     * @param {CampaignFindUniqueArgs} args - Arguments to find a Campaign
     * @example
     * // Get one Campaign
     * const campaign = await prisma.campaign.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends CampaignFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, CampaignFindUniqueArgs<ExtArgs>>
    ): Prisma__CampaignClient<$Result.GetResult<Prisma.$CampaignPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Campaign that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {CampaignFindUniqueOrThrowArgs} args - Arguments to find a Campaign
     * @example
     * // Get one Campaign
     * const campaign = await prisma.campaign.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends CampaignFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, CampaignFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__CampaignClient<$Result.GetResult<Prisma.$CampaignPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Campaign that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampaignFindFirstArgs} args - Arguments to find a Campaign
     * @example
     * // Get one Campaign
     * const campaign = await prisma.campaign.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends CampaignFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, CampaignFindFirstArgs<ExtArgs>>
    ): Prisma__CampaignClient<$Result.GetResult<Prisma.$CampaignPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Campaign that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampaignFindFirstOrThrowArgs} args - Arguments to find a Campaign
     * @example
     * // Get one Campaign
     * const campaign = await prisma.campaign.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends CampaignFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, CampaignFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__CampaignClient<$Result.GetResult<Prisma.$CampaignPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Campaigns that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampaignFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Campaigns
     * const campaigns = await prisma.campaign.findMany()
     * 
     * // Get first 10 Campaigns
     * const campaigns = await prisma.campaign.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const campaignWithIdOnly = await prisma.campaign.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends CampaignFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CampaignFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CampaignPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Campaign.
     * @param {CampaignCreateArgs} args - Arguments to create a Campaign.
     * @example
     * // Create one Campaign
     * const Campaign = await prisma.campaign.create({
     *   data: {
     *     // ... data to create a Campaign
     *   }
     * })
     * 
    **/
    create<T extends CampaignCreateArgs<ExtArgs>>(
      args: SelectSubset<T, CampaignCreateArgs<ExtArgs>>
    ): Prisma__CampaignClient<$Result.GetResult<Prisma.$CampaignPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Campaigns.
     *     @param {CampaignCreateManyArgs} args - Arguments to create many Campaigns.
     *     @example
     *     // Create many Campaigns
     *     const campaign = await prisma.campaign.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends CampaignCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CampaignCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Campaign.
     * @param {CampaignDeleteArgs} args - Arguments to delete one Campaign.
     * @example
     * // Delete one Campaign
     * const Campaign = await prisma.campaign.delete({
     *   where: {
     *     // ... filter to delete one Campaign
     *   }
     * })
     * 
    **/
    delete<T extends CampaignDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, CampaignDeleteArgs<ExtArgs>>
    ): Prisma__CampaignClient<$Result.GetResult<Prisma.$CampaignPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Campaign.
     * @param {CampaignUpdateArgs} args - Arguments to update one Campaign.
     * @example
     * // Update one Campaign
     * const campaign = await prisma.campaign.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends CampaignUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, CampaignUpdateArgs<ExtArgs>>
    ): Prisma__CampaignClient<$Result.GetResult<Prisma.$CampaignPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Campaigns.
     * @param {CampaignDeleteManyArgs} args - Arguments to filter Campaigns to delete.
     * @example
     * // Delete a few Campaigns
     * const { count } = await prisma.campaign.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends CampaignDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CampaignDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Campaigns.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampaignUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Campaigns
     * const campaign = await prisma.campaign.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends CampaignUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, CampaignUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Campaign.
     * @param {CampaignUpsertArgs} args - Arguments to update or create a Campaign.
     * @example
     * // Update or create a Campaign
     * const campaign = await prisma.campaign.upsert({
     *   create: {
     *     // ... data to create a Campaign
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Campaign we want to update
     *   }
     * })
    **/
    upsert<T extends CampaignUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, CampaignUpsertArgs<ExtArgs>>
    ): Prisma__CampaignClient<$Result.GetResult<Prisma.$CampaignPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Campaigns.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampaignCountArgs} args - Arguments to filter Campaigns to count.
     * @example
     * // Count the number of Campaigns
     * const count = await prisma.campaign.count({
     *   where: {
     *     // ... the filter for the Campaigns we want to count
     *   }
     * })
    **/
    count<T extends CampaignCountArgs>(
      args?: Subset<T, CampaignCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CampaignCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Campaign.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampaignAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CampaignAggregateArgs>(args: Subset<T, CampaignAggregateArgs>): Prisma.PrismaPromise<GetCampaignAggregateType<T>>

    /**
     * Group by Campaign.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampaignGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CampaignGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CampaignGroupByArgs['orderBy'] }
        : { orderBy?: CampaignGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CampaignGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCampaignGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Campaign model
   */
  readonly fields: CampaignFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Campaign.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CampaignClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    loanType<T extends LoanTypeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LoanTypeDefaultArgs<ExtArgs>>): Prisma__LoanTypeClient<$Result.GetResult<Prisma.$LoanTypePayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Campaign model
   */ 
  interface CampaignFieldRefs {
    readonly id: FieldRef<"Campaign", 'Int'>
    readonly CampaignName: FieldRef<"Campaign", 'String'>
    readonly LoanType: FieldRef<"Campaign", 'String'>
    readonly CampaignFields: FieldRef<"Campaign", 'String'>
    readonly CampaignImg: FieldRef<"Campaign", 'String'>
    readonly isActive: FieldRef<"Campaign", 'Int'>
    readonly LoanTypeId: FieldRef<"Campaign", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * Campaign findUnique
   */
  export type CampaignFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campaign
     */
    select?: CampaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CampaignInclude<ExtArgs> | null
    /**
     * Filter, which Campaign to fetch.
     */
    where: CampaignWhereUniqueInput
  }


  /**
   * Campaign findUniqueOrThrow
   */
  export type CampaignFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campaign
     */
    select?: CampaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CampaignInclude<ExtArgs> | null
    /**
     * Filter, which Campaign to fetch.
     */
    where: CampaignWhereUniqueInput
  }


  /**
   * Campaign findFirst
   */
  export type CampaignFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campaign
     */
    select?: CampaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CampaignInclude<ExtArgs> | null
    /**
     * Filter, which Campaign to fetch.
     */
    where?: CampaignWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Campaigns to fetch.
     */
    orderBy?: CampaignOrderByWithRelationInput | CampaignOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Campaigns.
     */
    cursor?: CampaignWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Campaigns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Campaigns.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Campaigns.
     */
    distinct?: CampaignScalarFieldEnum | CampaignScalarFieldEnum[]
  }


  /**
   * Campaign findFirstOrThrow
   */
  export type CampaignFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campaign
     */
    select?: CampaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CampaignInclude<ExtArgs> | null
    /**
     * Filter, which Campaign to fetch.
     */
    where?: CampaignWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Campaigns to fetch.
     */
    orderBy?: CampaignOrderByWithRelationInput | CampaignOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Campaigns.
     */
    cursor?: CampaignWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Campaigns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Campaigns.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Campaigns.
     */
    distinct?: CampaignScalarFieldEnum | CampaignScalarFieldEnum[]
  }


  /**
   * Campaign findMany
   */
  export type CampaignFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campaign
     */
    select?: CampaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CampaignInclude<ExtArgs> | null
    /**
     * Filter, which Campaigns to fetch.
     */
    where?: CampaignWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Campaigns to fetch.
     */
    orderBy?: CampaignOrderByWithRelationInput | CampaignOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Campaigns.
     */
    cursor?: CampaignWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Campaigns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Campaigns.
     */
    skip?: number
    distinct?: CampaignScalarFieldEnum | CampaignScalarFieldEnum[]
  }


  /**
   * Campaign create
   */
  export type CampaignCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campaign
     */
    select?: CampaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CampaignInclude<ExtArgs> | null
    /**
     * The data needed to create a Campaign.
     */
    data: XOR<CampaignCreateInput, CampaignUncheckedCreateInput>
  }


  /**
   * Campaign createMany
   */
  export type CampaignCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Campaigns.
     */
    data: CampaignCreateManyInput | CampaignCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * Campaign update
   */
  export type CampaignUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campaign
     */
    select?: CampaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CampaignInclude<ExtArgs> | null
    /**
     * The data needed to update a Campaign.
     */
    data: XOR<CampaignUpdateInput, CampaignUncheckedUpdateInput>
    /**
     * Choose, which Campaign to update.
     */
    where: CampaignWhereUniqueInput
  }


  /**
   * Campaign updateMany
   */
  export type CampaignUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Campaigns.
     */
    data: XOR<CampaignUpdateManyMutationInput, CampaignUncheckedUpdateManyInput>
    /**
     * Filter which Campaigns to update
     */
    where?: CampaignWhereInput
  }


  /**
   * Campaign upsert
   */
  export type CampaignUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campaign
     */
    select?: CampaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CampaignInclude<ExtArgs> | null
    /**
     * The filter to search for the Campaign to update in case it exists.
     */
    where: CampaignWhereUniqueInput
    /**
     * In case the Campaign found by the `where` argument doesn't exist, create a new Campaign with this data.
     */
    create: XOR<CampaignCreateInput, CampaignUncheckedCreateInput>
    /**
     * In case the Campaign was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CampaignUpdateInput, CampaignUncheckedUpdateInput>
  }


  /**
   * Campaign delete
   */
  export type CampaignDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campaign
     */
    select?: CampaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CampaignInclude<ExtArgs> | null
    /**
     * Filter which Campaign to delete.
     */
    where: CampaignWhereUniqueInput
  }


  /**
   * Campaign deleteMany
   */
  export type CampaignDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Campaigns to delete
     */
    where?: CampaignWhereInput
  }


  /**
   * Campaign without action
   */
  export type CampaignDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campaign
     */
    select?: CampaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CampaignInclude<ExtArgs> | null
  }



  /**
   * Model LoanType
   */

  export type AggregateLoanType = {
    _count: LoanTypeCountAggregateOutputType | null
    _avg: LoanTypeAvgAggregateOutputType | null
    _sum: LoanTypeSumAggregateOutputType | null
    _min: LoanTypeMinAggregateOutputType | null
    _max: LoanTypeMaxAggregateOutputType | null
  }

  export type LoanTypeAvgAggregateOutputType = {
    id: number | null
  }

  export type LoanTypeSumAggregateOutputType = {
    id: number | null
  }

  export type LoanTypeMinAggregateOutputType = {
    id: number | null
    LoanType: string | null
  }

  export type LoanTypeMaxAggregateOutputType = {
    id: number | null
    LoanType: string | null
  }

  export type LoanTypeCountAggregateOutputType = {
    id: number
    LoanType: number
    _all: number
  }


  export type LoanTypeAvgAggregateInputType = {
    id?: true
  }

  export type LoanTypeSumAggregateInputType = {
    id?: true
  }

  export type LoanTypeMinAggregateInputType = {
    id?: true
    LoanType?: true
  }

  export type LoanTypeMaxAggregateInputType = {
    id?: true
    LoanType?: true
  }

  export type LoanTypeCountAggregateInputType = {
    id?: true
    LoanType?: true
    _all?: true
  }

  export type LoanTypeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LoanType to aggregate.
     */
    where?: LoanTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LoanTypes to fetch.
     */
    orderBy?: LoanTypeOrderByWithRelationInput | LoanTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LoanTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LoanTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LoanTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned LoanTypes
    **/
    _count?: true | LoanTypeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LoanTypeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LoanTypeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LoanTypeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LoanTypeMaxAggregateInputType
  }

  export type GetLoanTypeAggregateType<T extends LoanTypeAggregateArgs> = {
        [P in keyof T & keyof AggregateLoanType]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLoanType[P]>
      : GetScalarType<T[P], AggregateLoanType[P]>
  }




  export type LoanTypeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LoanTypeWhereInput
    orderBy?: LoanTypeOrderByWithAggregationInput | LoanTypeOrderByWithAggregationInput[]
    by: LoanTypeScalarFieldEnum[] | LoanTypeScalarFieldEnum
    having?: LoanTypeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LoanTypeCountAggregateInputType | true
    _avg?: LoanTypeAvgAggregateInputType
    _sum?: LoanTypeSumAggregateInputType
    _min?: LoanTypeMinAggregateInputType
    _max?: LoanTypeMaxAggregateInputType
  }

  export type LoanTypeGroupByOutputType = {
    id: number
    LoanType: string | null
    _count: LoanTypeCountAggregateOutputType | null
    _avg: LoanTypeAvgAggregateOutputType | null
    _sum: LoanTypeSumAggregateOutputType | null
    _min: LoanTypeMinAggregateOutputType | null
    _max: LoanTypeMaxAggregateOutputType | null
  }

  type GetLoanTypeGroupByPayload<T extends LoanTypeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LoanTypeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LoanTypeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LoanTypeGroupByOutputType[P]>
            : GetScalarType<T[P], LoanTypeGroupByOutputType[P]>
        }
      >
    >


  export type LoanTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    LoanType?: boolean
    campaigns?: boolean | LoanType$campaignsArgs<ExtArgs>
    _count?: boolean | LoanTypeCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["loanType"]>

  export type LoanTypeSelectScalar = {
    id?: boolean
    LoanType?: boolean
  }

  export type LoanTypeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    campaigns?: boolean | LoanType$campaignsArgs<ExtArgs>
    _count?: boolean | LoanTypeCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $LoanTypePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "LoanType"
    objects: {
      campaigns: Prisma.$CampaignPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      LoanType: string | null
    }, ExtArgs["result"]["loanType"]>
    composites: {}
  }


  type LoanTypeGetPayload<S extends boolean | null | undefined | LoanTypeDefaultArgs> = $Result.GetResult<Prisma.$LoanTypePayload, S>

  type LoanTypeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<LoanTypeFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: LoanTypeCountAggregateInputType | true
    }

  export interface LoanTypeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['LoanType'], meta: { name: 'LoanType' } }
    /**
     * Find zero or one LoanType that matches the filter.
     * @param {LoanTypeFindUniqueArgs} args - Arguments to find a LoanType
     * @example
     * // Get one LoanType
     * const loanType = await prisma.loanType.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends LoanTypeFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, LoanTypeFindUniqueArgs<ExtArgs>>
    ): Prisma__LoanTypeClient<$Result.GetResult<Prisma.$LoanTypePayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one LoanType that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {LoanTypeFindUniqueOrThrowArgs} args - Arguments to find a LoanType
     * @example
     * // Get one LoanType
     * const loanType = await prisma.loanType.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends LoanTypeFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, LoanTypeFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__LoanTypeClient<$Result.GetResult<Prisma.$LoanTypePayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first LoanType that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoanTypeFindFirstArgs} args - Arguments to find a LoanType
     * @example
     * // Get one LoanType
     * const loanType = await prisma.loanType.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends LoanTypeFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, LoanTypeFindFirstArgs<ExtArgs>>
    ): Prisma__LoanTypeClient<$Result.GetResult<Prisma.$LoanTypePayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first LoanType that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoanTypeFindFirstOrThrowArgs} args - Arguments to find a LoanType
     * @example
     * // Get one LoanType
     * const loanType = await prisma.loanType.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends LoanTypeFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, LoanTypeFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__LoanTypeClient<$Result.GetResult<Prisma.$LoanTypePayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more LoanTypes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoanTypeFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all LoanTypes
     * const loanTypes = await prisma.loanType.findMany()
     * 
     * // Get first 10 LoanTypes
     * const loanTypes = await prisma.loanType.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const loanTypeWithIdOnly = await prisma.loanType.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends LoanTypeFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, LoanTypeFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LoanTypePayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a LoanType.
     * @param {LoanTypeCreateArgs} args - Arguments to create a LoanType.
     * @example
     * // Create one LoanType
     * const LoanType = await prisma.loanType.create({
     *   data: {
     *     // ... data to create a LoanType
     *   }
     * })
     * 
    **/
    create<T extends LoanTypeCreateArgs<ExtArgs>>(
      args: SelectSubset<T, LoanTypeCreateArgs<ExtArgs>>
    ): Prisma__LoanTypeClient<$Result.GetResult<Prisma.$LoanTypePayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many LoanTypes.
     *     @param {LoanTypeCreateManyArgs} args - Arguments to create many LoanTypes.
     *     @example
     *     // Create many LoanTypes
     *     const loanType = await prisma.loanType.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends LoanTypeCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, LoanTypeCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a LoanType.
     * @param {LoanTypeDeleteArgs} args - Arguments to delete one LoanType.
     * @example
     * // Delete one LoanType
     * const LoanType = await prisma.loanType.delete({
     *   where: {
     *     // ... filter to delete one LoanType
     *   }
     * })
     * 
    **/
    delete<T extends LoanTypeDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, LoanTypeDeleteArgs<ExtArgs>>
    ): Prisma__LoanTypeClient<$Result.GetResult<Prisma.$LoanTypePayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one LoanType.
     * @param {LoanTypeUpdateArgs} args - Arguments to update one LoanType.
     * @example
     * // Update one LoanType
     * const loanType = await prisma.loanType.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends LoanTypeUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, LoanTypeUpdateArgs<ExtArgs>>
    ): Prisma__LoanTypeClient<$Result.GetResult<Prisma.$LoanTypePayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more LoanTypes.
     * @param {LoanTypeDeleteManyArgs} args - Arguments to filter LoanTypes to delete.
     * @example
     * // Delete a few LoanTypes
     * const { count } = await prisma.loanType.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends LoanTypeDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, LoanTypeDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LoanTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoanTypeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many LoanTypes
     * const loanType = await prisma.loanType.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends LoanTypeUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, LoanTypeUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one LoanType.
     * @param {LoanTypeUpsertArgs} args - Arguments to update or create a LoanType.
     * @example
     * // Update or create a LoanType
     * const loanType = await prisma.loanType.upsert({
     *   create: {
     *     // ... data to create a LoanType
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the LoanType we want to update
     *   }
     * })
    **/
    upsert<T extends LoanTypeUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, LoanTypeUpsertArgs<ExtArgs>>
    ): Prisma__LoanTypeClient<$Result.GetResult<Prisma.$LoanTypePayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of LoanTypes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoanTypeCountArgs} args - Arguments to filter LoanTypes to count.
     * @example
     * // Count the number of LoanTypes
     * const count = await prisma.loanType.count({
     *   where: {
     *     // ... the filter for the LoanTypes we want to count
     *   }
     * })
    **/
    count<T extends LoanTypeCountArgs>(
      args?: Subset<T, LoanTypeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LoanTypeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a LoanType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoanTypeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LoanTypeAggregateArgs>(args: Subset<T, LoanTypeAggregateArgs>): Prisma.PrismaPromise<GetLoanTypeAggregateType<T>>

    /**
     * Group by LoanType.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoanTypeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LoanTypeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LoanTypeGroupByArgs['orderBy'] }
        : { orderBy?: LoanTypeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LoanTypeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLoanTypeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the LoanType model
   */
  readonly fields: LoanTypeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for LoanType.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LoanTypeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    campaigns<T extends LoanType$campaignsArgs<ExtArgs> = {}>(args?: Subset<T, LoanType$campaignsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CampaignPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the LoanType model
   */ 
  interface LoanTypeFieldRefs {
    readonly id: FieldRef<"LoanType", 'Int'>
    readonly LoanType: FieldRef<"LoanType", 'String'>
  }
    

  // Custom InputTypes

  /**
   * LoanType findUnique
   */
  export type LoanTypeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LoanType
     */
    select?: LoanTypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LoanTypeInclude<ExtArgs> | null
    /**
     * Filter, which LoanType to fetch.
     */
    where: LoanTypeWhereUniqueInput
  }


  /**
   * LoanType findUniqueOrThrow
   */
  export type LoanTypeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LoanType
     */
    select?: LoanTypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LoanTypeInclude<ExtArgs> | null
    /**
     * Filter, which LoanType to fetch.
     */
    where: LoanTypeWhereUniqueInput
  }


  /**
   * LoanType findFirst
   */
  export type LoanTypeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LoanType
     */
    select?: LoanTypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LoanTypeInclude<ExtArgs> | null
    /**
     * Filter, which LoanType to fetch.
     */
    where?: LoanTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LoanTypes to fetch.
     */
    orderBy?: LoanTypeOrderByWithRelationInput | LoanTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LoanTypes.
     */
    cursor?: LoanTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LoanTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LoanTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LoanTypes.
     */
    distinct?: LoanTypeScalarFieldEnum | LoanTypeScalarFieldEnum[]
  }


  /**
   * LoanType findFirstOrThrow
   */
  export type LoanTypeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LoanType
     */
    select?: LoanTypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LoanTypeInclude<ExtArgs> | null
    /**
     * Filter, which LoanType to fetch.
     */
    where?: LoanTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LoanTypes to fetch.
     */
    orderBy?: LoanTypeOrderByWithRelationInput | LoanTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LoanTypes.
     */
    cursor?: LoanTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LoanTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LoanTypes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LoanTypes.
     */
    distinct?: LoanTypeScalarFieldEnum | LoanTypeScalarFieldEnum[]
  }


  /**
   * LoanType findMany
   */
  export type LoanTypeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LoanType
     */
    select?: LoanTypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LoanTypeInclude<ExtArgs> | null
    /**
     * Filter, which LoanTypes to fetch.
     */
    where?: LoanTypeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LoanTypes to fetch.
     */
    orderBy?: LoanTypeOrderByWithRelationInput | LoanTypeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing LoanTypes.
     */
    cursor?: LoanTypeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LoanTypes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LoanTypes.
     */
    skip?: number
    distinct?: LoanTypeScalarFieldEnum | LoanTypeScalarFieldEnum[]
  }


  /**
   * LoanType create
   */
  export type LoanTypeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LoanType
     */
    select?: LoanTypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LoanTypeInclude<ExtArgs> | null
    /**
     * The data needed to create a LoanType.
     */
    data?: XOR<LoanTypeCreateInput, LoanTypeUncheckedCreateInput>
  }


  /**
   * LoanType createMany
   */
  export type LoanTypeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many LoanTypes.
     */
    data: LoanTypeCreateManyInput | LoanTypeCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * LoanType update
   */
  export type LoanTypeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LoanType
     */
    select?: LoanTypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LoanTypeInclude<ExtArgs> | null
    /**
     * The data needed to update a LoanType.
     */
    data: XOR<LoanTypeUpdateInput, LoanTypeUncheckedUpdateInput>
    /**
     * Choose, which LoanType to update.
     */
    where: LoanTypeWhereUniqueInput
  }


  /**
   * LoanType updateMany
   */
  export type LoanTypeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update LoanTypes.
     */
    data: XOR<LoanTypeUpdateManyMutationInput, LoanTypeUncheckedUpdateManyInput>
    /**
     * Filter which LoanTypes to update
     */
    where?: LoanTypeWhereInput
  }


  /**
   * LoanType upsert
   */
  export type LoanTypeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LoanType
     */
    select?: LoanTypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LoanTypeInclude<ExtArgs> | null
    /**
     * The filter to search for the LoanType to update in case it exists.
     */
    where: LoanTypeWhereUniqueInput
    /**
     * In case the LoanType found by the `where` argument doesn't exist, create a new LoanType with this data.
     */
    create: XOR<LoanTypeCreateInput, LoanTypeUncheckedCreateInput>
    /**
     * In case the LoanType was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LoanTypeUpdateInput, LoanTypeUncheckedUpdateInput>
  }


  /**
   * LoanType delete
   */
  export type LoanTypeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LoanType
     */
    select?: LoanTypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LoanTypeInclude<ExtArgs> | null
    /**
     * Filter which LoanType to delete.
     */
    where: LoanTypeWhereUniqueInput
  }


  /**
   * LoanType deleteMany
   */
  export type LoanTypeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LoanTypes to delete
     */
    where?: LoanTypeWhereInput
  }


  /**
   * LoanType.campaigns
   */
  export type LoanType$campaignsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campaign
     */
    select?: CampaignSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CampaignInclude<ExtArgs> | null
    where?: CampaignWhereInput
    orderBy?: CampaignOrderByWithRelationInput | CampaignOrderByWithRelationInput[]
    cursor?: CampaignWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CampaignScalarFieldEnum | CampaignScalarFieldEnum[]
  }


  /**
   * LoanType without action
   */
  export type LoanTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LoanType
     */
    select?: LoanTypeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LoanTypeInclude<ExtArgs> | null
  }



  /**
   * Model Lead
   */

  export type AggregateLead = {
    _count: LeadCountAggregateOutputType | null
    _avg: LeadAvgAggregateOutputType | null
    _sum: LeadSumAggregateOutputType | null
    _min: LeadMinAggregateOutputType | null
    _max: LeadMaxAggregateOutputType | null
  }

  export type LeadAvgAggregateOutputType = {
    LeadId: number | null
    LoanType: number | null
    Age: number | null
    Gender: number | null
    MaritalStatus: number | null
    Profession: number | null
    Tobacco: number | null
    Education: number | null
    CompanyType: number | null
    NetMonthlyIncome: number | null
    ActiveCreditcardHolder: number | null
    LoanAmountRequired: number | null
    CompanyTurnover: number | null
    BusinessAgeInYears: number | null
    BusinessOwnership: number | null
    PromoterGender: number | null
    PromoterOwnership: number | null
    IsMobileNumberVerified: number | null
    Email_Verified: number | null
    Latitude: number | null
    Longitude: number | null
  }

  export type LeadSumAggregateOutputType = {
    LeadId: number | null
    LoanType: number | null
    Age: number | null
    Gender: number | null
    MaritalStatus: number | null
    Profession: number | null
    Tobacco: number | null
    Education: number | null
    CompanyType: number | null
    NetMonthlyIncome: number | null
    ActiveCreditcardHolder: number | null
    LoanAmountRequired: number | null
    CompanyTurnover: number | null
    BusinessAgeInYears: number | null
    BusinessOwnership: number | null
    PromoterGender: number | null
    PromoterOwnership: number | null
    IsMobileNumberVerified: number | null
    Email_Verified: number | null
    Latitude: number | null
    Longitude: number | null
  }

  export type LeadMinAggregateOutputType = {
    LeadId: number | null
    LoanType: number | null
    FirstName: string | null
    LastName: string | null
    MobileNumber: string | null
    LeadCaptureDateTime: Date | null
    Email: string | null
    Dob: Date | null
    Age: number | null
    Gender: number | null
    MaritalStatus: number | null
    Profession: number | null
    Pancard: string | null
    AadharNumber: string | null
    CurrentAddress: string | null
    CurrentAddress2: string | null
    CurrentPincode: string | null
    CurrentCity: string | null
    CurrentState: string | null
    Tobacco: number | null
    CurrentResidenceType: string | null
    FatherName: string | null
    MotherName: string | null
    Education: number | null
    IpAddress: string | null
    CompanyType: number | null
    IndustryType: string | null
    CompanyName: string | null
    CurrentDesignation: string | null
    CompanyAddress: string | null
    Landmark: string | null
    CompanyPincode: string | null
    CompanyCity: string | null
    NetMonthlyIncome: number | null
    BankName: string | null
    ActiveCreditcardHolder: number | null
    OfficialEmailId: string | null
    LoanAmountRequired: number | null
    LoanTenure: string | null
    Businesspan: string | null
    Gst: string | null
    CompanyTurnover: number | null
    BusinessAgeInYears: number | null
    BusinessOwnership: number | null
    PromoterfirstName: string | null
    PromoterlastName: string | null
    PromoterEmail: string | null
    PromoterDob: Date | null
    PromoterGender: number | null
    PromoterPancard: string | null
    PromoterAddress: string | null
    PromoterOwnership: number | null
    OTP: string | null
    otpGenerationDateTime: Date | null
    IsMobileNumberVerified: number | null
    Email_Verified: number | null
    Latitude: number | null
    Longitude: number | null
    Location: string | null
    UtmSource: string | null
    Pid: string | null
    UserBrowser: string | null
    UserDevice: string | null
    UserOs: string | null
    UniqueToken: string | null
  }

  export type LeadMaxAggregateOutputType = {
    LeadId: number | null
    LoanType: number | null
    FirstName: string | null
    LastName: string | null
    MobileNumber: string | null
    LeadCaptureDateTime: Date | null
    Email: string | null
    Dob: Date | null
    Age: number | null
    Gender: number | null
    MaritalStatus: number | null
    Profession: number | null
    Pancard: string | null
    AadharNumber: string | null
    CurrentAddress: string | null
    CurrentAddress2: string | null
    CurrentPincode: string | null
    CurrentCity: string | null
    CurrentState: string | null
    Tobacco: number | null
    CurrentResidenceType: string | null
    FatherName: string | null
    MotherName: string | null
    Education: number | null
    IpAddress: string | null
    CompanyType: number | null
    IndustryType: string | null
    CompanyName: string | null
    CurrentDesignation: string | null
    CompanyAddress: string | null
    Landmark: string | null
    CompanyPincode: string | null
    CompanyCity: string | null
    NetMonthlyIncome: number | null
    BankName: string | null
    ActiveCreditcardHolder: number | null
    OfficialEmailId: string | null
    LoanAmountRequired: number | null
    LoanTenure: string | null
    Businesspan: string | null
    Gst: string | null
    CompanyTurnover: number | null
    BusinessAgeInYears: number | null
    BusinessOwnership: number | null
    PromoterfirstName: string | null
    PromoterlastName: string | null
    PromoterEmail: string | null
    PromoterDob: Date | null
    PromoterGender: number | null
    PromoterPancard: string | null
    PromoterAddress: string | null
    PromoterOwnership: number | null
    OTP: string | null
    otpGenerationDateTime: Date | null
    IsMobileNumberVerified: number | null
    Email_Verified: number | null
    Latitude: number | null
    Longitude: number | null
    Location: string | null
    UtmSource: string | null
    Pid: string | null
    UserBrowser: string | null
    UserDevice: string | null
    UserOs: string | null
    UniqueToken: string | null
  }

  export type LeadCountAggregateOutputType = {
    LeadId: number
    LoanType: number
    FirstName: number
    LastName: number
    MobileNumber: number
    LeadCaptureDateTime: number
    Email: number
    Dob: number
    Age: number
    Gender: number
    MaritalStatus: number
    Profession: number
    Pancard: number
    AadharNumber: number
    CurrentAddress: number
    CurrentAddress2: number
    CurrentPincode: number
    CurrentCity: number
    CurrentState: number
    Tobacco: number
    CurrentResidenceType: number
    FatherName: number
    MotherName: number
    Education: number
    IpAddress: number
    CompanyType: number
    IndustryType: number
    CompanyName: number
    CurrentDesignation: number
    CompanyAddress: number
    Landmark: number
    CompanyPincode: number
    CompanyCity: number
    NetMonthlyIncome: number
    BankName: number
    ActiveCreditcardHolder: number
    OfficialEmailId: number
    LoanAmountRequired: number
    LoanTenure: number
    Businesspan: number
    Gst: number
    CompanyTurnover: number
    BusinessAgeInYears: number
    BusinessOwnership: number
    PromoterfirstName: number
    PromoterlastName: number
    PromoterEmail: number
    PromoterDob: number
    PromoterGender: number
    PromoterPancard: number
    PromoterAddress: number
    PromoterOwnership: number
    OTP: number
    otpGenerationDateTime: number
    IsMobileNumberVerified: number
    Email_Verified: number
    Latitude: number
    Longitude: number
    Location: number
    UtmSource: number
    Pid: number
    UserBrowser: number
    UserDevice: number
    UserOs: number
    UniqueToken: number
    _all: number
  }


  export type LeadAvgAggregateInputType = {
    LeadId?: true
    LoanType?: true
    Age?: true
    Gender?: true
    MaritalStatus?: true
    Profession?: true
    Tobacco?: true
    Education?: true
    CompanyType?: true
    NetMonthlyIncome?: true
    ActiveCreditcardHolder?: true
    LoanAmountRequired?: true
    CompanyTurnover?: true
    BusinessAgeInYears?: true
    BusinessOwnership?: true
    PromoterGender?: true
    PromoterOwnership?: true
    IsMobileNumberVerified?: true
    Email_Verified?: true
    Latitude?: true
    Longitude?: true
  }

  export type LeadSumAggregateInputType = {
    LeadId?: true
    LoanType?: true
    Age?: true
    Gender?: true
    MaritalStatus?: true
    Profession?: true
    Tobacco?: true
    Education?: true
    CompanyType?: true
    NetMonthlyIncome?: true
    ActiveCreditcardHolder?: true
    LoanAmountRequired?: true
    CompanyTurnover?: true
    BusinessAgeInYears?: true
    BusinessOwnership?: true
    PromoterGender?: true
    PromoterOwnership?: true
    IsMobileNumberVerified?: true
    Email_Verified?: true
    Latitude?: true
    Longitude?: true
  }

  export type LeadMinAggregateInputType = {
    LeadId?: true
    LoanType?: true
    FirstName?: true
    LastName?: true
    MobileNumber?: true
    LeadCaptureDateTime?: true
    Email?: true
    Dob?: true
    Age?: true
    Gender?: true
    MaritalStatus?: true
    Profession?: true
    Pancard?: true
    AadharNumber?: true
    CurrentAddress?: true
    CurrentAddress2?: true
    CurrentPincode?: true
    CurrentCity?: true
    CurrentState?: true
    Tobacco?: true
    CurrentResidenceType?: true
    FatherName?: true
    MotherName?: true
    Education?: true
    IpAddress?: true
    CompanyType?: true
    IndustryType?: true
    CompanyName?: true
    CurrentDesignation?: true
    CompanyAddress?: true
    Landmark?: true
    CompanyPincode?: true
    CompanyCity?: true
    NetMonthlyIncome?: true
    BankName?: true
    ActiveCreditcardHolder?: true
    OfficialEmailId?: true
    LoanAmountRequired?: true
    LoanTenure?: true
    Businesspan?: true
    Gst?: true
    CompanyTurnover?: true
    BusinessAgeInYears?: true
    BusinessOwnership?: true
    PromoterfirstName?: true
    PromoterlastName?: true
    PromoterEmail?: true
    PromoterDob?: true
    PromoterGender?: true
    PromoterPancard?: true
    PromoterAddress?: true
    PromoterOwnership?: true
    OTP?: true
    otpGenerationDateTime?: true
    IsMobileNumberVerified?: true
    Email_Verified?: true
    Latitude?: true
    Longitude?: true
    Location?: true
    UtmSource?: true
    Pid?: true
    UserBrowser?: true
    UserDevice?: true
    UserOs?: true
    UniqueToken?: true
  }

  export type LeadMaxAggregateInputType = {
    LeadId?: true
    LoanType?: true
    FirstName?: true
    LastName?: true
    MobileNumber?: true
    LeadCaptureDateTime?: true
    Email?: true
    Dob?: true
    Age?: true
    Gender?: true
    MaritalStatus?: true
    Profession?: true
    Pancard?: true
    AadharNumber?: true
    CurrentAddress?: true
    CurrentAddress2?: true
    CurrentPincode?: true
    CurrentCity?: true
    CurrentState?: true
    Tobacco?: true
    CurrentResidenceType?: true
    FatherName?: true
    MotherName?: true
    Education?: true
    IpAddress?: true
    CompanyType?: true
    IndustryType?: true
    CompanyName?: true
    CurrentDesignation?: true
    CompanyAddress?: true
    Landmark?: true
    CompanyPincode?: true
    CompanyCity?: true
    NetMonthlyIncome?: true
    BankName?: true
    ActiveCreditcardHolder?: true
    OfficialEmailId?: true
    LoanAmountRequired?: true
    LoanTenure?: true
    Businesspan?: true
    Gst?: true
    CompanyTurnover?: true
    BusinessAgeInYears?: true
    BusinessOwnership?: true
    PromoterfirstName?: true
    PromoterlastName?: true
    PromoterEmail?: true
    PromoterDob?: true
    PromoterGender?: true
    PromoterPancard?: true
    PromoterAddress?: true
    PromoterOwnership?: true
    OTP?: true
    otpGenerationDateTime?: true
    IsMobileNumberVerified?: true
    Email_Verified?: true
    Latitude?: true
    Longitude?: true
    Location?: true
    UtmSource?: true
    Pid?: true
    UserBrowser?: true
    UserDevice?: true
    UserOs?: true
    UniqueToken?: true
  }

  export type LeadCountAggregateInputType = {
    LeadId?: true
    LoanType?: true
    FirstName?: true
    LastName?: true
    MobileNumber?: true
    LeadCaptureDateTime?: true
    Email?: true
    Dob?: true
    Age?: true
    Gender?: true
    MaritalStatus?: true
    Profession?: true
    Pancard?: true
    AadharNumber?: true
    CurrentAddress?: true
    CurrentAddress2?: true
    CurrentPincode?: true
    CurrentCity?: true
    CurrentState?: true
    Tobacco?: true
    CurrentResidenceType?: true
    FatherName?: true
    MotherName?: true
    Education?: true
    IpAddress?: true
    CompanyType?: true
    IndustryType?: true
    CompanyName?: true
    CurrentDesignation?: true
    CompanyAddress?: true
    Landmark?: true
    CompanyPincode?: true
    CompanyCity?: true
    NetMonthlyIncome?: true
    BankName?: true
    ActiveCreditcardHolder?: true
    OfficialEmailId?: true
    LoanAmountRequired?: true
    LoanTenure?: true
    Businesspan?: true
    Gst?: true
    CompanyTurnover?: true
    BusinessAgeInYears?: true
    BusinessOwnership?: true
    PromoterfirstName?: true
    PromoterlastName?: true
    PromoterEmail?: true
    PromoterDob?: true
    PromoterGender?: true
    PromoterPancard?: true
    PromoterAddress?: true
    PromoterOwnership?: true
    OTP?: true
    otpGenerationDateTime?: true
    IsMobileNumberVerified?: true
    Email_Verified?: true
    Latitude?: true
    Longitude?: true
    Location?: true
    UtmSource?: true
    Pid?: true
    UserBrowser?: true
    UserDevice?: true
    UserOs?: true
    UniqueToken?: true
    _all?: true
  }

  export type LeadAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Lead to aggregate.
     */
    where?: LeadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Leads to fetch.
     */
    orderBy?: LeadOrderByWithRelationInput | LeadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LeadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Leads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Leads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Leads
    **/
    _count?: true | LeadCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LeadAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LeadSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LeadMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LeadMaxAggregateInputType
  }

  export type GetLeadAggregateType<T extends LeadAggregateArgs> = {
        [P in keyof T & keyof AggregateLead]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLead[P]>
      : GetScalarType<T[P], AggregateLead[P]>
  }




  export type LeadGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LeadWhereInput
    orderBy?: LeadOrderByWithAggregationInput | LeadOrderByWithAggregationInput[]
    by: LeadScalarFieldEnum[] | LeadScalarFieldEnum
    having?: LeadScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LeadCountAggregateInputType | true
    _avg?: LeadAvgAggregateInputType
    _sum?: LeadSumAggregateInputType
    _min?: LeadMinAggregateInputType
    _max?: LeadMaxAggregateInputType
  }

  export type LeadGroupByOutputType = {
    LeadId: number
    LoanType: number | null
    FirstName: string | null
    LastName: string | null
    MobileNumber: string | null
    LeadCaptureDateTime: Date
    Email: string | null
    Dob: Date | null
    Age: number | null
    Gender: number | null
    MaritalStatus: number | null
    Profession: number | null
    Pancard: string | null
    AadharNumber: string | null
    CurrentAddress: string | null
    CurrentAddress2: string | null
    CurrentPincode: string | null
    CurrentCity: string | null
    CurrentState: string | null
    Tobacco: number | null
    CurrentResidenceType: string | null
    FatherName: string | null
    MotherName: string | null
    Education: number | null
    IpAddress: string
    CompanyType: number | null
    IndustryType: string | null
    CompanyName: string | null
    CurrentDesignation: string | null
    CompanyAddress: string | null
    Landmark: string | null
    CompanyPincode: string | null
    CompanyCity: string | null
    NetMonthlyIncome: number | null
    BankName: string | null
    ActiveCreditcardHolder: number | null
    OfficialEmailId: string | null
    LoanAmountRequired: number | null
    LoanTenure: string | null
    Businesspan: string | null
    Gst: string | null
    CompanyTurnover: number | null
    BusinessAgeInYears: number | null
    BusinessOwnership: number | null
    PromoterfirstName: string | null
    PromoterlastName: string | null
    PromoterEmail: string | null
    PromoterDob: Date | null
    PromoterGender: number | null
    PromoterPancard: string | null
    PromoterAddress: string | null
    PromoterOwnership: number | null
    OTP: string | null
    otpGenerationDateTime: Date | null
    IsMobileNumberVerified: number | null
    Email_Verified: number | null
    Latitude: number | null
    Longitude: number | null
    Location: string | null
    UtmSource: string | null
    Pid: string | null
    UserBrowser: string | null
    UserDevice: string | null
    UserOs: string | null
    UniqueToken: string | null
    _count: LeadCountAggregateOutputType | null
    _avg: LeadAvgAggregateOutputType | null
    _sum: LeadSumAggregateOutputType | null
    _min: LeadMinAggregateOutputType | null
    _max: LeadMaxAggregateOutputType | null
  }

  type GetLeadGroupByPayload<T extends LeadGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LeadGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LeadGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LeadGroupByOutputType[P]>
            : GetScalarType<T[P], LeadGroupByOutputType[P]>
        }
      >
    >


  export type LeadSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    LeadId?: boolean
    LoanType?: boolean
    FirstName?: boolean
    LastName?: boolean
    MobileNumber?: boolean
    LeadCaptureDateTime?: boolean
    Email?: boolean
    Dob?: boolean
    Age?: boolean
    Gender?: boolean
    MaritalStatus?: boolean
    Profession?: boolean
    Pancard?: boolean
    AadharNumber?: boolean
    CurrentAddress?: boolean
    CurrentAddress2?: boolean
    CurrentPincode?: boolean
    CurrentCity?: boolean
    CurrentState?: boolean
    Tobacco?: boolean
    CurrentResidenceType?: boolean
    FatherName?: boolean
    MotherName?: boolean
    Education?: boolean
    IpAddress?: boolean
    CompanyType?: boolean
    IndustryType?: boolean
    CompanyName?: boolean
    CurrentDesignation?: boolean
    CompanyAddress?: boolean
    Landmark?: boolean
    CompanyPincode?: boolean
    CompanyCity?: boolean
    NetMonthlyIncome?: boolean
    BankName?: boolean
    ActiveCreditcardHolder?: boolean
    OfficialEmailId?: boolean
    LoanAmountRequired?: boolean
    LoanTenure?: boolean
    Businesspan?: boolean
    Gst?: boolean
    CompanyTurnover?: boolean
    BusinessAgeInYears?: boolean
    BusinessOwnership?: boolean
    PromoterfirstName?: boolean
    PromoterlastName?: boolean
    PromoterEmail?: boolean
    PromoterDob?: boolean
    PromoterGender?: boolean
    PromoterPancard?: boolean
    PromoterAddress?: boolean
    PromoterOwnership?: boolean
    OTP?: boolean
    otpGenerationDateTime?: boolean
    IsMobileNumberVerified?: boolean
    Email_Verified?: boolean
    Latitude?: boolean
    Longitude?: boolean
    Location?: boolean
    UtmSource?: boolean
    Pid?: boolean
    UserBrowser?: boolean
    UserDevice?: boolean
    UserOs?: boolean
    UniqueToken?: boolean
    leadToPushRecord?: boolean | Lead$leadToPushRecordArgs<ExtArgs>
  }, ExtArgs["result"]["lead"]>

  export type LeadSelectScalar = {
    LeadId?: boolean
    LoanType?: boolean
    FirstName?: boolean
    LastName?: boolean
    MobileNumber?: boolean
    LeadCaptureDateTime?: boolean
    Email?: boolean
    Dob?: boolean
    Age?: boolean
    Gender?: boolean
    MaritalStatus?: boolean
    Profession?: boolean
    Pancard?: boolean
    AadharNumber?: boolean
    CurrentAddress?: boolean
    CurrentAddress2?: boolean
    CurrentPincode?: boolean
    CurrentCity?: boolean
    CurrentState?: boolean
    Tobacco?: boolean
    CurrentResidenceType?: boolean
    FatherName?: boolean
    MotherName?: boolean
    Education?: boolean
    IpAddress?: boolean
    CompanyType?: boolean
    IndustryType?: boolean
    CompanyName?: boolean
    CurrentDesignation?: boolean
    CompanyAddress?: boolean
    Landmark?: boolean
    CompanyPincode?: boolean
    CompanyCity?: boolean
    NetMonthlyIncome?: boolean
    BankName?: boolean
    ActiveCreditcardHolder?: boolean
    OfficialEmailId?: boolean
    LoanAmountRequired?: boolean
    LoanTenure?: boolean
    Businesspan?: boolean
    Gst?: boolean
    CompanyTurnover?: boolean
    BusinessAgeInYears?: boolean
    BusinessOwnership?: boolean
    PromoterfirstName?: boolean
    PromoterlastName?: boolean
    PromoterEmail?: boolean
    PromoterDob?: boolean
    PromoterGender?: boolean
    PromoterPancard?: boolean
    PromoterAddress?: boolean
    PromoterOwnership?: boolean
    OTP?: boolean
    otpGenerationDateTime?: boolean
    IsMobileNumberVerified?: boolean
    Email_Verified?: boolean
    Latitude?: boolean
    Longitude?: boolean
    Location?: boolean
    UtmSource?: boolean
    Pid?: boolean
    UserBrowser?: boolean
    UserDevice?: boolean
    UserOs?: boolean
    UniqueToken?: boolean
  }

  export type LeadInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    leadToPushRecord?: boolean | Lead$leadToPushRecordArgs<ExtArgs>
  }


  export type $LeadPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Lead"
    objects: {
      leadToPushRecord: Prisma.$LeadToPushRecordPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      LeadId: number
      LoanType: number | null
      FirstName: string | null
      LastName: string | null
      MobileNumber: string | null
      LeadCaptureDateTime: Date
      Email: string | null
      Dob: Date | null
      Age: number | null
      Gender: number | null
      MaritalStatus: number | null
      Profession: number | null
      Pancard: string | null
      AadharNumber: string | null
      CurrentAddress: string | null
      CurrentAddress2: string | null
      CurrentPincode: string | null
      CurrentCity: string | null
      CurrentState: string | null
      Tobacco: number | null
      CurrentResidenceType: string | null
      FatherName: string | null
      MotherName: string | null
      Education: number | null
      IpAddress: string
      CompanyType: number | null
      IndustryType: string | null
      CompanyName: string | null
      CurrentDesignation: string | null
      CompanyAddress: string | null
      Landmark: string | null
      CompanyPincode: string | null
      CompanyCity: string | null
      NetMonthlyIncome: number | null
      BankName: string | null
      ActiveCreditcardHolder: number | null
      OfficialEmailId: string | null
      LoanAmountRequired: number | null
      LoanTenure: string | null
      Businesspan: string | null
      Gst: string | null
      CompanyTurnover: number | null
      BusinessAgeInYears: number | null
      BusinessOwnership: number | null
      PromoterfirstName: string | null
      PromoterlastName: string | null
      PromoterEmail: string | null
      PromoterDob: Date | null
      PromoterGender: number | null
      PromoterPancard: string | null
      PromoterAddress: string | null
      PromoterOwnership: number | null
      OTP: string | null
      otpGenerationDateTime: Date | null
      IsMobileNumberVerified: number | null
      Email_Verified: number | null
      Latitude: number | null
      Longitude: number | null
      Location: string | null
      UtmSource: string | null
      Pid: string | null
      UserBrowser: string | null
      UserDevice: string | null
      UserOs: string | null
      UniqueToken: string | null
    }, ExtArgs["result"]["lead"]>
    composites: {}
  }


  type LeadGetPayload<S extends boolean | null | undefined | LeadDefaultArgs> = $Result.GetResult<Prisma.$LeadPayload, S>

  type LeadCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<LeadFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: LeadCountAggregateInputType | true
    }

  export interface LeadDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Lead'], meta: { name: 'Lead' } }
    /**
     * Find zero or one Lead that matches the filter.
     * @param {LeadFindUniqueArgs} args - Arguments to find a Lead
     * @example
     * // Get one Lead
     * const lead = await prisma.lead.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends LeadFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, LeadFindUniqueArgs<ExtArgs>>
    ): Prisma__LeadClient<$Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Lead that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {LeadFindUniqueOrThrowArgs} args - Arguments to find a Lead
     * @example
     * // Get one Lead
     * const lead = await prisma.lead.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends LeadFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, LeadFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__LeadClient<$Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Lead that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadFindFirstArgs} args - Arguments to find a Lead
     * @example
     * // Get one Lead
     * const lead = await prisma.lead.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends LeadFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, LeadFindFirstArgs<ExtArgs>>
    ): Prisma__LeadClient<$Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Lead that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadFindFirstOrThrowArgs} args - Arguments to find a Lead
     * @example
     * // Get one Lead
     * const lead = await prisma.lead.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends LeadFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, LeadFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__LeadClient<$Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Leads that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Leads
     * const leads = await prisma.lead.findMany()
     * 
     * // Get first 10 Leads
     * const leads = await prisma.lead.findMany({ take: 10 })
     * 
     * // Only select the `LeadId`
     * const leadWithLeadIdOnly = await prisma.lead.findMany({ select: { LeadId: true } })
     * 
    **/
    findMany<T extends LeadFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, LeadFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Lead.
     * @param {LeadCreateArgs} args - Arguments to create a Lead.
     * @example
     * // Create one Lead
     * const Lead = await prisma.lead.create({
     *   data: {
     *     // ... data to create a Lead
     *   }
     * })
     * 
    **/
    create<T extends LeadCreateArgs<ExtArgs>>(
      args: SelectSubset<T, LeadCreateArgs<ExtArgs>>
    ): Prisma__LeadClient<$Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Leads.
     *     @param {LeadCreateManyArgs} args - Arguments to create many Leads.
     *     @example
     *     // Create many Leads
     *     const lead = await prisma.lead.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends LeadCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, LeadCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Lead.
     * @param {LeadDeleteArgs} args - Arguments to delete one Lead.
     * @example
     * // Delete one Lead
     * const Lead = await prisma.lead.delete({
     *   where: {
     *     // ... filter to delete one Lead
     *   }
     * })
     * 
    **/
    delete<T extends LeadDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, LeadDeleteArgs<ExtArgs>>
    ): Prisma__LeadClient<$Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Lead.
     * @param {LeadUpdateArgs} args - Arguments to update one Lead.
     * @example
     * // Update one Lead
     * const lead = await prisma.lead.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends LeadUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, LeadUpdateArgs<ExtArgs>>
    ): Prisma__LeadClient<$Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Leads.
     * @param {LeadDeleteManyArgs} args - Arguments to filter Leads to delete.
     * @example
     * // Delete a few Leads
     * const { count } = await prisma.lead.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends LeadDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, LeadDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Leads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Leads
     * const lead = await prisma.lead.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends LeadUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, LeadUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Lead.
     * @param {LeadUpsertArgs} args - Arguments to update or create a Lead.
     * @example
     * // Update or create a Lead
     * const lead = await prisma.lead.upsert({
     *   create: {
     *     // ... data to create a Lead
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Lead we want to update
     *   }
     * })
    **/
    upsert<T extends LeadUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, LeadUpsertArgs<ExtArgs>>
    ): Prisma__LeadClient<$Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Leads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadCountArgs} args - Arguments to filter Leads to count.
     * @example
     * // Count the number of Leads
     * const count = await prisma.lead.count({
     *   where: {
     *     // ... the filter for the Leads we want to count
     *   }
     * })
    **/
    count<T extends LeadCountArgs>(
      args?: Subset<T, LeadCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LeadCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Lead.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LeadAggregateArgs>(args: Subset<T, LeadAggregateArgs>): Prisma.PrismaPromise<GetLeadAggregateType<T>>

    /**
     * Group by Lead.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LeadGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LeadGroupByArgs['orderBy'] }
        : { orderBy?: LeadGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LeadGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLeadGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Lead model
   */
  readonly fields: LeadFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Lead.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LeadClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    leadToPushRecord<T extends Lead$leadToPushRecordArgs<ExtArgs> = {}>(args?: Subset<T, Lead$leadToPushRecordArgs<ExtArgs>>): Prisma__LeadToPushRecordClient<$Result.GetResult<Prisma.$LeadToPushRecordPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Lead model
   */ 
  interface LeadFieldRefs {
    readonly LeadId: FieldRef<"Lead", 'Int'>
    readonly LoanType: FieldRef<"Lead", 'Int'>
    readonly FirstName: FieldRef<"Lead", 'String'>
    readonly LastName: FieldRef<"Lead", 'String'>
    readonly MobileNumber: FieldRef<"Lead", 'String'>
    readonly LeadCaptureDateTime: FieldRef<"Lead", 'DateTime'>
    readonly Email: FieldRef<"Lead", 'String'>
    readonly Dob: FieldRef<"Lead", 'DateTime'>
    readonly Age: FieldRef<"Lead", 'Int'>
    readonly Gender: FieldRef<"Lead", 'Int'>
    readonly MaritalStatus: FieldRef<"Lead", 'Int'>
    readonly Profession: FieldRef<"Lead", 'Int'>
    readonly Pancard: FieldRef<"Lead", 'String'>
    readonly AadharNumber: FieldRef<"Lead", 'String'>
    readonly CurrentAddress: FieldRef<"Lead", 'String'>
    readonly CurrentAddress2: FieldRef<"Lead", 'String'>
    readonly CurrentPincode: FieldRef<"Lead", 'String'>
    readonly CurrentCity: FieldRef<"Lead", 'String'>
    readonly CurrentState: FieldRef<"Lead", 'String'>
    readonly Tobacco: FieldRef<"Lead", 'Int'>
    readonly CurrentResidenceType: FieldRef<"Lead", 'String'>
    readonly FatherName: FieldRef<"Lead", 'String'>
    readonly MotherName: FieldRef<"Lead", 'String'>
    readonly Education: FieldRef<"Lead", 'Int'>
    readonly IpAddress: FieldRef<"Lead", 'String'>
    readonly CompanyType: FieldRef<"Lead", 'Int'>
    readonly IndustryType: FieldRef<"Lead", 'String'>
    readonly CompanyName: FieldRef<"Lead", 'String'>
    readonly CurrentDesignation: FieldRef<"Lead", 'String'>
    readonly CompanyAddress: FieldRef<"Lead", 'String'>
    readonly Landmark: FieldRef<"Lead", 'String'>
    readonly CompanyPincode: FieldRef<"Lead", 'String'>
    readonly CompanyCity: FieldRef<"Lead", 'String'>
    readonly NetMonthlyIncome: FieldRef<"Lead", 'Float'>
    readonly BankName: FieldRef<"Lead", 'String'>
    readonly ActiveCreditcardHolder: FieldRef<"Lead", 'Int'>
    readonly OfficialEmailId: FieldRef<"Lead", 'String'>
    readonly LoanAmountRequired: FieldRef<"Lead", 'Float'>
    readonly LoanTenure: FieldRef<"Lead", 'String'>
    readonly Businesspan: FieldRef<"Lead", 'String'>
    readonly Gst: FieldRef<"Lead", 'String'>
    readonly CompanyTurnover: FieldRef<"Lead", 'Int'>
    readonly BusinessAgeInYears: FieldRef<"Lead", 'Int'>
    readonly BusinessOwnership: FieldRef<"Lead", 'Int'>
    readonly PromoterfirstName: FieldRef<"Lead", 'String'>
    readonly PromoterlastName: FieldRef<"Lead", 'String'>
    readonly PromoterEmail: FieldRef<"Lead", 'String'>
    readonly PromoterDob: FieldRef<"Lead", 'DateTime'>
    readonly PromoterGender: FieldRef<"Lead", 'Int'>
    readonly PromoterPancard: FieldRef<"Lead", 'String'>
    readonly PromoterAddress: FieldRef<"Lead", 'String'>
    readonly PromoterOwnership: FieldRef<"Lead", 'Int'>
    readonly OTP: FieldRef<"Lead", 'String'>
    readonly otpGenerationDateTime: FieldRef<"Lead", 'DateTime'>
    readonly IsMobileNumberVerified: FieldRef<"Lead", 'Int'>
    readonly Email_Verified: FieldRef<"Lead", 'Int'>
    readonly Latitude: FieldRef<"Lead", 'Float'>
    readonly Longitude: FieldRef<"Lead", 'Float'>
    readonly Location: FieldRef<"Lead", 'String'>
    readonly UtmSource: FieldRef<"Lead", 'String'>
    readonly Pid: FieldRef<"Lead", 'String'>
    readonly UserBrowser: FieldRef<"Lead", 'String'>
    readonly UserDevice: FieldRef<"Lead", 'String'>
    readonly UserOs: FieldRef<"Lead", 'String'>
    readonly UniqueToken: FieldRef<"Lead", 'String'>
  }
    

  // Custom InputTypes

  /**
   * Lead findUnique
   */
  export type LeadFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LeadInclude<ExtArgs> | null
    /**
     * Filter, which Lead to fetch.
     */
    where: LeadWhereUniqueInput
  }


  /**
   * Lead findUniqueOrThrow
   */
  export type LeadFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LeadInclude<ExtArgs> | null
    /**
     * Filter, which Lead to fetch.
     */
    where: LeadWhereUniqueInput
  }


  /**
   * Lead findFirst
   */
  export type LeadFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LeadInclude<ExtArgs> | null
    /**
     * Filter, which Lead to fetch.
     */
    where?: LeadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Leads to fetch.
     */
    orderBy?: LeadOrderByWithRelationInput | LeadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Leads.
     */
    cursor?: LeadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Leads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Leads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Leads.
     */
    distinct?: LeadScalarFieldEnum | LeadScalarFieldEnum[]
  }


  /**
   * Lead findFirstOrThrow
   */
  export type LeadFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LeadInclude<ExtArgs> | null
    /**
     * Filter, which Lead to fetch.
     */
    where?: LeadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Leads to fetch.
     */
    orderBy?: LeadOrderByWithRelationInput | LeadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Leads.
     */
    cursor?: LeadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Leads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Leads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Leads.
     */
    distinct?: LeadScalarFieldEnum | LeadScalarFieldEnum[]
  }


  /**
   * Lead findMany
   */
  export type LeadFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LeadInclude<ExtArgs> | null
    /**
     * Filter, which Leads to fetch.
     */
    where?: LeadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Leads to fetch.
     */
    orderBy?: LeadOrderByWithRelationInput | LeadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Leads.
     */
    cursor?: LeadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Leads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Leads.
     */
    skip?: number
    distinct?: LeadScalarFieldEnum | LeadScalarFieldEnum[]
  }


  /**
   * Lead create
   */
  export type LeadCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LeadInclude<ExtArgs> | null
    /**
     * The data needed to create a Lead.
     */
    data: XOR<LeadCreateInput, LeadUncheckedCreateInput>
  }


  /**
   * Lead createMany
   */
  export type LeadCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Leads.
     */
    data: LeadCreateManyInput | LeadCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * Lead update
   */
  export type LeadUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LeadInclude<ExtArgs> | null
    /**
     * The data needed to update a Lead.
     */
    data: XOR<LeadUpdateInput, LeadUncheckedUpdateInput>
    /**
     * Choose, which Lead to update.
     */
    where: LeadWhereUniqueInput
  }


  /**
   * Lead updateMany
   */
  export type LeadUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Leads.
     */
    data: XOR<LeadUpdateManyMutationInput, LeadUncheckedUpdateManyInput>
    /**
     * Filter which Leads to update
     */
    where?: LeadWhereInput
  }


  /**
   * Lead upsert
   */
  export type LeadUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LeadInclude<ExtArgs> | null
    /**
     * The filter to search for the Lead to update in case it exists.
     */
    where: LeadWhereUniqueInput
    /**
     * In case the Lead found by the `where` argument doesn't exist, create a new Lead with this data.
     */
    create: XOR<LeadCreateInput, LeadUncheckedCreateInput>
    /**
     * In case the Lead was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LeadUpdateInput, LeadUncheckedUpdateInput>
  }


  /**
   * Lead delete
   */
  export type LeadDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LeadInclude<ExtArgs> | null
    /**
     * Filter which Lead to delete.
     */
    where: LeadWhereUniqueInput
  }


  /**
   * Lead deleteMany
   */
  export type LeadDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Leads to delete
     */
    where?: LeadWhereInput
  }


  /**
   * Lead.leadToPushRecord
   */
  export type Lead$leadToPushRecordArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LeadToPushRecord
     */
    select?: LeadToPushRecordSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LeadToPushRecordInclude<ExtArgs> | null
    where?: LeadToPushRecordWhereInput
  }


  /**
   * Lead without action
   */
  export type LeadDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Lead
     */
    select?: LeadSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LeadInclude<ExtArgs> | null
  }



  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    userID: number | null
    adminId: number | null
    status: number | null
  }

  export type UserSumAggregateOutputType = {
    userID: number | null
    adminId: number | null
    status: number | null
  }

  export type UserMinAggregateOutputType = {
    userID: number | null
    adminId: number | null
    firstName: string | null
    lastName: string | null
    email: string | null
    mobileNumber: string | null
    password: string | null
    status: number | null
    role: $Enums.Role | null
    OTP: string | null
    OTPGenerationDateTime: Date | null
  }

  export type UserMaxAggregateOutputType = {
    userID: number | null
    adminId: number | null
    firstName: string | null
    lastName: string | null
    email: string | null
    mobileNumber: string | null
    password: string | null
    status: number | null
    role: $Enums.Role | null
    OTP: string | null
    OTPGenerationDateTime: Date | null
  }

  export type UserCountAggregateOutputType = {
    userID: number
    adminId: number
    firstName: number
    lastName: number
    email: number
    mobileNumber: number
    password: number
    status: number
    role: number
    OTP: number
    OTPGenerationDateTime: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    userID?: true
    adminId?: true
    status?: true
  }

  export type UserSumAggregateInputType = {
    userID?: true
    adminId?: true
    status?: true
  }

  export type UserMinAggregateInputType = {
    userID?: true
    adminId?: true
    firstName?: true
    lastName?: true
    email?: true
    mobileNumber?: true
    password?: true
    status?: true
    role?: true
    OTP?: true
    OTPGenerationDateTime?: true
  }

  export type UserMaxAggregateInputType = {
    userID?: true
    adminId?: true
    firstName?: true
    lastName?: true
    email?: true
    mobileNumber?: true
    password?: true
    status?: true
    role?: true
    OTP?: true
    OTPGenerationDateTime?: true
  }

  export type UserCountAggregateInputType = {
    userID?: true
    adminId?: true
    firstName?: true
    lastName?: true
    email?: true
    mobileNumber?: true
    password?: true
    status?: true
    role?: true
    OTP?: true
    OTPGenerationDateTime?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    userID: number
    adminId: number
    firstName: string
    lastName: string
    email: string
    mobileNumber: string
    password: string
    status: number
    role: $Enums.Role
    OTP: string
    OTPGenerationDateTime: Date | null
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    userID?: boolean
    adminId?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    mobileNumber?: boolean
    password?: boolean
    status?: boolean
    role?: boolean
    OTP?: boolean
    OTPGenerationDateTime?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    userID?: boolean
    adminId?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    mobileNumber?: boolean
    password?: boolean
    status?: boolean
    role?: boolean
    OTP?: boolean
    OTPGenerationDateTime?: boolean
  }


  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      userID: number
      adminId: number
      firstName: string
      lastName: string
      email: string
      mobileNumber: string
      password: string
      status: number
      role: $Enums.Role
      OTP: string
      OTPGenerationDateTime: Date | null
    }, ExtArgs["result"]["user"]>
    composites: {}
  }


  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends UserFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>
    ): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one User that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends UserFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>
    ): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `userID`
     * const userWithUserIDOnly = await prisma.user.findMany({ select: { userID: true } })
     * 
    **/
    findMany<T extends UserFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
    **/
    create<T extends UserCreateArgs<ExtArgs>>(
      args: SelectSubset<T, UserCreateArgs<ExtArgs>>
    ): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Users.
     *     @param {UserCreateManyArgs} args - Arguments to create many Users.
     *     @example
     *     // Create many Users
     *     const user = await prisma.user.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends UserCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
    **/
    delete<T extends UserDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, UserDeleteArgs<ExtArgs>>
    ): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends UserUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, UserUpdateArgs<ExtArgs>>
    ): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends UserDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends UserUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
    **/
    upsert<T extends UserUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, UserUpsertArgs<ExtArgs>>
    ): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the User model
   */ 
  interface UserFieldRefs {
    readonly userID: FieldRef<"User", 'Int'>
    readonly adminId: FieldRef<"User", 'Int'>
    readonly firstName: FieldRef<"User", 'String'>
    readonly lastName: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly mobileNumber: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly status: FieldRef<"User", 'Int'>
    readonly role: FieldRef<"User", 'Role'>
    readonly OTP: FieldRef<"User", 'String'>
    readonly OTPGenerationDateTime: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }


  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }


  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }


  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }


  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }


  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }


  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }


  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
  }


  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }


  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }


  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
  }


  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
  }



  /**
   * Model LeadToPushRecord
   */

  export type AggregateLeadToPushRecord = {
    _count: LeadToPushRecordCountAggregateOutputType | null
    _avg: LeadToPushRecordAvgAggregateOutputType | null
    _sum: LeadToPushRecordSumAggregateOutputType | null
    _min: LeadToPushRecordMinAggregateOutputType | null
    _max: LeadToPushRecordMaxAggregateOutputType | null
  }

  export type LeadToPushRecordAvgAggregateOutputType = {
    Id: number | null
    Campaign: number | null
    LeadId: number | null
    PushedToClientFibe: number | null
    PushedToClientMpocket: number | null
    PushedToClientCashe: number | null
    PushedToClientFlexi: number | null
    PushedToClientSafeBima: number | null
    PushedToClientEdelweiss: number | null
  }

  export type LeadToPushRecordSumAggregateOutputType = {
    Id: number | null
    Campaign: number | null
    LeadId: number | null
    PushedToClientFibe: number | null
    PushedToClientMpocket: number | null
    PushedToClientCashe: number | null
    PushedToClientFlexi: number | null
    PushedToClientSafeBima: number | null
    PushedToClientEdelweiss: number | null
  }

  export type LeadToPushRecordMinAggregateOutputType = {
    Id: number | null
    Campaign: number | null
    LeadId: number | null
    PushDateTime: Date | null
    IsAutomatic: boolean | null
    Logic: string | null
    IsResponseOk: string | null
    LastUpdated: Date | null
    PushedToClientFibe: number | null
    PushedToClientMpocket: number | null
    PushedToClientCashe: number | null
    PushedToClientFlexi: number | null
    PushedToClientSafeBima: number | null
    PushedToClientEdelweiss: number | null
    ResponseFlexi: string | null
    ResponseFibe: string | null
    ResponseMpocket: string | null
    ResponseCashe: string | null
    ResponseSafeBima: string | null
    ResponseEdelweiss: string | null
  }

  export type LeadToPushRecordMaxAggregateOutputType = {
    Id: number | null
    Campaign: number | null
    LeadId: number | null
    PushDateTime: Date | null
    IsAutomatic: boolean | null
    Logic: string | null
    IsResponseOk: string | null
    LastUpdated: Date | null
    PushedToClientFibe: number | null
    PushedToClientMpocket: number | null
    PushedToClientCashe: number | null
    PushedToClientFlexi: number | null
    PushedToClientSafeBima: number | null
    PushedToClientEdelweiss: number | null
    ResponseFlexi: string | null
    ResponseFibe: string | null
    ResponseMpocket: string | null
    ResponseCashe: string | null
    ResponseSafeBima: string | null
    ResponseEdelweiss: string | null
  }

  export type LeadToPushRecordCountAggregateOutputType = {
    Id: number
    Campaign: number
    LeadId: number
    PushDateTime: number
    IsAutomatic: number
    Logic: number
    IsResponseOk: number
    LastUpdated: number
    PushedToClientFibe: number
    PushedToClientMpocket: number
    PushedToClientCashe: number
    PushedToClientFlexi: number
    PushedToClientSafeBima: number
    PushedToClientEdelweiss: number
    ResponseFlexi: number
    ResponseFibe: number
    ResponseMpocket: number
    ResponseCashe: number
    ResponseSafeBima: number
    ResponseEdelweiss: number
    _all: number
  }


  export type LeadToPushRecordAvgAggregateInputType = {
    Id?: true
    Campaign?: true
    LeadId?: true
    PushedToClientFibe?: true
    PushedToClientMpocket?: true
    PushedToClientCashe?: true
    PushedToClientFlexi?: true
    PushedToClientSafeBima?: true
    PushedToClientEdelweiss?: true
  }

  export type LeadToPushRecordSumAggregateInputType = {
    Id?: true
    Campaign?: true
    LeadId?: true
    PushedToClientFibe?: true
    PushedToClientMpocket?: true
    PushedToClientCashe?: true
    PushedToClientFlexi?: true
    PushedToClientSafeBima?: true
    PushedToClientEdelweiss?: true
  }

  export type LeadToPushRecordMinAggregateInputType = {
    Id?: true
    Campaign?: true
    LeadId?: true
    PushDateTime?: true
    IsAutomatic?: true
    Logic?: true
    IsResponseOk?: true
    LastUpdated?: true
    PushedToClientFibe?: true
    PushedToClientMpocket?: true
    PushedToClientCashe?: true
    PushedToClientFlexi?: true
    PushedToClientSafeBima?: true
    PushedToClientEdelweiss?: true
    ResponseFlexi?: true
    ResponseFibe?: true
    ResponseMpocket?: true
    ResponseCashe?: true
    ResponseSafeBima?: true
    ResponseEdelweiss?: true
  }

  export type LeadToPushRecordMaxAggregateInputType = {
    Id?: true
    Campaign?: true
    LeadId?: true
    PushDateTime?: true
    IsAutomatic?: true
    Logic?: true
    IsResponseOk?: true
    LastUpdated?: true
    PushedToClientFibe?: true
    PushedToClientMpocket?: true
    PushedToClientCashe?: true
    PushedToClientFlexi?: true
    PushedToClientSafeBima?: true
    PushedToClientEdelweiss?: true
    ResponseFlexi?: true
    ResponseFibe?: true
    ResponseMpocket?: true
    ResponseCashe?: true
    ResponseSafeBima?: true
    ResponseEdelweiss?: true
  }

  export type LeadToPushRecordCountAggregateInputType = {
    Id?: true
    Campaign?: true
    LeadId?: true
    PushDateTime?: true
    IsAutomatic?: true
    Logic?: true
    IsResponseOk?: true
    LastUpdated?: true
    PushedToClientFibe?: true
    PushedToClientMpocket?: true
    PushedToClientCashe?: true
    PushedToClientFlexi?: true
    PushedToClientSafeBima?: true
    PushedToClientEdelweiss?: true
    ResponseFlexi?: true
    ResponseFibe?: true
    ResponseMpocket?: true
    ResponseCashe?: true
    ResponseSafeBima?: true
    ResponseEdelweiss?: true
    _all?: true
  }

  export type LeadToPushRecordAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LeadToPushRecord to aggregate.
     */
    where?: LeadToPushRecordWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LeadToPushRecords to fetch.
     */
    orderBy?: LeadToPushRecordOrderByWithRelationInput | LeadToPushRecordOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LeadToPushRecordWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LeadToPushRecords from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LeadToPushRecords.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned LeadToPushRecords
    **/
    _count?: true | LeadToPushRecordCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LeadToPushRecordAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LeadToPushRecordSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LeadToPushRecordMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LeadToPushRecordMaxAggregateInputType
  }

  export type GetLeadToPushRecordAggregateType<T extends LeadToPushRecordAggregateArgs> = {
        [P in keyof T & keyof AggregateLeadToPushRecord]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLeadToPushRecord[P]>
      : GetScalarType<T[P], AggregateLeadToPushRecord[P]>
  }




  export type LeadToPushRecordGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LeadToPushRecordWhereInput
    orderBy?: LeadToPushRecordOrderByWithAggregationInput | LeadToPushRecordOrderByWithAggregationInput[]
    by: LeadToPushRecordScalarFieldEnum[] | LeadToPushRecordScalarFieldEnum
    having?: LeadToPushRecordScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LeadToPushRecordCountAggregateInputType | true
    _avg?: LeadToPushRecordAvgAggregateInputType
    _sum?: LeadToPushRecordSumAggregateInputType
    _min?: LeadToPushRecordMinAggregateInputType
    _max?: LeadToPushRecordMaxAggregateInputType
  }

  export type LeadToPushRecordGroupByOutputType = {
    Id: number
    Campaign: number
    LeadId: number
    PushDateTime: Date | null
    IsAutomatic: boolean
    Logic: string
    IsResponseOk: string | null
    LastUpdated: Date
    PushedToClientFibe: number
    PushedToClientMpocket: number
    PushedToClientCashe: number
    PushedToClientFlexi: number
    PushedToClientSafeBima: number
    PushedToClientEdelweiss: number
    ResponseFlexi: string | null
    ResponseFibe: string | null
    ResponseMpocket: string | null
    ResponseCashe: string | null
    ResponseSafeBima: string | null
    ResponseEdelweiss: string | null
    _count: LeadToPushRecordCountAggregateOutputType | null
    _avg: LeadToPushRecordAvgAggregateOutputType | null
    _sum: LeadToPushRecordSumAggregateOutputType | null
    _min: LeadToPushRecordMinAggregateOutputType | null
    _max: LeadToPushRecordMaxAggregateOutputType | null
  }

  type GetLeadToPushRecordGroupByPayload<T extends LeadToPushRecordGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LeadToPushRecordGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LeadToPushRecordGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LeadToPushRecordGroupByOutputType[P]>
            : GetScalarType<T[P], LeadToPushRecordGroupByOutputType[P]>
        }
      >
    >


  export type LeadToPushRecordSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    Campaign?: boolean
    LeadId?: boolean
    PushDateTime?: boolean
    IsAutomatic?: boolean
    Logic?: boolean
    IsResponseOk?: boolean
    LastUpdated?: boolean
    PushedToClientFibe?: boolean
    PushedToClientMpocket?: boolean
    PushedToClientCashe?: boolean
    PushedToClientFlexi?: boolean
    PushedToClientSafeBima?: boolean
    PushedToClientEdelweiss?: boolean
    ResponseFlexi?: boolean
    ResponseFibe?: boolean
    ResponseMpocket?: boolean
    ResponseCashe?: boolean
    ResponseSafeBima?: boolean
    ResponseEdelweiss?: boolean
    lead?: boolean | LeadDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["leadToPushRecord"]>

  export type LeadToPushRecordSelectScalar = {
    Id?: boolean
    Campaign?: boolean
    LeadId?: boolean
    PushDateTime?: boolean
    IsAutomatic?: boolean
    Logic?: boolean
    IsResponseOk?: boolean
    LastUpdated?: boolean
    PushedToClientFibe?: boolean
    PushedToClientMpocket?: boolean
    PushedToClientCashe?: boolean
    PushedToClientFlexi?: boolean
    PushedToClientSafeBima?: boolean
    PushedToClientEdelweiss?: boolean
    ResponseFlexi?: boolean
    ResponseFibe?: boolean
    ResponseMpocket?: boolean
    ResponseCashe?: boolean
    ResponseSafeBima?: boolean
    ResponseEdelweiss?: boolean
  }

  export type LeadToPushRecordInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    lead?: boolean | LeadDefaultArgs<ExtArgs>
  }


  export type $LeadToPushRecordPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "LeadToPushRecord"
    objects: {
      lead: Prisma.$LeadPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      Id: number
      Campaign: number
      LeadId: number
      PushDateTime: Date | null
      IsAutomatic: boolean
      Logic: string
      IsResponseOk: string | null
      LastUpdated: Date
      PushedToClientFibe: number
      PushedToClientMpocket: number
      PushedToClientCashe: number
      PushedToClientFlexi: number
      PushedToClientSafeBima: number
      PushedToClientEdelweiss: number
      ResponseFlexi: string | null
      ResponseFibe: string | null
      ResponseMpocket: string | null
      ResponseCashe: string | null
      ResponseSafeBima: string | null
      ResponseEdelweiss: string | null
    }, ExtArgs["result"]["leadToPushRecord"]>
    composites: {}
  }


  type LeadToPushRecordGetPayload<S extends boolean | null | undefined | LeadToPushRecordDefaultArgs> = $Result.GetResult<Prisma.$LeadToPushRecordPayload, S>

  type LeadToPushRecordCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<LeadToPushRecordFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: LeadToPushRecordCountAggregateInputType | true
    }

  export interface LeadToPushRecordDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['LeadToPushRecord'], meta: { name: 'LeadToPushRecord' } }
    /**
     * Find zero or one LeadToPushRecord that matches the filter.
     * @param {LeadToPushRecordFindUniqueArgs} args - Arguments to find a LeadToPushRecord
     * @example
     * // Get one LeadToPushRecord
     * const leadToPushRecord = await prisma.leadToPushRecord.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends LeadToPushRecordFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, LeadToPushRecordFindUniqueArgs<ExtArgs>>
    ): Prisma__LeadToPushRecordClient<$Result.GetResult<Prisma.$LeadToPushRecordPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one LeadToPushRecord that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {LeadToPushRecordFindUniqueOrThrowArgs} args - Arguments to find a LeadToPushRecord
     * @example
     * // Get one LeadToPushRecord
     * const leadToPushRecord = await prisma.leadToPushRecord.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends LeadToPushRecordFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, LeadToPushRecordFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__LeadToPushRecordClient<$Result.GetResult<Prisma.$LeadToPushRecordPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first LeadToPushRecord that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadToPushRecordFindFirstArgs} args - Arguments to find a LeadToPushRecord
     * @example
     * // Get one LeadToPushRecord
     * const leadToPushRecord = await prisma.leadToPushRecord.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends LeadToPushRecordFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, LeadToPushRecordFindFirstArgs<ExtArgs>>
    ): Prisma__LeadToPushRecordClient<$Result.GetResult<Prisma.$LeadToPushRecordPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first LeadToPushRecord that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadToPushRecordFindFirstOrThrowArgs} args - Arguments to find a LeadToPushRecord
     * @example
     * // Get one LeadToPushRecord
     * const leadToPushRecord = await prisma.leadToPushRecord.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends LeadToPushRecordFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, LeadToPushRecordFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__LeadToPushRecordClient<$Result.GetResult<Prisma.$LeadToPushRecordPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more LeadToPushRecords that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadToPushRecordFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all LeadToPushRecords
     * const leadToPushRecords = await prisma.leadToPushRecord.findMany()
     * 
     * // Get first 10 LeadToPushRecords
     * const leadToPushRecords = await prisma.leadToPushRecord.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const leadToPushRecordWithIdOnly = await prisma.leadToPushRecord.findMany({ select: { Id: true } })
     * 
    **/
    findMany<T extends LeadToPushRecordFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, LeadToPushRecordFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LeadToPushRecordPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a LeadToPushRecord.
     * @param {LeadToPushRecordCreateArgs} args - Arguments to create a LeadToPushRecord.
     * @example
     * // Create one LeadToPushRecord
     * const LeadToPushRecord = await prisma.leadToPushRecord.create({
     *   data: {
     *     // ... data to create a LeadToPushRecord
     *   }
     * })
     * 
    **/
    create<T extends LeadToPushRecordCreateArgs<ExtArgs>>(
      args: SelectSubset<T, LeadToPushRecordCreateArgs<ExtArgs>>
    ): Prisma__LeadToPushRecordClient<$Result.GetResult<Prisma.$LeadToPushRecordPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many LeadToPushRecords.
     *     @param {LeadToPushRecordCreateManyArgs} args - Arguments to create many LeadToPushRecords.
     *     @example
     *     // Create many LeadToPushRecords
     *     const leadToPushRecord = await prisma.leadToPushRecord.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends LeadToPushRecordCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, LeadToPushRecordCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a LeadToPushRecord.
     * @param {LeadToPushRecordDeleteArgs} args - Arguments to delete one LeadToPushRecord.
     * @example
     * // Delete one LeadToPushRecord
     * const LeadToPushRecord = await prisma.leadToPushRecord.delete({
     *   where: {
     *     // ... filter to delete one LeadToPushRecord
     *   }
     * })
     * 
    **/
    delete<T extends LeadToPushRecordDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, LeadToPushRecordDeleteArgs<ExtArgs>>
    ): Prisma__LeadToPushRecordClient<$Result.GetResult<Prisma.$LeadToPushRecordPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one LeadToPushRecord.
     * @param {LeadToPushRecordUpdateArgs} args - Arguments to update one LeadToPushRecord.
     * @example
     * // Update one LeadToPushRecord
     * const leadToPushRecord = await prisma.leadToPushRecord.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends LeadToPushRecordUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, LeadToPushRecordUpdateArgs<ExtArgs>>
    ): Prisma__LeadToPushRecordClient<$Result.GetResult<Prisma.$LeadToPushRecordPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more LeadToPushRecords.
     * @param {LeadToPushRecordDeleteManyArgs} args - Arguments to filter LeadToPushRecords to delete.
     * @example
     * // Delete a few LeadToPushRecords
     * const { count } = await prisma.leadToPushRecord.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends LeadToPushRecordDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, LeadToPushRecordDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LeadToPushRecords.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadToPushRecordUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many LeadToPushRecords
     * const leadToPushRecord = await prisma.leadToPushRecord.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends LeadToPushRecordUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, LeadToPushRecordUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one LeadToPushRecord.
     * @param {LeadToPushRecordUpsertArgs} args - Arguments to update or create a LeadToPushRecord.
     * @example
     * // Update or create a LeadToPushRecord
     * const leadToPushRecord = await prisma.leadToPushRecord.upsert({
     *   create: {
     *     // ... data to create a LeadToPushRecord
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the LeadToPushRecord we want to update
     *   }
     * })
    **/
    upsert<T extends LeadToPushRecordUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, LeadToPushRecordUpsertArgs<ExtArgs>>
    ): Prisma__LeadToPushRecordClient<$Result.GetResult<Prisma.$LeadToPushRecordPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of LeadToPushRecords.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadToPushRecordCountArgs} args - Arguments to filter LeadToPushRecords to count.
     * @example
     * // Count the number of LeadToPushRecords
     * const count = await prisma.leadToPushRecord.count({
     *   where: {
     *     // ... the filter for the LeadToPushRecords we want to count
     *   }
     * })
    **/
    count<T extends LeadToPushRecordCountArgs>(
      args?: Subset<T, LeadToPushRecordCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LeadToPushRecordCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a LeadToPushRecord.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadToPushRecordAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LeadToPushRecordAggregateArgs>(args: Subset<T, LeadToPushRecordAggregateArgs>): Prisma.PrismaPromise<GetLeadToPushRecordAggregateType<T>>

    /**
     * Group by LeadToPushRecord.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadToPushRecordGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LeadToPushRecordGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LeadToPushRecordGroupByArgs['orderBy'] }
        : { orderBy?: LeadToPushRecordGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LeadToPushRecordGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLeadToPushRecordGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the LeadToPushRecord model
   */
  readonly fields: LeadToPushRecordFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for LeadToPushRecord.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LeadToPushRecordClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    lead<T extends LeadDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LeadDefaultArgs<ExtArgs>>): Prisma__LeadClient<$Result.GetResult<Prisma.$LeadPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the LeadToPushRecord model
   */ 
  interface LeadToPushRecordFieldRefs {
    readonly Id: FieldRef<"LeadToPushRecord", 'Int'>
    readonly Campaign: FieldRef<"LeadToPushRecord", 'Int'>
    readonly LeadId: FieldRef<"LeadToPushRecord", 'Int'>
    readonly PushDateTime: FieldRef<"LeadToPushRecord", 'DateTime'>
    readonly IsAutomatic: FieldRef<"LeadToPushRecord", 'Boolean'>
    readonly Logic: FieldRef<"LeadToPushRecord", 'String'>
    readonly IsResponseOk: FieldRef<"LeadToPushRecord", 'String'>
    readonly LastUpdated: FieldRef<"LeadToPushRecord", 'DateTime'>
    readonly PushedToClientFibe: FieldRef<"LeadToPushRecord", 'Int'>
    readonly PushedToClientMpocket: FieldRef<"LeadToPushRecord", 'Int'>
    readonly PushedToClientCashe: FieldRef<"LeadToPushRecord", 'Int'>
    readonly PushedToClientFlexi: FieldRef<"LeadToPushRecord", 'Int'>
    readonly PushedToClientSafeBima: FieldRef<"LeadToPushRecord", 'Int'>
    readonly PushedToClientEdelweiss: FieldRef<"LeadToPushRecord", 'Int'>
    readonly ResponseFlexi: FieldRef<"LeadToPushRecord", 'String'>
    readonly ResponseFibe: FieldRef<"LeadToPushRecord", 'String'>
    readonly ResponseMpocket: FieldRef<"LeadToPushRecord", 'String'>
    readonly ResponseCashe: FieldRef<"LeadToPushRecord", 'String'>
    readonly ResponseSafeBima: FieldRef<"LeadToPushRecord", 'String'>
    readonly ResponseEdelweiss: FieldRef<"LeadToPushRecord", 'String'>
  }
    

  // Custom InputTypes

  /**
   * LeadToPushRecord findUnique
   */
  export type LeadToPushRecordFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LeadToPushRecord
     */
    select?: LeadToPushRecordSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LeadToPushRecordInclude<ExtArgs> | null
    /**
     * Filter, which LeadToPushRecord to fetch.
     */
    where: LeadToPushRecordWhereUniqueInput
  }


  /**
   * LeadToPushRecord findUniqueOrThrow
   */
  export type LeadToPushRecordFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LeadToPushRecord
     */
    select?: LeadToPushRecordSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LeadToPushRecordInclude<ExtArgs> | null
    /**
     * Filter, which LeadToPushRecord to fetch.
     */
    where: LeadToPushRecordWhereUniqueInput
  }


  /**
   * LeadToPushRecord findFirst
   */
  export type LeadToPushRecordFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LeadToPushRecord
     */
    select?: LeadToPushRecordSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LeadToPushRecordInclude<ExtArgs> | null
    /**
     * Filter, which LeadToPushRecord to fetch.
     */
    where?: LeadToPushRecordWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LeadToPushRecords to fetch.
     */
    orderBy?: LeadToPushRecordOrderByWithRelationInput | LeadToPushRecordOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LeadToPushRecords.
     */
    cursor?: LeadToPushRecordWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LeadToPushRecords from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LeadToPushRecords.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LeadToPushRecords.
     */
    distinct?: LeadToPushRecordScalarFieldEnum | LeadToPushRecordScalarFieldEnum[]
  }


  /**
   * LeadToPushRecord findFirstOrThrow
   */
  export type LeadToPushRecordFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LeadToPushRecord
     */
    select?: LeadToPushRecordSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LeadToPushRecordInclude<ExtArgs> | null
    /**
     * Filter, which LeadToPushRecord to fetch.
     */
    where?: LeadToPushRecordWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LeadToPushRecords to fetch.
     */
    orderBy?: LeadToPushRecordOrderByWithRelationInput | LeadToPushRecordOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LeadToPushRecords.
     */
    cursor?: LeadToPushRecordWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LeadToPushRecords from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LeadToPushRecords.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LeadToPushRecords.
     */
    distinct?: LeadToPushRecordScalarFieldEnum | LeadToPushRecordScalarFieldEnum[]
  }


  /**
   * LeadToPushRecord findMany
   */
  export type LeadToPushRecordFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LeadToPushRecord
     */
    select?: LeadToPushRecordSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LeadToPushRecordInclude<ExtArgs> | null
    /**
     * Filter, which LeadToPushRecords to fetch.
     */
    where?: LeadToPushRecordWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LeadToPushRecords to fetch.
     */
    orderBy?: LeadToPushRecordOrderByWithRelationInput | LeadToPushRecordOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing LeadToPushRecords.
     */
    cursor?: LeadToPushRecordWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LeadToPushRecords from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LeadToPushRecords.
     */
    skip?: number
    distinct?: LeadToPushRecordScalarFieldEnum | LeadToPushRecordScalarFieldEnum[]
  }


  /**
   * LeadToPushRecord create
   */
  export type LeadToPushRecordCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LeadToPushRecord
     */
    select?: LeadToPushRecordSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LeadToPushRecordInclude<ExtArgs> | null
    /**
     * The data needed to create a LeadToPushRecord.
     */
    data: XOR<LeadToPushRecordCreateInput, LeadToPushRecordUncheckedCreateInput>
  }


  /**
   * LeadToPushRecord createMany
   */
  export type LeadToPushRecordCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many LeadToPushRecords.
     */
    data: LeadToPushRecordCreateManyInput | LeadToPushRecordCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * LeadToPushRecord update
   */
  export type LeadToPushRecordUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LeadToPushRecord
     */
    select?: LeadToPushRecordSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LeadToPushRecordInclude<ExtArgs> | null
    /**
     * The data needed to update a LeadToPushRecord.
     */
    data: XOR<LeadToPushRecordUpdateInput, LeadToPushRecordUncheckedUpdateInput>
    /**
     * Choose, which LeadToPushRecord to update.
     */
    where: LeadToPushRecordWhereUniqueInput
  }


  /**
   * LeadToPushRecord updateMany
   */
  export type LeadToPushRecordUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update LeadToPushRecords.
     */
    data: XOR<LeadToPushRecordUpdateManyMutationInput, LeadToPushRecordUncheckedUpdateManyInput>
    /**
     * Filter which LeadToPushRecords to update
     */
    where?: LeadToPushRecordWhereInput
  }


  /**
   * LeadToPushRecord upsert
   */
  export type LeadToPushRecordUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LeadToPushRecord
     */
    select?: LeadToPushRecordSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LeadToPushRecordInclude<ExtArgs> | null
    /**
     * The filter to search for the LeadToPushRecord to update in case it exists.
     */
    where: LeadToPushRecordWhereUniqueInput
    /**
     * In case the LeadToPushRecord found by the `where` argument doesn't exist, create a new LeadToPushRecord with this data.
     */
    create: XOR<LeadToPushRecordCreateInput, LeadToPushRecordUncheckedCreateInput>
    /**
     * In case the LeadToPushRecord was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LeadToPushRecordUpdateInput, LeadToPushRecordUncheckedUpdateInput>
  }


  /**
   * LeadToPushRecord delete
   */
  export type LeadToPushRecordDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LeadToPushRecord
     */
    select?: LeadToPushRecordSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LeadToPushRecordInclude<ExtArgs> | null
    /**
     * Filter which LeadToPushRecord to delete.
     */
    where: LeadToPushRecordWhereUniqueInput
  }


  /**
   * LeadToPushRecord deleteMany
   */
  export type LeadToPushRecordDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LeadToPushRecords to delete
     */
    where?: LeadToPushRecordWhereInput
  }


  /**
   * LeadToPushRecord without action
   */
  export type LeadToPushRecordDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LeadToPushRecord
     */
    select?: LeadToPushRecordSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: LeadToPushRecordInclude<ExtArgs> | null
  }



  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const CampaignScalarFieldEnum: {
    id: 'id',
    CampaignName: 'CampaignName',
    LoanType: 'LoanType',
    CampaignFields: 'CampaignFields',
    CampaignImg: 'CampaignImg',
    isActive: 'isActive',
    LoanTypeId: 'LoanTypeId'
  };

  export type CampaignScalarFieldEnum = (typeof CampaignScalarFieldEnum)[keyof typeof CampaignScalarFieldEnum]


  export const LoanTypeScalarFieldEnum: {
    id: 'id',
    LoanType: 'LoanType'
  };

  export type LoanTypeScalarFieldEnum = (typeof LoanTypeScalarFieldEnum)[keyof typeof LoanTypeScalarFieldEnum]


  export const LeadScalarFieldEnum: {
    LeadId: 'LeadId',
    LoanType: 'LoanType',
    FirstName: 'FirstName',
    LastName: 'LastName',
    MobileNumber: 'MobileNumber',
    LeadCaptureDateTime: 'LeadCaptureDateTime',
    Email: 'Email',
    Dob: 'Dob',
    Age: 'Age',
    Gender: 'Gender',
    MaritalStatus: 'MaritalStatus',
    Profession: 'Profession',
    Pancard: 'Pancard',
    AadharNumber: 'AadharNumber',
    CurrentAddress: 'CurrentAddress',
    CurrentAddress2: 'CurrentAddress2',
    CurrentPincode: 'CurrentPincode',
    CurrentCity: 'CurrentCity',
    CurrentState: 'CurrentState',
    Tobacco: 'Tobacco',
    CurrentResidenceType: 'CurrentResidenceType',
    FatherName: 'FatherName',
    MotherName: 'MotherName',
    Education: 'Education',
    IpAddress: 'IpAddress',
    CompanyType: 'CompanyType',
    IndustryType: 'IndustryType',
    CompanyName: 'CompanyName',
    CurrentDesignation: 'CurrentDesignation',
    CompanyAddress: 'CompanyAddress',
    Landmark: 'Landmark',
    CompanyPincode: 'CompanyPincode',
    CompanyCity: 'CompanyCity',
    NetMonthlyIncome: 'NetMonthlyIncome',
    BankName: 'BankName',
    ActiveCreditcardHolder: 'ActiveCreditcardHolder',
    OfficialEmailId: 'OfficialEmailId',
    LoanAmountRequired: 'LoanAmountRequired',
    LoanTenure: 'LoanTenure',
    Businesspan: 'Businesspan',
    Gst: 'Gst',
    CompanyTurnover: 'CompanyTurnover',
    BusinessAgeInYears: 'BusinessAgeInYears',
    BusinessOwnership: 'BusinessOwnership',
    PromoterfirstName: 'PromoterfirstName',
    PromoterlastName: 'PromoterlastName',
    PromoterEmail: 'PromoterEmail',
    PromoterDob: 'PromoterDob',
    PromoterGender: 'PromoterGender',
    PromoterPancard: 'PromoterPancard',
    PromoterAddress: 'PromoterAddress',
    PromoterOwnership: 'PromoterOwnership',
    OTP: 'OTP',
    otpGenerationDateTime: 'otpGenerationDateTime',
    IsMobileNumberVerified: 'IsMobileNumberVerified',
    Email_Verified: 'Email_Verified',
    Latitude: 'Latitude',
    Longitude: 'Longitude',
    Location: 'Location',
    UtmSource: 'UtmSource',
    Pid: 'Pid',
    UserBrowser: 'UserBrowser',
    UserDevice: 'UserDevice',
    UserOs: 'UserOs',
    UniqueToken: 'UniqueToken'
  };

  export type LeadScalarFieldEnum = (typeof LeadScalarFieldEnum)[keyof typeof LeadScalarFieldEnum]


  export const UserScalarFieldEnum: {
    userID: 'userID',
    adminId: 'adminId',
    firstName: 'firstName',
    lastName: 'lastName',
    email: 'email',
    mobileNumber: 'mobileNumber',
    password: 'password',
    status: 'status',
    role: 'role',
    OTP: 'OTP',
    OTPGenerationDateTime: 'OTPGenerationDateTime'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const LeadToPushRecordScalarFieldEnum: {
    Id: 'Id',
    Campaign: 'Campaign',
    LeadId: 'LeadId',
    PushDateTime: 'PushDateTime',
    IsAutomatic: 'IsAutomatic',
    Logic: 'Logic',
    IsResponseOk: 'IsResponseOk',
    LastUpdated: 'LastUpdated',
    PushedToClientFibe: 'PushedToClientFibe',
    PushedToClientMpocket: 'PushedToClientMpocket',
    PushedToClientCashe: 'PushedToClientCashe',
    PushedToClientFlexi: 'PushedToClientFlexi',
    PushedToClientSafeBima: 'PushedToClientSafeBima',
    PushedToClientEdelweiss: 'PushedToClientEdelweiss',
    ResponseFlexi: 'ResponseFlexi',
    ResponseFibe: 'ResponseFibe',
    ResponseMpocket: 'ResponseMpocket',
    ResponseCashe: 'ResponseCashe',
    ResponseSafeBima: 'ResponseSafeBima',
    ResponseEdelweiss: 'ResponseEdelweiss'
  };

  export type LeadToPushRecordScalarFieldEnum = (typeof LeadToPushRecordScalarFieldEnum)[keyof typeof LeadToPushRecordScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Role'
   */
  export type EnumRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Role'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    
  /**
   * Deep Input Types
   */


  export type CampaignWhereInput = {
    AND?: CampaignWhereInput | CampaignWhereInput[]
    OR?: CampaignWhereInput[]
    NOT?: CampaignWhereInput | CampaignWhereInput[]
    id?: IntFilter<"Campaign"> | number
    CampaignName?: StringNullableFilter<"Campaign"> | string | null
    LoanType?: StringNullableFilter<"Campaign"> | string | null
    CampaignFields?: StringNullableFilter<"Campaign"> | string | null
    CampaignImg?: StringNullableFilter<"Campaign"> | string | null
    isActive?: IntFilter<"Campaign"> | number
    LoanTypeId?: IntFilter<"Campaign"> | number
    loanType?: XOR<LoanTypeRelationFilter, LoanTypeWhereInput>
  }

  export type CampaignOrderByWithRelationInput = {
    id?: SortOrder
    CampaignName?: SortOrderInput | SortOrder
    LoanType?: SortOrderInput | SortOrder
    CampaignFields?: SortOrderInput | SortOrder
    CampaignImg?: SortOrderInput | SortOrder
    isActive?: SortOrder
    LoanTypeId?: SortOrder
    loanType?: LoanTypeOrderByWithRelationInput
  }

  export type CampaignWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CampaignWhereInput | CampaignWhereInput[]
    OR?: CampaignWhereInput[]
    NOT?: CampaignWhereInput | CampaignWhereInput[]
    CampaignName?: StringNullableFilter<"Campaign"> | string | null
    LoanType?: StringNullableFilter<"Campaign"> | string | null
    CampaignFields?: StringNullableFilter<"Campaign"> | string | null
    CampaignImg?: StringNullableFilter<"Campaign"> | string | null
    isActive?: IntFilter<"Campaign"> | number
    LoanTypeId?: IntFilter<"Campaign"> | number
    loanType?: XOR<LoanTypeRelationFilter, LoanTypeWhereInput>
  }, "id">

  export type CampaignOrderByWithAggregationInput = {
    id?: SortOrder
    CampaignName?: SortOrderInput | SortOrder
    LoanType?: SortOrderInput | SortOrder
    CampaignFields?: SortOrderInput | SortOrder
    CampaignImg?: SortOrderInput | SortOrder
    isActive?: SortOrder
    LoanTypeId?: SortOrder
    _count?: CampaignCountOrderByAggregateInput
    _avg?: CampaignAvgOrderByAggregateInput
    _max?: CampaignMaxOrderByAggregateInput
    _min?: CampaignMinOrderByAggregateInput
    _sum?: CampaignSumOrderByAggregateInput
  }

  export type CampaignScalarWhereWithAggregatesInput = {
    AND?: CampaignScalarWhereWithAggregatesInput | CampaignScalarWhereWithAggregatesInput[]
    OR?: CampaignScalarWhereWithAggregatesInput[]
    NOT?: CampaignScalarWhereWithAggregatesInput | CampaignScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Campaign"> | number
    CampaignName?: StringNullableWithAggregatesFilter<"Campaign"> | string | null
    LoanType?: StringNullableWithAggregatesFilter<"Campaign"> | string | null
    CampaignFields?: StringNullableWithAggregatesFilter<"Campaign"> | string | null
    CampaignImg?: StringNullableWithAggregatesFilter<"Campaign"> | string | null
    isActive?: IntWithAggregatesFilter<"Campaign"> | number
    LoanTypeId?: IntWithAggregatesFilter<"Campaign"> | number
  }

  export type LoanTypeWhereInput = {
    AND?: LoanTypeWhereInput | LoanTypeWhereInput[]
    OR?: LoanTypeWhereInput[]
    NOT?: LoanTypeWhereInput | LoanTypeWhereInput[]
    id?: IntFilter<"LoanType"> | number
    LoanType?: StringNullableFilter<"LoanType"> | string | null
    campaigns?: CampaignListRelationFilter
  }

  export type LoanTypeOrderByWithRelationInput = {
    id?: SortOrder
    LoanType?: SortOrderInput | SortOrder
    campaigns?: CampaignOrderByRelationAggregateInput
  }

  export type LoanTypeWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: LoanTypeWhereInput | LoanTypeWhereInput[]
    OR?: LoanTypeWhereInput[]
    NOT?: LoanTypeWhereInput | LoanTypeWhereInput[]
    LoanType?: StringNullableFilter<"LoanType"> | string | null
    campaigns?: CampaignListRelationFilter
  }, "id">

  export type LoanTypeOrderByWithAggregationInput = {
    id?: SortOrder
    LoanType?: SortOrderInput | SortOrder
    _count?: LoanTypeCountOrderByAggregateInput
    _avg?: LoanTypeAvgOrderByAggregateInput
    _max?: LoanTypeMaxOrderByAggregateInput
    _min?: LoanTypeMinOrderByAggregateInput
    _sum?: LoanTypeSumOrderByAggregateInput
  }

  export type LoanTypeScalarWhereWithAggregatesInput = {
    AND?: LoanTypeScalarWhereWithAggregatesInput | LoanTypeScalarWhereWithAggregatesInput[]
    OR?: LoanTypeScalarWhereWithAggregatesInput[]
    NOT?: LoanTypeScalarWhereWithAggregatesInput | LoanTypeScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"LoanType"> | number
    LoanType?: StringNullableWithAggregatesFilter<"LoanType"> | string | null
  }

  export type LeadWhereInput = {
    AND?: LeadWhereInput | LeadWhereInput[]
    OR?: LeadWhereInput[]
    NOT?: LeadWhereInput | LeadWhereInput[]
    LeadId?: IntFilter<"Lead"> | number
    LoanType?: IntNullableFilter<"Lead"> | number | null
    FirstName?: StringNullableFilter<"Lead"> | string | null
    LastName?: StringNullableFilter<"Lead"> | string | null
    MobileNumber?: StringNullableFilter<"Lead"> | string | null
    LeadCaptureDateTime?: DateTimeFilter<"Lead"> | Date | string
    Email?: StringNullableFilter<"Lead"> | string | null
    Dob?: DateTimeNullableFilter<"Lead"> | Date | string | null
    Age?: IntNullableFilter<"Lead"> | number | null
    Gender?: IntNullableFilter<"Lead"> | number | null
    MaritalStatus?: IntNullableFilter<"Lead"> | number | null
    Profession?: IntNullableFilter<"Lead"> | number | null
    Pancard?: StringNullableFilter<"Lead"> | string | null
    AadharNumber?: StringNullableFilter<"Lead"> | string | null
    CurrentAddress?: StringNullableFilter<"Lead"> | string | null
    CurrentAddress2?: StringNullableFilter<"Lead"> | string | null
    CurrentPincode?: StringNullableFilter<"Lead"> | string | null
    CurrentCity?: StringNullableFilter<"Lead"> | string | null
    CurrentState?: StringNullableFilter<"Lead"> | string | null
    Tobacco?: IntNullableFilter<"Lead"> | number | null
    CurrentResidenceType?: StringNullableFilter<"Lead"> | string | null
    FatherName?: StringNullableFilter<"Lead"> | string | null
    MotherName?: StringNullableFilter<"Lead"> | string | null
    Education?: IntNullableFilter<"Lead"> | number | null
    IpAddress?: StringFilter<"Lead"> | string
    CompanyType?: IntNullableFilter<"Lead"> | number | null
    IndustryType?: StringNullableFilter<"Lead"> | string | null
    CompanyName?: StringNullableFilter<"Lead"> | string | null
    CurrentDesignation?: StringNullableFilter<"Lead"> | string | null
    CompanyAddress?: StringNullableFilter<"Lead"> | string | null
    Landmark?: StringNullableFilter<"Lead"> | string | null
    CompanyPincode?: StringNullableFilter<"Lead"> | string | null
    CompanyCity?: StringNullableFilter<"Lead"> | string | null
    NetMonthlyIncome?: FloatNullableFilter<"Lead"> | number | null
    BankName?: StringNullableFilter<"Lead"> | string | null
    ActiveCreditcardHolder?: IntNullableFilter<"Lead"> | number | null
    OfficialEmailId?: StringNullableFilter<"Lead"> | string | null
    LoanAmountRequired?: FloatNullableFilter<"Lead"> | number | null
    LoanTenure?: StringNullableFilter<"Lead"> | string | null
    Businesspan?: StringNullableFilter<"Lead"> | string | null
    Gst?: StringNullableFilter<"Lead"> | string | null
    CompanyTurnover?: IntNullableFilter<"Lead"> | number | null
    BusinessAgeInYears?: IntNullableFilter<"Lead"> | number | null
    BusinessOwnership?: IntNullableFilter<"Lead"> | number | null
    PromoterfirstName?: StringNullableFilter<"Lead"> | string | null
    PromoterlastName?: StringNullableFilter<"Lead"> | string | null
    PromoterEmail?: StringNullableFilter<"Lead"> | string | null
    PromoterDob?: DateTimeNullableFilter<"Lead"> | Date | string | null
    PromoterGender?: IntNullableFilter<"Lead"> | number | null
    PromoterPancard?: StringNullableFilter<"Lead"> | string | null
    PromoterAddress?: StringNullableFilter<"Lead"> | string | null
    PromoterOwnership?: IntNullableFilter<"Lead"> | number | null
    OTP?: StringNullableFilter<"Lead"> | string | null
    otpGenerationDateTime?: DateTimeNullableFilter<"Lead"> | Date | string | null
    IsMobileNumberVerified?: IntNullableFilter<"Lead"> | number | null
    Email_Verified?: IntNullableFilter<"Lead"> | number | null
    Latitude?: FloatNullableFilter<"Lead"> | number | null
    Longitude?: FloatNullableFilter<"Lead"> | number | null
    Location?: StringNullableFilter<"Lead"> | string | null
    UtmSource?: StringNullableFilter<"Lead"> | string | null
    Pid?: StringNullableFilter<"Lead"> | string | null
    UserBrowser?: StringNullableFilter<"Lead"> | string | null
    UserDevice?: StringNullableFilter<"Lead"> | string | null
    UserOs?: StringNullableFilter<"Lead"> | string | null
    UniqueToken?: StringNullableFilter<"Lead"> | string | null
    leadToPushRecord?: XOR<LeadToPushRecordNullableRelationFilter, LeadToPushRecordWhereInput> | null
  }

  export type LeadOrderByWithRelationInput = {
    LeadId?: SortOrder
    LoanType?: SortOrderInput | SortOrder
    FirstName?: SortOrderInput | SortOrder
    LastName?: SortOrderInput | SortOrder
    MobileNumber?: SortOrderInput | SortOrder
    LeadCaptureDateTime?: SortOrder
    Email?: SortOrderInput | SortOrder
    Dob?: SortOrderInput | SortOrder
    Age?: SortOrderInput | SortOrder
    Gender?: SortOrderInput | SortOrder
    MaritalStatus?: SortOrderInput | SortOrder
    Profession?: SortOrderInput | SortOrder
    Pancard?: SortOrderInput | SortOrder
    AadharNumber?: SortOrderInput | SortOrder
    CurrentAddress?: SortOrderInput | SortOrder
    CurrentAddress2?: SortOrderInput | SortOrder
    CurrentPincode?: SortOrderInput | SortOrder
    CurrentCity?: SortOrderInput | SortOrder
    CurrentState?: SortOrderInput | SortOrder
    Tobacco?: SortOrderInput | SortOrder
    CurrentResidenceType?: SortOrderInput | SortOrder
    FatherName?: SortOrderInput | SortOrder
    MotherName?: SortOrderInput | SortOrder
    Education?: SortOrderInput | SortOrder
    IpAddress?: SortOrder
    CompanyType?: SortOrderInput | SortOrder
    IndustryType?: SortOrderInput | SortOrder
    CompanyName?: SortOrderInput | SortOrder
    CurrentDesignation?: SortOrderInput | SortOrder
    CompanyAddress?: SortOrderInput | SortOrder
    Landmark?: SortOrderInput | SortOrder
    CompanyPincode?: SortOrderInput | SortOrder
    CompanyCity?: SortOrderInput | SortOrder
    NetMonthlyIncome?: SortOrderInput | SortOrder
    BankName?: SortOrderInput | SortOrder
    ActiveCreditcardHolder?: SortOrderInput | SortOrder
    OfficialEmailId?: SortOrderInput | SortOrder
    LoanAmountRequired?: SortOrderInput | SortOrder
    LoanTenure?: SortOrderInput | SortOrder
    Businesspan?: SortOrderInput | SortOrder
    Gst?: SortOrderInput | SortOrder
    CompanyTurnover?: SortOrderInput | SortOrder
    BusinessAgeInYears?: SortOrderInput | SortOrder
    BusinessOwnership?: SortOrderInput | SortOrder
    PromoterfirstName?: SortOrderInput | SortOrder
    PromoterlastName?: SortOrderInput | SortOrder
    PromoterEmail?: SortOrderInput | SortOrder
    PromoterDob?: SortOrderInput | SortOrder
    PromoterGender?: SortOrderInput | SortOrder
    PromoterPancard?: SortOrderInput | SortOrder
    PromoterAddress?: SortOrderInput | SortOrder
    PromoterOwnership?: SortOrderInput | SortOrder
    OTP?: SortOrderInput | SortOrder
    otpGenerationDateTime?: SortOrderInput | SortOrder
    IsMobileNumberVerified?: SortOrderInput | SortOrder
    Email_Verified?: SortOrderInput | SortOrder
    Latitude?: SortOrderInput | SortOrder
    Longitude?: SortOrderInput | SortOrder
    Location?: SortOrderInput | SortOrder
    UtmSource?: SortOrderInput | SortOrder
    Pid?: SortOrderInput | SortOrder
    UserBrowser?: SortOrderInput | SortOrder
    UserDevice?: SortOrderInput | SortOrder
    UserOs?: SortOrderInput | SortOrder
    UniqueToken?: SortOrderInput | SortOrder
    leadToPushRecord?: LeadToPushRecordOrderByWithRelationInput
  }

  export type LeadWhereUniqueInput = Prisma.AtLeast<{
    LeadId?: number
    AND?: LeadWhereInput | LeadWhereInput[]
    OR?: LeadWhereInput[]
    NOT?: LeadWhereInput | LeadWhereInput[]
    LoanType?: IntNullableFilter<"Lead"> | number | null
    FirstName?: StringNullableFilter<"Lead"> | string | null
    LastName?: StringNullableFilter<"Lead"> | string | null
    MobileNumber?: StringNullableFilter<"Lead"> | string | null
    LeadCaptureDateTime?: DateTimeFilter<"Lead"> | Date | string
    Email?: StringNullableFilter<"Lead"> | string | null
    Dob?: DateTimeNullableFilter<"Lead"> | Date | string | null
    Age?: IntNullableFilter<"Lead"> | number | null
    Gender?: IntNullableFilter<"Lead"> | number | null
    MaritalStatus?: IntNullableFilter<"Lead"> | number | null
    Profession?: IntNullableFilter<"Lead"> | number | null
    Pancard?: StringNullableFilter<"Lead"> | string | null
    AadharNumber?: StringNullableFilter<"Lead"> | string | null
    CurrentAddress?: StringNullableFilter<"Lead"> | string | null
    CurrentAddress2?: StringNullableFilter<"Lead"> | string | null
    CurrentPincode?: StringNullableFilter<"Lead"> | string | null
    CurrentCity?: StringNullableFilter<"Lead"> | string | null
    CurrentState?: StringNullableFilter<"Lead"> | string | null
    Tobacco?: IntNullableFilter<"Lead"> | number | null
    CurrentResidenceType?: StringNullableFilter<"Lead"> | string | null
    FatherName?: StringNullableFilter<"Lead"> | string | null
    MotherName?: StringNullableFilter<"Lead"> | string | null
    Education?: IntNullableFilter<"Lead"> | number | null
    IpAddress?: StringFilter<"Lead"> | string
    CompanyType?: IntNullableFilter<"Lead"> | number | null
    IndustryType?: StringNullableFilter<"Lead"> | string | null
    CompanyName?: StringNullableFilter<"Lead"> | string | null
    CurrentDesignation?: StringNullableFilter<"Lead"> | string | null
    CompanyAddress?: StringNullableFilter<"Lead"> | string | null
    Landmark?: StringNullableFilter<"Lead"> | string | null
    CompanyPincode?: StringNullableFilter<"Lead"> | string | null
    CompanyCity?: StringNullableFilter<"Lead"> | string | null
    NetMonthlyIncome?: FloatNullableFilter<"Lead"> | number | null
    BankName?: StringNullableFilter<"Lead"> | string | null
    ActiveCreditcardHolder?: IntNullableFilter<"Lead"> | number | null
    OfficialEmailId?: StringNullableFilter<"Lead"> | string | null
    LoanAmountRequired?: FloatNullableFilter<"Lead"> | number | null
    LoanTenure?: StringNullableFilter<"Lead"> | string | null
    Businesspan?: StringNullableFilter<"Lead"> | string | null
    Gst?: StringNullableFilter<"Lead"> | string | null
    CompanyTurnover?: IntNullableFilter<"Lead"> | number | null
    BusinessAgeInYears?: IntNullableFilter<"Lead"> | number | null
    BusinessOwnership?: IntNullableFilter<"Lead"> | number | null
    PromoterfirstName?: StringNullableFilter<"Lead"> | string | null
    PromoterlastName?: StringNullableFilter<"Lead"> | string | null
    PromoterEmail?: StringNullableFilter<"Lead"> | string | null
    PromoterDob?: DateTimeNullableFilter<"Lead"> | Date | string | null
    PromoterGender?: IntNullableFilter<"Lead"> | number | null
    PromoterPancard?: StringNullableFilter<"Lead"> | string | null
    PromoterAddress?: StringNullableFilter<"Lead"> | string | null
    PromoterOwnership?: IntNullableFilter<"Lead"> | number | null
    OTP?: StringNullableFilter<"Lead"> | string | null
    otpGenerationDateTime?: DateTimeNullableFilter<"Lead"> | Date | string | null
    IsMobileNumberVerified?: IntNullableFilter<"Lead"> | number | null
    Email_Verified?: IntNullableFilter<"Lead"> | number | null
    Latitude?: FloatNullableFilter<"Lead"> | number | null
    Longitude?: FloatNullableFilter<"Lead"> | number | null
    Location?: StringNullableFilter<"Lead"> | string | null
    UtmSource?: StringNullableFilter<"Lead"> | string | null
    Pid?: StringNullableFilter<"Lead"> | string | null
    UserBrowser?: StringNullableFilter<"Lead"> | string | null
    UserDevice?: StringNullableFilter<"Lead"> | string | null
    UserOs?: StringNullableFilter<"Lead"> | string | null
    UniqueToken?: StringNullableFilter<"Lead"> | string | null
    leadToPushRecord?: XOR<LeadToPushRecordNullableRelationFilter, LeadToPushRecordWhereInput> | null
  }, "LeadId" | "LeadId">

  export type LeadOrderByWithAggregationInput = {
    LeadId?: SortOrder
    LoanType?: SortOrderInput | SortOrder
    FirstName?: SortOrderInput | SortOrder
    LastName?: SortOrderInput | SortOrder
    MobileNumber?: SortOrderInput | SortOrder
    LeadCaptureDateTime?: SortOrder
    Email?: SortOrderInput | SortOrder
    Dob?: SortOrderInput | SortOrder
    Age?: SortOrderInput | SortOrder
    Gender?: SortOrderInput | SortOrder
    MaritalStatus?: SortOrderInput | SortOrder
    Profession?: SortOrderInput | SortOrder
    Pancard?: SortOrderInput | SortOrder
    AadharNumber?: SortOrderInput | SortOrder
    CurrentAddress?: SortOrderInput | SortOrder
    CurrentAddress2?: SortOrderInput | SortOrder
    CurrentPincode?: SortOrderInput | SortOrder
    CurrentCity?: SortOrderInput | SortOrder
    CurrentState?: SortOrderInput | SortOrder
    Tobacco?: SortOrderInput | SortOrder
    CurrentResidenceType?: SortOrderInput | SortOrder
    FatherName?: SortOrderInput | SortOrder
    MotherName?: SortOrderInput | SortOrder
    Education?: SortOrderInput | SortOrder
    IpAddress?: SortOrder
    CompanyType?: SortOrderInput | SortOrder
    IndustryType?: SortOrderInput | SortOrder
    CompanyName?: SortOrderInput | SortOrder
    CurrentDesignation?: SortOrderInput | SortOrder
    CompanyAddress?: SortOrderInput | SortOrder
    Landmark?: SortOrderInput | SortOrder
    CompanyPincode?: SortOrderInput | SortOrder
    CompanyCity?: SortOrderInput | SortOrder
    NetMonthlyIncome?: SortOrderInput | SortOrder
    BankName?: SortOrderInput | SortOrder
    ActiveCreditcardHolder?: SortOrderInput | SortOrder
    OfficialEmailId?: SortOrderInput | SortOrder
    LoanAmountRequired?: SortOrderInput | SortOrder
    LoanTenure?: SortOrderInput | SortOrder
    Businesspan?: SortOrderInput | SortOrder
    Gst?: SortOrderInput | SortOrder
    CompanyTurnover?: SortOrderInput | SortOrder
    BusinessAgeInYears?: SortOrderInput | SortOrder
    BusinessOwnership?: SortOrderInput | SortOrder
    PromoterfirstName?: SortOrderInput | SortOrder
    PromoterlastName?: SortOrderInput | SortOrder
    PromoterEmail?: SortOrderInput | SortOrder
    PromoterDob?: SortOrderInput | SortOrder
    PromoterGender?: SortOrderInput | SortOrder
    PromoterPancard?: SortOrderInput | SortOrder
    PromoterAddress?: SortOrderInput | SortOrder
    PromoterOwnership?: SortOrderInput | SortOrder
    OTP?: SortOrderInput | SortOrder
    otpGenerationDateTime?: SortOrderInput | SortOrder
    IsMobileNumberVerified?: SortOrderInput | SortOrder
    Email_Verified?: SortOrderInput | SortOrder
    Latitude?: SortOrderInput | SortOrder
    Longitude?: SortOrderInput | SortOrder
    Location?: SortOrderInput | SortOrder
    UtmSource?: SortOrderInput | SortOrder
    Pid?: SortOrderInput | SortOrder
    UserBrowser?: SortOrderInput | SortOrder
    UserDevice?: SortOrderInput | SortOrder
    UserOs?: SortOrderInput | SortOrder
    UniqueToken?: SortOrderInput | SortOrder
    _count?: LeadCountOrderByAggregateInput
    _avg?: LeadAvgOrderByAggregateInput
    _max?: LeadMaxOrderByAggregateInput
    _min?: LeadMinOrderByAggregateInput
    _sum?: LeadSumOrderByAggregateInput
  }

  export type LeadScalarWhereWithAggregatesInput = {
    AND?: LeadScalarWhereWithAggregatesInput | LeadScalarWhereWithAggregatesInput[]
    OR?: LeadScalarWhereWithAggregatesInput[]
    NOT?: LeadScalarWhereWithAggregatesInput | LeadScalarWhereWithAggregatesInput[]
    LeadId?: IntWithAggregatesFilter<"Lead"> | number
    LoanType?: IntNullableWithAggregatesFilter<"Lead"> | number | null
    FirstName?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    LastName?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    MobileNumber?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    LeadCaptureDateTime?: DateTimeWithAggregatesFilter<"Lead"> | Date | string
    Email?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    Dob?: DateTimeNullableWithAggregatesFilter<"Lead"> | Date | string | null
    Age?: IntNullableWithAggregatesFilter<"Lead"> | number | null
    Gender?: IntNullableWithAggregatesFilter<"Lead"> | number | null
    MaritalStatus?: IntNullableWithAggregatesFilter<"Lead"> | number | null
    Profession?: IntNullableWithAggregatesFilter<"Lead"> | number | null
    Pancard?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    AadharNumber?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    CurrentAddress?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    CurrentAddress2?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    CurrentPincode?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    CurrentCity?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    CurrentState?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    Tobacco?: IntNullableWithAggregatesFilter<"Lead"> | number | null
    CurrentResidenceType?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    FatherName?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    MotherName?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    Education?: IntNullableWithAggregatesFilter<"Lead"> | number | null
    IpAddress?: StringWithAggregatesFilter<"Lead"> | string
    CompanyType?: IntNullableWithAggregatesFilter<"Lead"> | number | null
    IndustryType?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    CompanyName?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    CurrentDesignation?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    CompanyAddress?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    Landmark?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    CompanyPincode?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    CompanyCity?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    NetMonthlyIncome?: FloatNullableWithAggregatesFilter<"Lead"> | number | null
    BankName?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    ActiveCreditcardHolder?: IntNullableWithAggregatesFilter<"Lead"> | number | null
    OfficialEmailId?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    LoanAmountRequired?: FloatNullableWithAggregatesFilter<"Lead"> | number | null
    LoanTenure?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    Businesspan?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    Gst?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    CompanyTurnover?: IntNullableWithAggregatesFilter<"Lead"> | number | null
    BusinessAgeInYears?: IntNullableWithAggregatesFilter<"Lead"> | number | null
    BusinessOwnership?: IntNullableWithAggregatesFilter<"Lead"> | number | null
    PromoterfirstName?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    PromoterlastName?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    PromoterEmail?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    PromoterDob?: DateTimeNullableWithAggregatesFilter<"Lead"> | Date | string | null
    PromoterGender?: IntNullableWithAggregatesFilter<"Lead"> | number | null
    PromoterPancard?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    PromoterAddress?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    PromoterOwnership?: IntNullableWithAggregatesFilter<"Lead"> | number | null
    OTP?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    otpGenerationDateTime?: DateTimeNullableWithAggregatesFilter<"Lead"> | Date | string | null
    IsMobileNumberVerified?: IntNullableWithAggregatesFilter<"Lead"> | number | null
    Email_Verified?: IntNullableWithAggregatesFilter<"Lead"> | number | null
    Latitude?: FloatNullableWithAggregatesFilter<"Lead"> | number | null
    Longitude?: FloatNullableWithAggregatesFilter<"Lead"> | number | null
    Location?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    UtmSource?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    Pid?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    UserBrowser?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    UserDevice?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    UserOs?: StringNullableWithAggregatesFilter<"Lead"> | string | null
    UniqueToken?: StringNullableWithAggregatesFilter<"Lead"> | string | null
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    userID?: IntFilter<"User"> | number
    adminId?: IntFilter<"User"> | number
    firstName?: StringFilter<"User"> | string
    lastName?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    mobileNumber?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    status?: IntFilter<"User"> | number
    role?: EnumRoleFilter<"User"> | $Enums.Role
    OTP?: StringFilter<"User"> | string
    OTPGenerationDateTime?: DateTimeNullableFilter<"User"> | Date | string | null
  }

  export type UserOrderByWithRelationInput = {
    userID?: SortOrder
    adminId?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    mobileNumber?: SortOrder
    password?: SortOrder
    status?: SortOrder
    role?: SortOrder
    OTP?: SortOrder
    OTPGenerationDateTime?: SortOrderInput | SortOrder
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    userID?: number
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    adminId?: IntFilter<"User"> | number
    firstName?: StringFilter<"User"> | string
    lastName?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    mobileNumber?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    status?: IntFilter<"User"> | number
    role?: EnumRoleFilter<"User"> | $Enums.Role
    OTP?: StringFilter<"User"> | string
    OTPGenerationDateTime?: DateTimeNullableFilter<"User"> | Date | string | null
  }, "userID">

  export type UserOrderByWithAggregationInput = {
    userID?: SortOrder
    adminId?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    mobileNumber?: SortOrder
    password?: SortOrder
    status?: SortOrder
    role?: SortOrder
    OTP?: SortOrder
    OTPGenerationDateTime?: SortOrderInput | SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    userID?: IntWithAggregatesFilter<"User"> | number
    adminId?: IntWithAggregatesFilter<"User"> | number
    firstName?: StringWithAggregatesFilter<"User"> | string
    lastName?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    mobileNumber?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
    status?: IntWithAggregatesFilter<"User"> | number
    role?: EnumRoleWithAggregatesFilter<"User"> | $Enums.Role
    OTP?: StringWithAggregatesFilter<"User"> | string
    OTPGenerationDateTime?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
  }

  export type LeadToPushRecordWhereInput = {
    AND?: LeadToPushRecordWhereInput | LeadToPushRecordWhereInput[]
    OR?: LeadToPushRecordWhereInput[]
    NOT?: LeadToPushRecordWhereInput | LeadToPushRecordWhereInput[]
    Id?: IntFilter<"LeadToPushRecord"> | number
    Campaign?: IntFilter<"LeadToPushRecord"> | number
    LeadId?: IntFilter<"LeadToPushRecord"> | number
    PushDateTime?: DateTimeNullableFilter<"LeadToPushRecord"> | Date | string | null
    IsAutomatic?: BoolFilter<"LeadToPushRecord"> | boolean
    Logic?: StringFilter<"LeadToPushRecord"> | string
    IsResponseOk?: StringNullableFilter<"LeadToPushRecord"> | string | null
    LastUpdated?: DateTimeFilter<"LeadToPushRecord"> | Date | string
    PushedToClientFibe?: IntFilter<"LeadToPushRecord"> | number
    PushedToClientMpocket?: IntFilter<"LeadToPushRecord"> | number
    PushedToClientCashe?: IntFilter<"LeadToPushRecord"> | number
    PushedToClientFlexi?: IntFilter<"LeadToPushRecord"> | number
    PushedToClientSafeBima?: IntFilter<"LeadToPushRecord"> | number
    PushedToClientEdelweiss?: IntFilter<"LeadToPushRecord"> | number
    ResponseFlexi?: StringNullableFilter<"LeadToPushRecord"> | string | null
    ResponseFibe?: StringNullableFilter<"LeadToPushRecord"> | string | null
    ResponseMpocket?: StringNullableFilter<"LeadToPushRecord"> | string | null
    ResponseCashe?: StringNullableFilter<"LeadToPushRecord"> | string | null
    ResponseSafeBima?: StringNullableFilter<"LeadToPushRecord"> | string | null
    ResponseEdelweiss?: StringNullableFilter<"LeadToPushRecord"> | string | null
    lead?: XOR<LeadRelationFilter, LeadWhereInput>
  }

  export type LeadToPushRecordOrderByWithRelationInput = {
    Id?: SortOrder
    Campaign?: SortOrder
    LeadId?: SortOrder
    PushDateTime?: SortOrderInput | SortOrder
    IsAutomatic?: SortOrder
    Logic?: SortOrder
    IsResponseOk?: SortOrderInput | SortOrder
    LastUpdated?: SortOrder
    PushedToClientFibe?: SortOrder
    PushedToClientMpocket?: SortOrder
    PushedToClientCashe?: SortOrder
    PushedToClientFlexi?: SortOrder
    PushedToClientSafeBima?: SortOrder
    PushedToClientEdelweiss?: SortOrder
    ResponseFlexi?: SortOrderInput | SortOrder
    ResponseFibe?: SortOrderInput | SortOrder
    ResponseMpocket?: SortOrderInput | SortOrder
    ResponseCashe?: SortOrderInput | SortOrder
    ResponseSafeBima?: SortOrderInput | SortOrder
    ResponseEdelweiss?: SortOrderInput | SortOrder
    lead?: LeadOrderByWithRelationInput
  }

  export type LeadToPushRecordWhereUniqueInput = Prisma.AtLeast<{
    Id?: number
    LeadId?: number
    AND?: LeadToPushRecordWhereInput | LeadToPushRecordWhereInput[]
    OR?: LeadToPushRecordWhereInput[]
    NOT?: LeadToPushRecordWhereInput | LeadToPushRecordWhereInput[]
    Campaign?: IntFilter<"LeadToPushRecord"> | number
    PushDateTime?: DateTimeNullableFilter<"LeadToPushRecord"> | Date | string | null
    IsAutomatic?: BoolFilter<"LeadToPushRecord"> | boolean
    Logic?: StringFilter<"LeadToPushRecord"> | string
    IsResponseOk?: StringNullableFilter<"LeadToPushRecord"> | string | null
    LastUpdated?: DateTimeFilter<"LeadToPushRecord"> | Date | string
    PushedToClientFibe?: IntFilter<"LeadToPushRecord"> | number
    PushedToClientMpocket?: IntFilter<"LeadToPushRecord"> | number
    PushedToClientCashe?: IntFilter<"LeadToPushRecord"> | number
    PushedToClientFlexi?: IntFilter<"LeadToPushRecord"> | number
    PushedToClientSafeBima?: IntFilter<"LeadToPushRecord"> | number
    PushedToClientEdelweiss?: IntFilter<"LeadToPushRecord"> | number
    ResponseFlexi?: StringNullableFilter<"LeadToPushRecord"> | string | null
    ResponseFibe?: StringNullableFilter<"LeadToPushRecord"> | string | null
    ResponseMpocket?: StringNullableFilter<"LeadToPushRecord"> | string | null
    ResponseCashe?: StringNullableFilter<"LeadToPushRecord"> | string | null
    ResponseSafeBima?: StringNullableFilter<"LeadToPushRecord"> | string | null
    ResponseEdelweiss?: StringNullableFilter<"LeadToPushRecord"> | string | null
    lead?: XOR<LeadRelationFilter, LeadWhereInput>
  }, "Id" | "LeadId">

  export type LeadToPushRecordOrderByWithAggregationInput = {
    Id?: SortOrder
    Campaign?: SortOrder
    LeadId?: SortOrder
    PushDateTime?: SortOrderInput | SortOrder
    IsAutomatic?: SortOrder
    Logic?: SortOrder
    IsResponseOk?: SortOrderInput | SortOrder
    LastUpdated?: SortOrder
    PushedToClientFibe?: SortOrder
    PushedToClientMpocket?: SortOrder
    PushedToClientCashe?: SortOrder
    PushedToClientFlexi?: SortOrder
    PushedToClientSafeBima?: SortOrder
    PushedToClientEdelweiss?: SortOrder
    ResponseFlexi?: SortOrderInput | SortOrder
    ResponseFibe?: SortOrderInput | SortOrder
    ResponseMpocket?: SortOrderInput | SortOrder
    ResponseCashe?: SortOrderInput | SortOrder
    ResponseSafeBima?: SortOrderInput | SortOrder
    ResponseEdelweiss?: SortOrderInput | SortOrder
    _count?: LeadToPushRecordCountOrderByAggregateInput
    _avg?: LeadToPushRecordAvgOrderByAggregateInput
    _max?: LeadToPushRecordMaxOrderByAggregateInput
    _min?: LeadToPushRecordMinOrderByAggregateInput
    _sum?: LeadToPushRecordSumOrderByAggregateInput
  }

  export type LeadToPushRecordScalarWhereWithAggregatesInput = {
    AND?: LeadToPushRecordScalarWhereWithAggregatesInput | LeadToPushRecordScalarWhereWithAggregatesInput[]
    OR?: LeadToPushRecordScalarWhereWithAggregatesInput[]
    NOT?: LeadToPushRecordScalarWhereWithAggregatesInput | LeadToPushRecordScalarWhereWithAggregatesInput[]
    Id?: IntWithAggregatesFilter<"LeadToPushRecord"> | number
    Campaign?: IntWithAggregatesFilter<"LeadToPushRecord"> | number
    LeadId?: IntWithAggregatesFilter<"LeadToPushRecord"> | number
    PushDateTime?: DateTimeNullableWithAggregatesFilter<"LeadToPushRecord"> | Date | string | null
    IsAutomatic?: BoolWithAggregatesFilter<"LeadToPushRecord"> | boolean
    Logic?: StringWithAggregatesFilter<"LeadToPushRecord"> | string
    IsResponseOk?: StringNullableWithAggregatesFilter<"LeadToPushRecord"> | string | null
    LastUpdated?: DateTimeWithAggregatesFilter<"LeadToPushRecord"> | Date | string
    PushedToClientFibe?: IntWithAggregatesFilter<"LeadToPushRecord"> | number
    PushedToClientMpocket?: IntWithAggregatesFilter<"LeadToPushRecord"> | number
    PushedToClientCashe?: IntWithAggregatesFilter<"LeadToPushRecord"> | number
    PushedToClientFlexi?: IntWithAggregatesFilter<"LeadToPushRecord"> | number
    PushedToClientSafeBima?: IntWithAggregatesFilter<"LeadToPushRecord"> | number
    PushedToClientEdelweiss?: IntWithAggregatesFilter<"LeadToPushRecord"> | number
    ResponseFlexi?: StringNullableWithAggregatesFilter<"LeadToPushRecord"> | string | null
    ResponseFibe?: StringNullableWithAggregatesFilter<"LeadToPushRecord"> | string | null
    ResponseMpocket?: StringNullableWithAggregatesFilter<"LeadToPushRecord"> | string | null
    ResponseCashe?: StringNullableWithAggregatesFilter<"LeadToPushRecord"> | string | null
    ResponseSafeBima?: StringNullableWithAggregatesFilter<"LeadToPushRecord"> | string | null
    ResponseEdelweiss?: StringNullableWithAggregatesFilter<"LeadToPushRecord"> | string | null
  }

  export type CampaignCreateInput = {
    CampaignName?: string | null
    LoanType?: string | null
    CampaignFields?: string | null
    CampaignImg?: string | null
    isActive?: number
    loanType: LoanTypeCreateNestedOneWithoutCampaignsInput
  }

  export type CampaignUncheckedCreateInput = {
    id?: number
    CampaignName?: string | null
    LoanType?: string | null
    CampaignFields?: string | null
    CampaignImg?: string | null
    isActive?: number
    LoanTypeId: number
  }

  export type CampaignUpdateInput = {
    CampaignName?: NullableStringFieldUpdateOperationsInput | string | null
    LoanType?: NullableStringFieldUpdateOperationsInput | string | null
    CampaignFields?: NullableStringFieldUpdateOperationsInput | string | null
    CampaignImg?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: IntFieldUpdateOperationsInput | number
    loanType?: LoanTypeUpdateOneRequiredWithoutCampaignsNestedInput
  }

  export type CampaignUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    CampaignName?: NullableStringFieldUpdateOperationsInput | string | null
    LoanType?: NullableStringFieldUpdateOperationsInput | string | null
    CampaignFields?: NullableStringFieldUpdateOperationsInput | string | null
    CampaignImg?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: IntFieldUpdateOperationsInput | number
    LoanTypeId?: IntFieldUpdateOperationsInput | number
  }

  export type CampaignCreateManyInput = {
    id?: number
    CampaignName?: string | null
    LoanType?: string | null
    CampaignFields?: string | null
    CampaignImg?: string | null
    isActive?: number
    LoanTypeId: number
  }

  export type CampaignUpdateManyMutationInput = {
    CampaignName?: NullableStringFieldUpdateOperationsInput | string | null
    LoanType?: NullableStringFieldUpdateOperationsInput | string | null
    CampaignFields?: NullableStringFieldUpdateOperationsInput | string | null
    CampaignImg?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: IntFieldUpdateOperationsInput | number
  }

  export type CampaignUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    CampaignName?: NullableStringFieldUpdateOperationsInput | string | null
    LoanType?: NullableStringFieldUpdateOperationsInput | string | null
    CampaignFields?: NullableStringFieldUpdateOperationsInput | string | null
    CampaignImg?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: IntFieldUpdateOperationsInput | number
    LoanTypeId?: IntFieldUpdateOperationsInput | number
  }

  export type LoanTypeCreateInput = {
    LoanType?: string | null
    campaigns?: CampaignCreateNestedManyWithoutLoanTypeInput
  }

  export type LoanTypeUncheckedCreateInput = {
    id?: number
    LoanType?: string | null
    campaigns?: CampaignUncheckedCreateNestedManyWithoutLoanTypeInput
  }

  export type LoanTypeUpdateInput = {
    LoanType?: NullableStringFieldUpdateOperationsInput | string | null
    campaigns?: CampaignUpdateManyWithoutLoanTypeNestedInput
  }

  export type LoanTypeUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    LoanType?: NullableStringFieldUpdateOperationsInput | string | null
    campaigns?: CampaignUncheckedUpdateManyWithoutLoanTypeNestedInput
  }

  export type LoanTypeCreateManyInput = {
    id?: number
    LoanType?: string | null
  }

  export type LoanTypeUpdateManyMutationInput = {
    LoanType?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LoanTypeUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    LoanType?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LeadCreateInput = {
    LoanType?: number | null
    FirstName?: string | null
    LastName?: string | null
    MobileNumber?: string | null
    LeadCaptureDateTime?: Date | string
    Email?: string | null
    Dob?: Date | string | null
    Age?: number | null
    Gender?: number | null
    MaritalStatus?: number | null
    Profession?: number | null
    Pancard?: string | null
    AadharNumber?: string | null
    CurrentAddress?: string | null
    CurrentAddress2?: string | null
    CurrentPincode?: string | null
    CurrentCity?: string | null
    CurrentState?: string | null
    Tobacco?: number | null
    CurrentResidenceType?: string | null
    FatherName?: string | null
    MotherName?: string | null
    Education?: number | null
    IpAddress: string
    CompanyType?: number | null
    IndustryType?: string | null
    CompanyName?: string | null
    CurrentDesignation?: string | null
    CompanyAddress?: string | null
    Landmark?: string | null
    CompanyPincode?: string | null
    CompanyCity?: string | null
    NetMonthlyIncome?: number | null
    BankName?: string | null
    ActiveCreditcardHolder?: number | null
    OfficialEmailId?: string | null
    LoanAmountRequired?: number | null
    LoanTenure?: string | null
    Businesspan?: string | null
    Gst?: string | null
    CompanyTurnover?: number | null
    BusinessAgeInYears?: number | null
    BusinessOwnership?: number | null
    PromoterfirstName?: string | null
    PromoterlastName?: string | null
    PromoterEmail?: string | null
    PromoterDob?: Date | string | null
    PromoterGender?: number | null
    PromoterPancard?: string | null
    PromoterAddress?: string | null
    PromoterOwnership?: number | null
    OTP?: string | null
    otpGenerationDateTime?: Date | string | null
    IsMobileNumberVerified?: number | null
    Email_Verified?: number | null
    Latitude?: number | null
    Longitude?: number | null
    Location?: string | null
    UtmSource?: string | null
    Pid?: string | null
    UserBrowser?: string | null
    UserDevice?: string | null
    UserOs?: string | null
    UniqueToken?: string | null
    leadToPushRecord?: LeadToPushRecordCreateNestedOneWithoutLeadInput
  }

  export type LeadUncheckedCreateInput = {
    LeadId?: number
    LoanType?: number | null
    FirstName?: string | null
    LastName?: string | null
    MobileNumber?: string | null
    LeadCaptureDateTime?: Date | string
    Email?: string | null
    Dob?: Date | string | null
    Age?: number | null
    Gender?: number | null
    MaritalStatus?: number | null
    Profession?: number | null
    Pancard?: string | null
    AadharNumber?: string | null
    CurrentAddress?: string | null
    CurrentAddress2?: string | null
    CurrentPincode?: string | null
    CurrentCity?: string | null
    CurrentState?: string | null
    Tobacco?: number | null
    CurrentResidenceType?: string | null
    FatherName?: string | null
    MotherName?: string | null
    Education?: number | null
    IpAddress: string
    CompanyType?: number | null
    IndustryType?: string | null
    CompanyName?: string | null
    CurrentDesignation?: string | null
    CompanyAddress?: string | null
    Landmark?: string | null
    CompanyPincode?: string | null
    CompanyCity?: string | null
    NetMonthlyIncome?: number | null
    BankName?: string | null
    ActiveCreditcardHolder?: number | null
    OfficialEmailId?: string | null
    LoanAmountRequired?: number | null
    LoanTenure?: string | null
    Businesspan?: string | null
    Gst?: string | null
    CompanyTurnover?: number | null
    BusinessAgeInYears?: number | null
    BusinessOwnership?: number | null
    PromoterfirstName?: string | null
    PromoterlastName?: string | null
    PromoterEmail?: string | null
    PromoterDob?: Date | string | null
    PromoterGender?: number | null
    PromoterPancard?: string | null
    PromoterAddress?: string | null
    PromoterOwnership?: number | null
    OTP?: string | null
    otpGenerationDateTime?: Date | string | null
    IsMobileNumberVerified?: number | null
    Email_Verified?: number | null
    Latitude?: number | null
    Longitude?: number | null
    Location?: string | null
    UtmSource?: string | null
    Pid?: string | null
    UserBrowser?: string | null
    UserDevice?: string | null
    UserOs?: string | null
    UniqueToken?: string | null
    leadToPushRecord?: LeadToPushRecordUncheckedCreateNestedOneWithoutLeadInput
  }

  export type LeadUpdateInput = {
    LoanType?: NullableIntFieldUpdateOperationsInput | number | null
    FirstName?: NullableStringFieldUpdateOperationsInput | string | null
    LastName?: NullableStringFieldUpdateOperationsInput | string | null
    MobileNumber?: NullableStringFieldUpdateOperationsInput | string | null
    LeadCaptureDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    Dob?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Age?: NullableIntFieldUpdateOperationsInput | number | null
    Gender?: NullableIntFieldUpdateOperationsInput | number | null
    MaritalStatus?: NullableIntFieldUpdateOperationsInput | number | null
    Profession?: NullableIntFieldUpdateOperationsInput | number | null
    Pancard?: NullableStringFieldUpdateOperationsInput | string | null
    AadharNumber?: NullableStringFieldUpdateOperationsInput | string | null
    CurrentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    CurrentAddress2?: NullableStringFieldUpdateOperationsInput | string | null
    CurrentPincode?: NullableStringFieldUpdateOperationsInput | string | null
    CurrentCity?: NullableStringFieldUpdateOperationsInput | string | null
    CurrentState?: NullableStringFieldUpdateOperationsInput | string | null
    Tobacco?: NullableIntFieldUpdateOperationsInput | number | null
    CurrentResidenceType?: NullableStringFieldUpdateOperationsInput | string | null
    FatherName?: NullableStringFieldUpdateOperationsInput | string | null
    MotherName?: NullableStringFieldUpdateOperationsInput | string | null
    Education?: NullableIntFieldUpdateOperationsInput | number | null
    IpAddress?: StringFieldUpdateOperationsInput | string
    CompanyType?: NullableIntFieldUpdateOperationsInput | number | null
    IndustryType?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyName?: NullableStringFieldUpdateOperationsInput | string | null
    CurrentDesignation?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyAddress?: NullableStringFieldUpdateOperationsInput | string | null
    Landmark?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyPincode?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyCity?: NullableStringFieldUpdateOperationsInput | string | null
    NetMonthlyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    BankName?: NullableStringFieldUpdateOperationsInput | string | null
    ActiveCreditcardHolder?: NullableIntFieldUpdateOperationsInput | number | null
    OfficialEmailId?: NullableStringFieldUpdateOperationsInput | string | null
    LoanAmountRequired?: NullableFloatFieldUpdateOperationsInput | number | null
    LoanTenure?: NullableStringFieldUpdateOperationsInput | string | null
    Businesspan?: NullableStringFieldUpdateOperationsInput | string | null
    Gst?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyTurnover?: NullableIntFieldUpdateOperationsInput | number | null
    BusinessAgeInYears?: NullableIntFieldUpdateOperationsInput | number | null
    BusinessOwnership?: NullableIntFieldUpdateOperationsInput | number | null
    PromoterfirstName?: NullableStringFieldUpdateOperationsInput | string | null
    PromoterlastName?: NullableStringFieldUpdateOperationsInput | string | null
    PromoterEmail?: NullableStringFieldUpdateOperationsInput | string | null
    PromoterDob?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    PromoterGender?: NullableIntFieldUpdateOperationsInput | number | null
    PromoterPancard?: NullableStringFieldUpdateOperationsInput | string | null
    PromoterAddress?: NullableStringFieldUpdateOperationsInput | string | null
    PromoterOwnership?: NullableIntFieldUpdateOperationsInput | number | null
    OTP?: NullableStringFieldUpdateOperationsInput | string | null
    otpGenerationDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsMobileNumberVerified?: NullableIntFieldUpdateOperationsInput | number | null
    Email_Verified?: NullableIntFieldUpdateOperationsInput | number | null
    Latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    Longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    Location?: NullableStringFieldUpdateOperationsInput | string | null
    UtmSource?: NullableStringFieldUpdateOperationsInput | string | null
    Pid?: NullableStringFieldUpdateOperationsInput | string | null
    UserBrowser?: NullableStringFieldUpdateOperationsInput | string | null
    UserDevice?: NullableStringFieldUpdateOperationsInput | string | null
    UserOs?: NullableStringFieldUpdateOperationsInput | string | null
    UniqueToken?: NullableStringFieldUpdateOperationsInput | string | null
    leadToPushRecord?: LeadToPushRecordUpdateOneWithoutLeadNestedInput
  }

  export type LeadUncheckedUpdateInput = {
    LeadId?: IntFieldUpdateOperationsInput | number
    LoanType?: NullableIntFieldUpdateOperationsInput | number | null
    FirstName?: NullableStringFieldUpdateOperationsInput | string | null
    LastName?: NullableStringFieldUpdateOperationsInput | string | null
    MobileNumber?: NullableStringFieldUpdateOperationsInput | string | null
    LeadCaptureDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    Dob?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Age?: NullableIntFieldUpdateOperationsInput | number | null
    Gender?: NullableIntFieldUpdateOperationsInput | number | null
    MaritalStatus?: NullableIntFieldUpdateOperationsInput | number | null
    Profession?: NullableIntFieldUpdateOperationsInput | number | null
    Pancard?: NullableStringFieldUpdateOperationsInput | string | null
    AadharNumber?: NullableStringFieldUpdateOperationsInput | string | null
    CurrentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    CurrentAddress2?: NullableStringFieldUpdateOperationsInput | string | null
    CurrentPincode?: NullableStringFieldUpdateOperationsInput | string | null
    CurrentCity?: NullableStringFieldUpdateOperationsInput | string | null
    CurrentState?: NullableStringFieldUpdateOperationsInput | string | null
    Tobacco?: NullableIntFieldUpdateOperationsInput | number | null
    CurrentResidenceType?: NullableStringFieldUpdateOperationsInput | string | null
    FatherName?: NullableStringFieldUpdateOperationsInput | string | null
    MotherName?: NullableStringFieldUpdateOperationsInput | string | null
    Education?: NullableIntFieldUpdateOperationsInput | number | null
    IpAddress?: StringFieldUpdateOperationsInput | string
    CompanyType?: NullableIntFieldUpdateOperationsInput | number | null
    IndustryType?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyName?: NullableStringFieldUpdateOperationsInput | string | null
    CurrentDesignation?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyAddress?: NullableStringFieldUpdateOperationsInput | string | null
    Landmark?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyPincode?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyCity?: NullableStringFieldUpdateOperationsInput | string | null
    NetMonthlyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    BankName?: NullableStringFieldUpdateOperationsInput | string | null
    ActiveCreditcardHolder?: NullableIntFieldUpdateOperationsInput | number | null
    OfficialEmailId?: NullableStringFieldUpdateOperationsInput | string | null
    LoanAmountRequired?: NullableFloatFieldUpdateOperationsInput | number | null
    LoanTenure?: NullableStringFieldUpdateOperationsInput | string | null
    Businesspan?: NullableStringFieldUpdateOperationsInput | string | null
    Gst?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyTurnover?: NullableIntFieldUpdateOperationsInput | number | null
    BusinessAgeInYears?: NullableIntFieldUpdateOperationsInput | number | null
    BusinessOwnership?: NullableIntFieldUpdateOperationsInput | number | null
    PromoterfirstName?: NullableStringFieldUpdateOperationsInput | string | null
    PromoterlastName?: NullableStringFieldUpdateOperationsInput | string | null
    PromoterEmail?: NullableStringFieldUpdateOperationsInput | string | null
    PromoterDob?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    PromoterGender?: NullableIntFieldUpdateOperationsInput | number | null
    PromoterPancard?: NullableStringFieldUpdateOperationsInput | string | null
    PromoterAddress?: NullableStringFieldUpdateOperationsInput | string | null
    PromoterOwnership?: NullableIntFieldUpdateOperationsInput | number | null
    OTP?: NullableStringFieldUpdateOperationsInput | string | null
    otpGenerationDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsMobileNumberVerified?: NullableIntFieldUpdateOperationsInput | number | null
    Email_Verified?: NullableIntFieldUpdateOperationsInput | number | null
    Latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    Longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    Location?: NullableStringFieldUpdateOperationsInput | string | null
    UtmSource?: NullableStringFieldUpdateOperationsInput | string | null
    Pid?: NullableStringFieldUpdateOperationsInput | string | null
    UserBrowser?: NullableStringFieldUpdateOperationsInput | string | null
    UserDevice?: NullableStringFieldUpdateOperationsInput | string | null
    UserOs?: NullableStringFieldUpdateOperationsInput | string | null
    UniqueToken?: NullableStringFieldUpdateOperationsInput | string | null
    leadToPushRecord?: LeadToPushRecordUncheckedUpdateOneWithoutLeadNestedInput
  }

  export type LeadCreateManyInput = {
    LeadId?: number
    LoanType?: number | null
    FirstName?: string | null
    LastName?: string | null
    MobileNumber?: string | null
    LeadCaptureDateTime?: Date | string
    Email?: string | null
    Dob?: Date | string | null
    Age?: number | null
    Gender?: number | null
    MaritalStatus?: number | null
    Profession?: number | null
    Pancard?: string | null
    AadharNumber?: string | null
    CurrentAddress?: string | null
    CurrentAddress2?: string | null
    CurrentPincode?: string | null
    CurrentCity?: string | null
    CurrentState?: string | null
    Tobacco?: number | null
    CurrentResidenceType?: string | null
    FatherName?: string | null
    MotherName?: string | null
    Education?: number | null
    IpAddress: string
    CompanyType?: number | null
    IndustryType?: string | null
    CompanyName?: string | null
    CurrentDesignation?: string | null
    CompanyAddress?: string | null
    Landmark?: string | null
    CompanyPincode?: string | null
    CompanyCity?: string | null
    NetMonthlyIncome?: number | null
    BankName?: string | null
    ActiveCreditcardHolder?: number | null
    OfficialEmailId?: string | null
    LoanAmountRequired?: number | null
    LoanTenure?: string | null
    Businesspan?: string | null
    Gst?: string | null
    CompanyTurnover?: number | null
    BusinessAgeInYears?: number | null
    BusinessOwnership?: number | null
    PromoterfirstName?: string | null
    PromoterlastName?: string | null
    PromoterEmail?: string | null
    PromoterDob?: Date | string | null
    PromoterGender?: number | null
    PromoterPancard?: string | null
    PromoterAddress?: string | null
    PromoterOwnership?: number | null
    OTP?: string | null
    otpGenerationDateTime?: Date | string | null
    IsMobileNumberVerified?: number | null
    Email_Verified?: number | null
    Latitude?: number | null
    Longitude?: number | null
    Location?: string | null
    UtmSource?: string | null
    Pid?: string | null
    UserBrowser?: string | null
    UserDevice?: string | null
    UserOs?: string | null
    UniqueToken?: string | null
  }

  export type LeadUpdateManyMutationInput = {
    LoanType?: NullableIntFieldUpdateOperationsInput | number | null
    FirstName?: NullableStringFieldUpdateOperationsInput | string | null
    LastName?: NullableStringFieldUpdateOperationsInput | string | null
    MobileNumber?: NullableStringFieldUpdateOperationsInput | string | null
    LeadCaptureDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    Dob?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Age?: NullableIntFieldUpdateOperationsInput | number | null
    Gender?: NullableIntFieldUpdateOperationsInput | number | null
    MaritalStatus?: NullableIntFieldUpdateOperationsInput | number | null
    Profession?: NullableIntFieldUpdateOperationsInput | number | null
    Pancard?: NullableStringFieldUpdateOperationsInput | string | null
    AadharNumber?: NullableStringFieldUpdateOperationsInput | string | null
    CurrentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    CurrentAddress2?: NullableStringFieldUpdateOperationsInput | string | null
    CurrentPincode?: NullableStringFieldUpdateOperationsInput | string | null
    CurrentCity?: NullableStringFieldUpdateOperationsInput | string | null
    CurrentState?: NullableStringFieldUpdateOperationsInput | string | null
    Tobacco?: NullableIntFieldUpdateOperationsInput | number | null
    CurrentResidenceType?: NullableStringFieldUpdateOperationsInput | string | null
    FatherName?: NullableStringFieldUpdateOperationsInput | string | null
    MotherName?: NullableStringFieldUpdateOperationsInput | string | null
    Education?: NullableIntFieldUpdateOperationsInput | number | null
    IpAddress?: StringFieldUpdateOperationsInput | string
    CompanyType?: NullableIntFieldUpdateOperationsInput | number | null
    IndustryType?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyName?: NullableStringFieldUpdateOperationsInput | string | null
    CurrentDesignation?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyAddress?: NullableStringFieldUpdateOperationsInput | string | null
    Landmark?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyPincode?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyCity?: NullableStringFieldUpdateOperationsInput | string | null
    NetMonthlyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    BankName?: NullableStringFieldUpdateOperationsInput | string | null
    ActiveCreditcardHolder?: NullableIntFieldUpdateOperationsInput | number | null
    OfficialEmailId?: NullableStringFieldUpdateOperationsInput | string | null
    LoanAmountRequired?: NullableFloatFieldUpdateOperationsInput | number | null
    LoanTenure?: NullableStringFieldUpdateOperationsInput | string | null
    Businesspan?: NullableStringFieldUpdateOperationsInput | string | null
    Gst?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyTurnover?: NullableIntFieldUpdateOperationsInput | number | null
    BusinessAgeInYears?: NullableIntFieldUpdateOperationsInput | number | null
    BusinessOwnership?: NullableIntFieldUpdateOperationsInput | number | null
    PromoterfirstName?: NullableStringFieldUpdateOperationsInput | string | null
    PromoterlastName?: NullableStringFieldUpdateOperationsInput | string | null
    PromoterEmail?: NullableStringFieldUpdateOperationsInput | string | null
    PromoterDob?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    PromoterGender?: NullableIntFieldUpdateOperationsInput | number | null
    PromoterPancard?: NullableStringFieldUpdateOperationsInput | string | null
    PromoterAddress?: NullableStringFieldUpdateOperationsInput | string | null
    PromoterOwnership?: NullableIntFieldUpdateOperationsInput | number | null
    OTP?: NullableStringFieldUpdateOperationsInput | string | null
    otpGenerationDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsMobileNumberVerified?: NullableIntFieldUpdateOperationsInput | number | null
    Email_Verified?: NullableIntFieldUpdateOperationsInput | number | null
    Latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    Longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    Location?: NullableStringFieldUpdateOperationsInput | string | null
    UtmSource?: NullableStringFieldUpdateOperationsInput | string | null
    Pid?: NullableStringFieldUpdateOperationsInput | string | null
    UserBrowser?: NullableStringFieldUpdateOperationsInput | string | null
    UserDevice?: NullableStringFieldUpdateOperationsInput | string | null
    UserOs?: NullableStringFieldUpdateOperationsInput | string | null
    UniqueToken?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LeadUncheckedUpdateManyInput = {
    LeadId?: IntFieldUpdateOperationsInput | number
    LoanType?: NullableIntFieldUpdateOperationsInput | number | null
    FirstName?: NullableStringFieldUpdateOperationsInput | string | null
    LastName?: NullableStringFieldUpdateOperationsInput | string | null
    MobileNumber?: NullableStringFieldUpdateOperationsInput | string | null
    LeadCaptureDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    Dob?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Age?: NullableIntFieldUpdateOperationsInput | number | null
    Gender?: NullableIntFieldUpdateOperationsInput | number | null
    MaritalStatus?: NullableIntFieldUpdateOperationsInput | number | null
    Profession?: NullableIntFieldUpdateOperationsInput | number | null
    Pancard?: NullableStringFieldUpdateOperationsInput | string | null
    AadharNumber?: NullableStringFieldUpdateOperationsInput | string | null
    CurrentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    CurrentAddress2?: NullableStringFieldUpdateOperationsInput | string | null
    CurrentPincode?: NullableStringFieldUpdateOperationsInput | string | null
    CurrentCity?: NullableStringFieldUpdateOperationsInput | string | null
    CurrentState?: NullableStringFieldUpdateOperationsInput | string | null
    Tobacco?: NullableIntFieldUpdateOperationsInput | number | null
    CurrentResidenceType?: NullableStringFieldUpdateOperationsInput | string | null
    FatherName?: NullableStringFieldUpdateOperationsInput | string | null
    MotherName?: NullableStringFieldUpdateOperationsInput | string | null
    Education?: NullableIntFieldUpdateOperationsInput | number | null
    IpAddress?: StringFieldUpdateOperationsInput | string
    CompanyType?: NullableIntFieldUpdateOperationsInput | number | null
    IndustryType?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyName?: NullableStringFieldUpdateOperationsInput | string | null
    CurrentDesignation?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyAddress?: NullableStringFieldUpdateOperationsInput | string | null
    Landmark?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyPincode?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyCity?: NullableStringFieldUpdateOperationsInput | string | null
    NetMonthlyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    BankName?: NullableStringFieldUpdateOperationsInput | string | null
    ActiveCreditcardHolder?: NullableIntFieldUpdateOperationsInput | number | null
    OfficialEmailId?: NullableStringFieldUpdateOperationsInput | string | null
    LoanAmountRequired?: NullableFloatFieldUpdateOperationsInput | number | null
    LoanTenure?: NullableStringFieldUpdateOperationsInput | string | null
    Businesspan?: NullableStringFieldUpdateOperationsInput | string | null
    Gst?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyTurnover?: NullableIntFieldUpdateOperationsInput | number | null
    BusinessAgeInYears?: NullableIntFieldUpdateOperationsInput | number | null
    BusinessOwnership?: NullableIntFieldUpdateOperationsInput | number | null
    PromoterfirstName?: NullableStringFieldUpdateOperationsInput | string | null
    PromoterlastName?: NullableStringFieldUpdateOperationsInput | string | null
    PromoterEmail?: NullableStringFieldUpdateOperationsInput | string | null
    PromoterDob?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    PromoterGender?: NullableIntFieldUpdateOperationsInput | number | null
    PromoterPancard?: NullableStringFieldUpdateOperationsInput | string | null
    PromoterAddress?: NullableStringFieldUpdateOperationsInput | string | null
    PromoterOwnership?: NullableIntFieldUpdateOperationsInput | number | null
    OTP?: NullableStringFieldUpdateOperationsInput | string | null
    otpGenerationDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsMobileNumberVerified?: NullableIntFieldUpdateOperationsInput | number | null
    Email_Verified?: NullableIntFieldUpdateOperationsInput | number | null
    Latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    Longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    Location?: NullableStringFieldUpdateOperationsInput | string | null
    UtmSource?: NullableStringFieldUpdateOperationsInput | string | null
    Pid?: NullableStringFieldUpdateOperationsInput | string | null
    UserBrowser?: NullableStringFieldUpdateOperationsInput | string | null
    UserDevice?: NullableStringFieldUpdateOperationsInput | string | null
    UserOs?: NullableStringFieldUpdateOperationsInput | string | null
    UniqueToken?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserCreateInput = {
    adminId: number
    firstName: string
    lastName: string
    email: string
    mobileNumber: string
    password: string
    status?: number
    role?: $Enums.Role
    OTP: string
    OTPGenerationDateTime?: Date | string | null
  }

  export type UserUncheckedCreateInput = {
    userID?: number
    adminId: number
    firstName: string
    lastName: string
    email: string
    mobileNumber: string
    password: string
    status?: number
    role?: $Enums.Role
    OTP: string
    OTPGenerationDateTime?: Date | string | null
  }

  export type UserUpdateInput = {
    adminId?: IntFieldUpdateOperationsInput | number
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    mobileNumber?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    OTP?: StringFieldUpdateOperationsInput | string
    OTPGenerationDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserUncheckedUpdateInput = {
    userID?: IntFieldUpdateOperationsInput | number
    adminId?: IntFieldUpdateOperationsInput | number
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    mobileNumber?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    OTP?: StringFieldUpdateOperationsInput | string
    OTPGenerationDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserCreateManyInput = {
    userID?: number
    adminId: number
    firstName: string
    lastName: string
    email: string
    mobileNumber: string
    password: string
    status?: number
    role?: $Enums.Role
    OTP: string
    OTPGenerationDateTime?: Date | string | null
  }

  export type UserUpdateManyMutationInput = {
    adminId?: IntFieldUpdateOperationsInput | number
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    mobileNumber?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    OTP?: StringFieldUpdateOperationsInput | string
    OTPGenerationDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserUncheckedUpdateManyInput = {
    userID?: IntFieldUpdateOperationsInput | number
    adminId?: IntFieldUpdateOperationsInput | number
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    mobileNumber?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    OTP?: StringFieldUpdateOperationsInput | string
    OTPGenerationDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type LeadToPushRecordCreateInput = {
    Campaign: number
    PushDateTime?: Date | string | null
    IsAutomatic: boolean
    Logic: string
    IsResponseOk?: string | null
    LastUpdated?: Date | string
    PushedToClientFibe?: number
    PushedToClientMpocket?: number
    PushedToClientCashe?: number
    PushedToClientFlexi?: number
    PushedToClientSafeBima?: number
    PushedToClientEdelweiss?: number
    ResponseFlexi?: string | null
    ResponseFibe?: string | null
    ResponseMpocket?: string | null
    ResponseCashe?: string | null
    ResponseSafeBima?: string | null
    ResponseEdelweiss?: string | null
    lead: LeadCreateNestedOneWithoutLeadToPushRecordInput
  }

  export type LeadToPushRecordUncheckedCreateInput = {
    Id?: number
    Campaign: number
    LeadId: number
    PushDateTime?: Date | string | null
    IsAutomatic: boolean
    Logic: string
    IsResponseOk?: string | null
    LastUpdated?: Date | string
    PushedToClientFibe?: number
    PushedToClientMpocket?: number
    PushedToClientCashe?: number
    PushedToClientFlexi?: number
    PushedToClientSafeBima?: number
    PushedToClientEdelweiss?: number
    ResponseFlexi?: string | null
    ResponseFibe?: string | null
    ResponseMpocket?: string | null
    ResponseCashe?: string | null
    ResponseSafeBima?: string | null
    ResponseEdelweiss?: string | null
  }

  export type LeadToPushRecordUpdateInput = {
    Campaign?: IntFieldUpdateOperationsInput | number
    PushDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsAutomatic?: BoolFieldUpdateOperationsInput | boolean
    Logic?: StringFieldUpdateOperationsInput | string
    IsResponseOk?: NullableStringFieldUpdateOperationsInput | string | null
    LastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    PushedToClientFibe?: IntFieldUpdateOperationsInput | number
    PushedToClientMpocket?: IntFieldUpdateOperationsInput | number
    PushedToClientCashe?: IntFieldUpdateOperationsInput | number
    PushedToClientFlexi?: IntFieldUpdateOperationsInput | number
    PushedToClientSafeBima?: IntFieldUpdateOperationsInput | number
    PushedToClientEdelweiss?: IntFieldUpdateOperationsInput | number
    ResponseFlexi?: NullableStringFieldUpdateOperationsInput | string | null
    ResponseFibe?: NullableStringFieldUpdateOperationsInput | string | null
    ResponseMpocket?: NullableStringFieldUpdateOperationsInput | string | null
    ResponseCashe?: NullableStringFieldUpdateOperationsInput | string | null
    ResponseSafeBima?: NullableStringFieldUpdateOperationsInput | string | null
    ResponseEdelweiss?: NullableStringFieldUpdateOperationsInput | string | null
    lead?: LeadUpdateOneRequiredWithoutLeadToPushRecordNestedInput
  }

  export type LeadToPushRecordUncheckedUpdateInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Campaign?: IntFieldUpdateOperationsInput | number
    LeadId?: IntFieldUpdateOperationsInput | number
    PushDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsAutomatic?: BoolFieldUpdateOperationsInput | boolean
    Logic?: StringFieldUpdateOperationsInput | string
    IsResponseOk?: NullableStringFieldUpdateOperationsInput | string | null
    LastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    PushedToClientFibe?: IntFieldUpdateOperationsInput | number
    PushedToClientMpocket?: IntFieldUpdateOperationsInput | number
    PushedToClientCashe?: IntFieldUpdateOperationsInput | number
    PushedToClientFlexi?: IntFieldUpdateOperationsInput | number
    PushedToClientSafeBima?: IntFieldUpdateOperationsInput | number
    PushedToClientEdelweiss?: IntFieldUpdateOperationsInput | number
    ResponseFlexi?: NullableStringFieldUpdateOperationsInput | string | null
    ResponseFibe?: NullableStringFieldUpdateOperationsInput | string | null
    ResponseMpocket?: NullableStringFieldUpdateOperationsInput | string | null
    ResponseCashe?: NullableStringFieldUpdateOperationsInput | string | null
    ResponseSafeBima?: NullableStringFieldUpdateOperationsInput | string | null
    ResponseEdelweiss?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LeadToPushRecordCreateManyInput = {
    Id?: number
    Campaign: number
    LeadId: number
    PushDateTime?: Date | string | null
    IsAutomatic: boolean
    Logic: string
    IsResponseOk?: string | null
    LastUpdated?: Date | string
    PushedToClientFibe?: number
    PushedToClientMpocket?: number
    PushedToClientCashe?: number
    PushedToClientFlexi?: number
    PushedToClientSafeBima?: number
    PushedToClientEdelweiss?: number
    ResponseFlexi?: string | null
    ResponseFibe?: string | null
    ResponseMpocket?: string | null
    ResponseCashe?: string | null
    ResponseSafeBima?: string | null
    ResponseEdelweiss?: string | null
  }

  export type LeadToPushRecordUpdateManyMutationInput = {
    Campaign?: IntFieldUpdateOperationsInput | number
    PushDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsAutomatic?: BoolFieldUpdateOperationsInput | boolean
    Logic?: StringFieldUpdateOperationsInput | string
    IsResponseOk?: NullableStringFieldUpdateOperationsInput | string | null
    LastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    PushedToClientFibe?: IntFieldUpdateOperationsInput | number
    PushedToClientMpocket?: IntFieldUpdateOperationsInput | number
    PushedToClientCashe?: IntFieldUpdateOperationsInput | number
    PushedToClientFlexi?: IntFieldUpdateOperationsInput | number
    PushedToClientSafeBima?: IntFieldUpdateOperationsInput | number
    PushedToClientEdelweiss?: IntFieldUpdateOperationsInput | number
    ResponseFlexi?: NullableStringFieldUpdateOperationsInput | string | null
    ResponseFibe?: NullableStringFieldUpdateOperationsInput | string | null
    ResponseMpocket?: NullableStringFieldUpdateOperationsInput | string | null
    ResponseCashe?: NullableStringFieldUpdateOperationsInput | string | null
    ResponseSafeBima?: NullableStringFieldUpdateOperationsInput | string | null
    ResponseEdelweiss?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LeadToPushRecordUncheckedUpdateManyInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Campaign?: IntFieldUpdateOperationsInput | number
    LeadId?: IntFieldUpdateOperationsInput | number
    PushDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsAutomatic?: BoolFieldUpdateOperationsInput | boolean
    Logic?: StringFieldUpdateOperationsInput | string
    IsResponseOk?: NullableStringFieldUpdateOperationsInput | string | null
    LastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    PushedToClientFibe?: IntFieldUpdateOperationsInput | number
    PushedToClientMpocket?: IntFieldUpdateOperationsInput | number
    PushedToClientCashe?: IntFieldUpdateOperationsInput | number
    PushedToClientFlexi?: IntFieldUpdateOperationsInput | number
    PushedToClientSafeBima?: IntFieldUpdateOperationsInput | number
    PushedToClientEdelweiss?: IntFieldUpdateOperationsInput | number
    ResponseFlexi?: NullableStringFieldUpdateOperationsInput | string | null
    ResponseFibe?: NullableStringFieldUpdateOperationsInput | string | null
    ResponseMpocket?: NullableStringFieldUpdateOperationsInput | string | null
    ResponseCashe?: NullableStringFieldUpdateOperationsInput | string | null
    ResponseSafeBima?: NullableStringFieldUpdateOperationsInput | string | null
    ResponseEdelweiss?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type LoanTypeRelationFilter = {
    is?: LoanTypeWhereInput
    isNot?: LoanTypeWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type CampaignCountOrderByAggregateInput = {
    id?: SortOrder
    CampaignName?: SortOrder
    LoanType?: SortOrder
    CampaignFields?: SortOrder
    CampaignImg?: SortOrder
    isActive?: SortOrder
    LoanTypeId?: SortOrder
  }

  export type CampaignAvgOrderByAggregateInput = {
    id?: SortOrder
    isActive?: SortOrder
    LoanTypeId?: SortOrder
  }

  export type CampaignMaxOrderByAggregateInput = {
    id?: SortOrder
    CampaignName?: SortOrder
    LoanType?: SortOrder
    CampaignFields?: SortOrder
    CampaignImg?: SortOrder
    isActive?: SortOrder
    LoanTypeId?: SortOrder
  }

  export type CampaignMinOrderByAggregateInput = {
    id?: SortOrder
    CampaignName?: SortOrder
    LoanType?: SortOrder
    CampaignFields?: SortOrder
    CampaignImg?: SortOrder
    isActive?: SortOrder
    LoanTypeId?: SortOrder
  }

  export type CampaignSumOrderByAggregateInput = {
    id?: SortOrder
    isActive?: SortOrder
    LoanTypeId?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type CampaignListRelationFilter = {
    every?: CampaignWhereInput
    some?: CampaignWhereInput
    none?: CampaignWhereInput
  }

  export type CampaignOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LoanTypeCountOrderByAggregateInput = {
    id?: SortOrder
    LoanType?: SortOrder
  }

  export type LoanTypeAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type LoanTypeMaxOrderByAggregateInput = {
    id?: SortOrder
    LoanType?: SortOrder
  }

  export type LoanTypeMinOrderByAggregateInput = {
    id?: SortOrder
    LoanType?: SortOrder
  }

  export type LoanTypeSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type LeadToPushRecordNullableRelationFilter = {
    is?: LeadToPushRecordWhereInput | null
    isNot?: LeadToPushRecordWhereInput | null
  }

  export type LeadCountOrderByAggregateInput = {
    LeadId?: SortOrder
    LoanType?: SortOrder
    FirstName?: SortOrder
    LastName?: SortOrder
    MobileNumber?: SortOrder
    LeadCaptureDateTime?: SortOrder
    Email?: SortOrder
    Dob?: SortOrder
    Age?: SortOrder
    Gender?: SortOrder
    MaritalStatus?: SortOrder
    Profession?: SortOrder
    Pancard?: SortOrder
    AadharNumber?: SortOrder
    CurrentAddress?: SortOrder
    CurrentAddress2?: SortOrder
    CurrentPincode?: SortOrder
    CurrentCity?: SortOrder
    CurrentState?: SortOrder
    Tobacco?: SortOrder
    CurrentResidenceType?: SortOrder
    FatherName?: SortOrder
    MotherName?: SortOrder
    Education?: SortOrder
    IpAddress?: SortOrder
    CompanyType?: SortOrder
    IndustryType?: SortOrder
    CompanyName?: SortOrder
    CurrentDesignation?: SortOrder
    CompanyAddress?: SortOrder
    Landmark?: SortOrder
    CompanyPincode?: SortOrder
    CompanyCity?: SortOrder
    NetMonthlyIncome?: SortOrder
    BankName?: SortOrder
    ActiveCreditcardHolder?: SortOrder
    OfficialEmailId?: SortOrder
    LoanAmountRequired?: SortOrder
    LoanTenure?: SortOrder
    Businesspan?: SortOrder
    Gst?: SortOrder
    CompanyTurnover?: SortOrder
    BusinessAgeInYears?: SortOrder
    BusinessOwnership?: SortOrder
    PromoterfirstName?: SortOrder
    PromoterlastName?: SortOrder
    PromoterEmail?: SortOrder
    PromoterDob?: SortOrder
    PromoterGender?: SortOrder
    PromoterPancard?: SortOrder
    PromoterAddress?: SortOrder
    PromoterOwnership?: SortOrder
    OTP?: SortOrder
    otpGenerationDateTime?: SortOrder
    IsMobileNumberVerified?: SortOrder
    Email_Verified?: SortOrder
    Latitude?: SortOrder
    Longitude?: SortOrder
    Location?: SortOrder
    UtmSource?: SortOrder
    Pid?: SortOrder
    UserBrowser?: SortOrder
    UserDevice?: SortOrder
    UserOs?: SortOrder
    UniqueToken?: SortOrder
  }

  export type LeadAvgOrderByAggregateInput = {
    LeadId?: SortOrder
    LoanType?: SortOrder
    Age?: SortOrder
    Gender?: SortOrder
    MaritalStatus?: SortOrder
    Profession?: SortOrder
    Tobacco?: SortOrder
    Education?: SortOrder
    CompanyType?: SortOrder
    NetMonthlyIncome?: SortOrder
    ActiveCreditcardHolder?: SortOrder
    LoanAmountRequired?: SortOrder
    CompanyTurnover?: SortOrder
    BusinessAgeInYears?: SortOrder
    BusinessOwnership?: SortOrder
    PromoterGender?: SortOrder
    PromoterOwnership?: SortOrder
    IsMobileNumberVerified?: SortOrder
    Email_Verified?: SortOrder
    Latitude?: SortOrder
    Longitude?: SortOrder
  }

  export type LeadMaxOrderByAggregateInput = {
    LeadId?: SortOrder
    LoanType?: SortOrder
    FirstName?: SortOrder
    LastName?: SortOrder
    MobileNumber?: SortOrder
    LeadCaptureDateTime?: SortOrder
    Email?: SortOrder
    Dob?: SortOrder
    Age?: SortOrder
    Gender?: SortOrder
    MaritalStatus?: SortOrder
    Profession?: SortOrder
    Pancard?: SortOrder
    AadharNumber?: SortOrder
    CurrentAddress?: SortOrder
    CurrentAddress2?: SortOrder
    CurrentPincode?: SortOrder
    CurrentCity?: SortOrder
    CurrentState?: SortOrder
    Tobacco?: SortOrder
    CurrentResidenceType?: SortOrder
    FatherName?: SortOrder
    MotherName?: SortOrder
    Education?: SortOrder
    IpAddress?: SortOrder
    CompanyType?: SortOrder
    IndustryType?: SortOrder
    CompanyName?: SortOrder
    CurrentDesignation?: SortOrder
    CompanyAddress?: SortOrder
    Landmark?: SortOrder
    CompanyPincode?: SortOrder
    CompanyCity?: SortOrder
    NetMonthlyIncome?: SortOrder
    BankName?: SortOrder
    ActiveCreditcardHolder?: SortOrder
    OfficialEmailId?: SortOrder
    LoanAmountRequired?: SortOrder
    LoanTenure?: SortOrder
    Businesspan?: SortOrder
    Gst?: SortOrder
    CompanyTurnover?: SortOrder
    BusinessAgeInYears?: SortOrder
    BusinessOwnership?: SortOrder
    PromoterfirstName?: SortOrder
    PromoterlastName?: SortOrder
    PromoterEmail?: SortOrder
    PromoterDob?: SortOrder
    PromoterGender?: SortOrder
    PromoterPancard?: SortOrder
    PromoterAddress?: SortOrder
    PromoterOwnership?: SortOrder
    OTP?: SortOrder
    otpGenerationDateTime?: SortOrder
    IsMobileNumberVerified?: SortOrder
    Email_Verified?: SortOrder
    Latitude?: SortOrder
    Longitude?: SortOrder
    Location?: SortOrder
    UtmSource?: SortOrder
    Pid?: SortOrder
    UserBrowser?: SortOrder
    UserDevice?: SortOrder
    UserOs?: SortOrder
    UniqueToken?: SortOrder
  }

  export type LeadMinOrderByAggregateInput = {
    LeadId?: SortOrder
    LoanType?: SortOrder
    FirstName?: SortOrder
    LastName?: SortOrder
    MobileNumber?: SortOrder
    LeadCaptureDateTime?: SortOrder
    Email?: SortOrder
    Dob?: SortOrder
    Age?: SortOrder
    Gender?: SortOrder
    MaritalStatus?: SortOrder
    Profession?: SortOrder
    Pancard?: SortOrder
    AadharNumber?: SortOrder
    CurrentAddress?: SortOrder
    CurrentAddress2?: SortOrder
    CurrentPincode?: SortOrder
    CurrentCity?: SortOrder
    CurrentState?: SortOrder
    Tobacco?: SortOrder
    CurrentResidenceType?: SortOrder
    FatherName?: SortOrder
    MotherName?: SortOrder
    Education?: SortOrder
    IpAddress?: SortOrder
    CompanyType?: SortOrder
    IndustryType?: SortOrder
    CompanyName?: SortOrder
    CurrentDesignation?: SortOrder
    CompanyAddress?: SortOrder
    Landmark?: SortOrder
    CompanyPincode?: SortOrder
    CompanyCity?: SortOrder
    NetMonthlyIncome?: SortOrder
    BankName?: SortOrder
    ActiveCreditcardHolder?: SortOrder
    OfficialEmailId?: SortOrder
    LoanAmountRequired?: SortOrder
    LoanTenure?: SortOrder
    Businesspan?: SortOrder
    Gst?: SortOrder
    CompanyTurnover?: SortOrder
    BusinessAgeInYears?: SortOrder
    BusinessOwnership?: SortOrder
    PromoterfirstName?: SortOrder
    PromoterlastName?: SortOrder
    PromoterEmail?: SortOrder
    PromoterDob?: SortOrder
    PromoterGender?: SortOrder
    PromoterPancard?: SortOrder
    PromoterAddress?: SortOrder
    PromoterOwnership?: SortOrder
    OTP?: SortOrder
    otpGenerationDateTime?: SortOrder
    IsMobileNumberVerified?: SortOrder
    Email_Verified?: SortOrder
    Latitude?: SortOrder
    Longitude?: SortOrder
    Location?: SortOrder
    UtmSource?: SortOrder
    Pid?: SortOrder
    UserBrowser?: SortOrder
    UserDevice?: SortOrder
    UserOs?: SortOrder
    UniqueToken?: SortOrder
  }

  export type LeadSumOrderByAggregateInput = {
    LeadId?: SortOrder
    LoanType?: SortOrder
    Age?: SortOrder
    Gender?: SortOrder
    MaritalStatus?: SortOrder
    Profession?: SortOrder
    Tobacco?: SortOrder
    Education?: SortOrder
    CompanyType?: SortOrder
    NetMonthlyIncome?: SortOrder
    ActiveCreditcardHolder?: SortOrder
    LoanAmountRequired?: SortOrder
    CompanyTurnover?: SortOrder
    BusinessAgeInYears?: SortOrder
    BusinessOwnership?: SortOrder
    PromoterGender?: SortOrder
    PromoterOwnership?: SortOrder
    IsMobileNumberVerified?: SortOrder
    Email_Verified?: SortOrder
    Latitude?: SortOrder
    Longitude?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type EnumRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[]
    notIn?: $Enums.Role[]
    not?: NestedEnumRoleFilter<$PrismaModel> | $Enums.Role
  }

  export type UserCountOrderByAggregateInput = {
    userID?: SortOrder
    adminId?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    mobileNumber?: SortOrder
    password?: SortOrder
    status?: SortOrder
    role?: SortOrder
    OTP?: SortOrder
    OTPGenerationDateTime?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    userID?: SortOrder
    adminId?: SortOrder
    status?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    userID?: SortOrder
    adminId?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    mobileNumber?: SortOrder
    password?: SortOrder
    status?: SortOrder
    role?: SortOrder
    OTP?: SortOrder
    OTPGenerationDateTime?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    userID?: SortOrder
    adminId?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    mobileNumber?: SortOrder
    password?: SortOrder
    status?: SortOrder
    role?: SortOrder
    OTP?: SortOrder
    OTPGenerationDateTime?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    userID?: SortOrder
    adminId?: SortOrder
    status?: SortOrder
  }

  export type EnumRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[]
    notIn?: $Enums.Role[]
    not?: NestedEnumRoleWithAggregatesFilter<$PrismaModel> | $Enums.Role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRoleFilter<$PrismaModel>
    _max?: NestedEnumRoleFilter<$PrismaModel>
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type LeadRelationFilter = {
    is?: LeadWhereInput
    isNot?: LeadWhereInput
  }

  export type LeadToPushRecordCountOrderByAggregateInput = {
    Id?: SortOrder
    Campaign?: SortOrder
    LeadId?: SortOrder
    PushDateTime?: SortOrder
    IsAutomatic?: SortOrder
    Logic?: SortOrder
    IsResponseOk?: SortOrder
    LastUpdated?: SortOrder
    PushedToClientFibe?: SortOrder
    PushedToClientMpocket?: SortOrder
    PushedToClientCashe?: SortOrder
    PushedToClientFlexi?: SortOrder
    PushedToClientSafeBima?: SortOrder
    PushedToClientEdelweiss?: SortOrder
    ResponseFlexi?: SortOrder
    ResponseFibe?: SortOrder
    ResponseMpocket?: SortOrder
    ResponseCashe?: SortOrder
    ResponseSafeBima?: SortOrder
    ResponseEdelweiss?: SortOrder
  }

  export type LeadToPushRecordAvgOrderByAggregateInput = {
    Id?: SortOrder
    Campaign?: SortOrder
    LeadId?: SortOrder
    PushedToClientFibe?: SortOrder
    PushedToClientMpocket?: SortOrder
    PushedToClientCashe?: SortOrder
    PushedToClientFlexi?: SortOrder
    PushedToClientSafeBima?: SortOrder
    PushedToClientEdelweiss?: SortOrder
  }

  export type LeadToPushRecordMaxOrderByAggregateInput = {
    Id?: SortOrder
    Campaign?: SortOrder
    LeadId?: SortOrder
    PushDateTime?: SortOrder
    IsAutomatic?: SortOrder
    Logic?: SortOrder
    IsResponseOk?: SortOrder
    LastUpdated?: SortOrder
    PushedToClientFibe?: SortOrder
    PushedToClientMpocket?: SortOrder
    PushedToClientCashe?: SortOrder
    PushedToClientFlexi?: SortOrder
    PushedToClientSafeBima?: SortOrder
    PushedToClientEdelweiss?: SortOrder
    ResponseFlexi?: SortOrder
    ResponseFibe?: SortOrder
    ResponseMpocket?: SortOrder
    ResponseCashe?: SortOrder
    ResponseSafeBima?: SortOrder
    ResponseEdelweiss?: SortOrder
  }

  export type LeadToPushRecordMinOrderByAggregateInput = {
    Id?: SortOrder
    Campaign?: SortOrder
    LeadId?: SortOrder
    PushDateTime?: SortOrder
    IsAutomatic?: SortOrder
    Logic?: SortOrder
    IsResponseOk?: SortOrder
    LastUpdated?: SortOrder
    PushedToClientFibe?: SortOrder
    PushedToClientMpocket?: SortOrder
    PushedToClientCashe?: SortOrder
    PushedToClientFlexi?: SortOrder
    PushedToClientSafeBima?: SortOrder
    PushedToClientEdelweiss?: SortOrder
    ResponseFlexi?: SortOrder
    ResponseFibe?: SortOrder
    ResponseMpocket?: SortOrder
    ResponseCashe?: SortOrder
    ResponseSafeBima?: SortOrder
    ResponseEdelweiss?: SortOrder
  }

  export type LeadToPushRecordSumOrderByAggregateInput = {
    Id?: SortOrder
    Campaign?: SortOrder
    LeadId?: SortOrder
    PushedToClientFibe?: SortOrder
    PushedToClientMpocket?: SortOrder
    PushedToClientCashe?: SortOrder
    PushedToClientFlexi?: SortOrder
    PushedToClientSafeBima?: SortOrder
    PushedToClientEdelweiss?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type LoanTypeCreateNestedOneWithoutCampaignsInput = {
    create?: XOR<LoanTypeCreateWithoutCampaignsInput, LoanTypeUncheckedCreateWithoutCampaignsInput>
    connectOrCreate?: LoanTypeCreateOrConnectWithoutCampaignsInput
    connect?: LoanTypeWhereUniqueInput
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type LoanTypeUpdateOneRequiredWithoutCampaignsNestedInput = {
    create?: XOR<LoanTypeCreateWithoutCampaignsInput, LoanTypeUncheckedCreateWithoutCampaignsInput>
    connectOrCreate?: LoanTypeCreateOrConnectWithoutCampaignsInput
    upsert?: LoanTypeUpsertWithoutCampaignsInput
    connect?: LoanTypeWhereUniqueInput
    update?: XOR<XOR<LoanTypeUpdateToOneWithWhereWithoutCampaignsInput, LoanTypeUpdateWithoutCampaignsInput>, LoanTypeUncheckedUpdateWithoutCampaignsInput>
  }

  export type CampaignCreateNestedManyWithoutLoanTypeInput = {
    create?: XOR<CampaignCreateWithoutLoanTypeInput, CampaignUncheckedCreateWithoutLoanTypeInput> | CampaignCreateWithoutLoanTypeInput[] | CampaignUncheckedCreateWithoutLoanTypeInput[]
    connectOrCreate?: CampaignCreateOrConnectWithoutLoanTypeInput | CampaignCreateOrConnectWithoutLoanTypeInput[]
    createMany?: CampaignCreateManyLoanTypeInputEnvelope
    connect?: CampaignWhereUniqueInput | CampaignWhereUniqueInput[]
  }

  export type CampaignUncheckedCreateNestedManyWithoutLoanTypeInput = {
    create?: XOR<CampaignCreateWithoutLoanTypeInput, CampaignUncheckedCreateWithoutLoanTypeInput> | CampaignCreateWithoutLoanTypeInput[] | CampaignUncheckedCreateWithoutLoanTypeInput[]
    connectOrCreate?: CampaignCreateOrConnectWithoutLoanTypeInput | CampaignCreateOrConnectWithoutLoanTypeInput[]
    createMany?: CampaignCreateManyLoanTypeInputEnvelope
    connect?: CampaignWhereUniqueInput | CampaignWhereUniqueInput[]
  }

  export type CampaignUpdateManyWithoutLoanTypeNestedInput = {
    create?: XOR<CampaignCreateWithoutLoanTypeInput, CampaignUncheckedCreateWithoutLoanTypeInput> | CampaignCreateWithoutLoanTypeInput[] | CampaignUncheckedCreateWithoutLoanTypeInput[]
    connectOrCreate?: CampaignCreateOrConnectWithoutLoanTypeInput | CampaignCreateOrConnectWithoutLoanTypeInput[]
    upsert?: CampaignUpsertWithWhereUniqueWithoutLoanTypeInput | CampaignUpsertWithWhereUniqueWithoutLoanTypeInput[]
    createMany?: CampaignCreateManyLoanTypeInputEnvelope
    set?: CampaignWhereUniqueInput | CampaignWhereUniqueInput[]
    disconnect?: CampaignWhereUniqueInput | CampaignWhereUniqueInput[]
    delete?: CampaignWhereUniqueInput | CampaignWhereUniqueInput[]
    connect?: CampaignWhereUniqueInput | CampaignWhereUniqueInput[]
    update?: CampaignUpdateWithWhereUniqueWithoutLoanTypeInput | CampaignUpdateWithWhereUniqueWithoutLoanTypeInput[]
    updateMany?: CampaignUpdateManyWithWhereWithoutLoanTypeInput | CampaignUpdateManyWithWhereWithoutLoanTypeInput[]
    deleteMany?: CampaignScalarWhereInput | CampaignScalarWhereInput[]
  }

  export type CampaignUncheckedUpdateManyWithoutLoanTypeNestedInput = {
    create?: XOR<CampaignCreateWithoutLoanTypeInput, CampaignUncheckedCreateWithoutLoanTypeInput> | CampaignCreateWithoutLoanTypeInput[] | CampaignUncheckedCreateWithoutLoanTypeInput[]
    connectOrCreate?: CampaignCreateOrConnectWithoutLoanTypeInput | CampaignCreateOrConnectWithoutLoanTypeInput[]
    upsert?: CampaignUpsertWithWhereUniqueWithoutLoanTypeInput | CampaignUpsertWithWhereUniqueWithoutLoanTypeInput[]
    createMany?: CampaignCreateManyLoanTypeInputEnvelope
    set?: CampaignWhereUniqueInput | CampaignWhereUniqueInput[]
    disconnect?: CampaignWhereUniqueInput | CampaignWhereUniqueInput[]
    delete?: CampaignWhereUniqueInput | CampaignWhereUniqueInput[]
    connect?: CampaignWhereUniqueInput | CampaignWhereUniqueInput[]
    update?: CampaignUpdateWithWhereUniqueWithoutLoanTypeInput | CampaignUpdateWithWhereUniqueWithoutLoanTypeInput[]
    updateMany?: CampaignUpdateManyWithWhereWithoutLoanTypeInput | CampaignUpdateManyWithWhereWithoutLoanTypeInput[]
    deleteMany?: CampaignScalarWhereInput | CampaignScalarWhereInput[]
  }

  export type LeadToPushRecordCreateNestedOneWithoutLeadInput = {
    create?: XOR<LeadToPushRecordCreateWithoutLeadInput, LeadToPushRecordUncheckedCreateWithoutLeadInput>
    connectOrCreate?: LeadToPushRecordCreateOrConnectWithoutLeadInput
    connect?: LeadToPushRecordWhereUniqueInput
  }

  export type LeadToPushRecordUncheckedCreateNestedOneWithoutLeadInput = {
    create?: XOR<LeadToPushRecordCreateWithoutLeadInput, LeadToPushRecordUncheckedCreateWithoutLeadInput>
    connectOrCreate?: LeadToPushRecordCreateOrConnectWithoutLeadInput
    connect?: LeadToPushRecordWhereUniqueInput
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type LeadToPushRecordUpdateOneWithoutLeadNestedInput = {
    create?: XOR<LeadToPushRecordCreateWithoutLeadInput, LeadToPushRecordUncheckedCreateWithoutLeadInput>
    connectOrCreate?: LeadToPushRecordCreateOrConnectWithoutLeadInput
    upsert?: LeadToPushRecordUpsertWithoutLeadInput
    disconnect?: LeadToPushRecordWhereInput | boolean
    delete?: LeadToPushRecordWhereInput | boolean
    connect?: LeadToPushRecordWhereUniqueInput
    update?: XOR<XOR<LeadToPushRecordUpdateToOneWithWhereWithoutLeadInput, LeadToPushRecordUpdateWithoutLeadInput>, LeadToPushRecordUncheckedUpdateWithoutLeadInput>
  }

  export type LeadToPushRecordUncheckedUpdateOneWithoutLeadNestedInput = {
    create?: XOR<LeadToPushRecordCreateWithoutLeadInput, LeadToPushRecordUncheckedCreateWithoutLeadInput>
    connectOrCreate?: LeadToPushRecordCreateOrConnectWithoutLeadInput
    upsert?: LeadToPushRecordUpsertWithoutLeadInput
    disconnect?: LeadToPushRecordWhereInput | boolean
    delete?: LeadToPushRecordWhereInput | boolean
    connect?: LeadToPushRecordWhereUniqueInput
    update?: XOR<XOR<LeadToPushRecordUpdateToOneWithWhereWithoutLeadInput, LeadToPushRecordUpdateWithoutLeadInput>, LeadToPushRecordUncheckedUpdateWithoutLeadInput>
  }

  export type EnumRoleFieldUpdateOperationsInput = {
    set?: $Enums.Role
  }

  export type LeadCreateNestedOneWithoutLeadToPushRecordInput = {
    create?: XOR<LeadCreateWithoutLeadToPushRecordInput, LeadUncheckedCreateWithoutLeadToPushRecordInput>
    connectOrCreate?: LeadCreateOrConnectWithoutLeadToPushRecordInput
    connect?: LeadWhereUniqueInput
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type LeadUpdateOneRequiredWithoutLeadToPushRecordNestedInput = {
    create?: XOR<LeadCreateWithoutLeadToPushRecordInput, LeadUncheckedCreateWithoutLeadToPushRecordInput>
    connectOrCreate?: LeadCreateOrConnectWithoutLeadToPushRecordInput
    upsert?: LeadUpsertWithoutLeadToPushRecordInput
    connect?: LeadWhereUniqueInput
    update?: XOR<XOR<LeadUpdateToOneWithWhereWithoutLeadToPushRecordInput, LeadUpdateWithoutLeadToPushRecordInput>, LeadUncheckedUpdateWithoutLeadToPushRecordInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedEnumRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[]
    notIn?: $Enums.Role[]
    not?: NestedEnumRoleFilter<$PrismaModel> | $Enums.Role
  }

  export type NestedEnumRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[]
    notIn?: $Enums.Role[]
    not?: NestedEnumRoleWithAggregatesFilter<$PrismaModel> | $Enums.Role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRoleFilter<$PrismaModel>
    _max?: NestedEnumRoleFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type LoanTypeCreateWithoutCampaignsInput = {
    LoanType?: string | null
  }

  export type LoanTypeUncheckedCreateWithoutCampaignsInput = {
    id?: number
    LoanType?: string | null
  }

  export type LoanTypeCreateOrConnectWithoutCampaignsInput = {
    where: LoanTypeWhereUniqueInput
    create: XOR<LoanTypeCreateWithoutCampaignsInput, LoanTypeUncheckedCreateWithoutCampaignsInput>
  }

  export type LoanTypeUpsertWithoutCampaignsInput = {
    update: XOR<LoanTypeUpdateWithoutCampaignsInput, LoanTypeUncheckedUpdateWithoutCampaignsInput>
    create: XOR<LoanTypeCreateWithoutCampaignsInput, LoanTypeUncheckedCreateWithoutCampaignsInput>
    where?: LoanTypeWhereInput
  }

  export type LoanTypeUpdateToOneWithWhereWithoutCampaignsInput = {
    where?: LoanTypeWhereInput
    data: XOR<LoanTypeUpdateWithoutCampaignsInput, LoanTypeUncheckedUpdateWithoutCampaignsInput>
  }

  export type LoanTypeUpdateWithoutCampaignsInput = {
    LoanType?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LoanTypeUncheckedUpdateWithoutCampaignsInput = {
    id?: IntFieldUpdateOperationsInput | number
    LoanType?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CampaignCreateWithoutLoanTypeInput = {
    CampaignName?: string | null
    LoanType?: string | null
    CampaignFields?: string | null
    CampaignImg?: string | null
    isActive?: number
  }

  export type CampaignUncheckedCreateWithoutLoanTypeInput = {
    id?: number
    CampaignName?: string | null
    LoanType?: string | null
    CampaignFields?: string | null
    CampaignImg?: string | null
    isActive?: number
  }

  export type CampaignCreateOrConnectWithoutLoanTypeInput = {
    where: CampaignWhereUniqueInput
    create: XOR<CampaignCreateWithoutLoanTypeInput, CampaignUncheckedCreateWithoutLoanTypeInput>
  }

  export type CampaignCreateManyLoanTypeInputEnvelope = {
    data: CampaignCreateManyLoanTypeInput | CampaignCreateManyLoanTypeInput[]
    skipDuplicates?: boolean
  }

  export type CampaignUpsertWithWhereUniqueWithoutLoanTypeInput = {
    where: CampaignWhereUniqueInput
    update: XOR<CampaignUpdateWithoutLoanTypeInput, CampaignUncheckedUpdateWithoutLoanTypeInput>
    create: XOR<CampaignCreateWithoutLoanTypeInput, CampaignUncheckedCreateWithoutLoanTypeInput>
  }

  export type CampaignUpdateWithWhereUniqueWithoutLoanTypeInput = {
    where: CampaignWhereUniqueInput
    data: XOR<CampaignUpdateWithoutLoanTypeInput, CampaignUncheckedUpdateWithoutLoanTypeInput>
  }

  export type CampaignUpdateManyWithWhereWithoutLoanTypeInput = {
    where: CampaignScalarWhereInput
    data: XOR<CampaignUpdateManyMutationInput, CampaignUncheckedUpdateManyWithoutLoanTypeInput>
  }

  export type CampaignScalarWhereInput = {
    AND?: CampaignScalarWhereInput | CampaignScalarWhereInput[]
    OR?: CampaignScalarWhereInput[]
    NOT?: CampaignScalarWhereInput | CampaignScalarWhereInput[]
    id?: IntFilter<"Campaign"> | number
    CampaignName?: StringNullableFilter<"Campaign"> | string | null
    LoanType?: StringNullableFilter<"Campaign"> | string | null
    CampaignFields?: StringNullableFilter<"Campaign"> | string | null
    CampaignImg?: StringNullableFilter<"Campaign"> | string | null
    isActive?: IntFilter<"Campaign"> | number
    LoanTypeId?: IntFilter<"Campaign"> | number
  }

  export type LeadToPushRecordCreateWithoutLeadInput = {
    Campaign: number
    PushDateTime?: Date | string | null
    IsAutomatic: boolean
    Logic: string
    IsResponseOk?: string | null
    LastUpdated?: Date | string
    PushedToClientFibe?: number
    PushedToClientMpocket?: number
    PushedToClientCashe?: number
    PushedToClientFlexi?: number
    PushedToClientSafeBima?: number
    PushedToClientEdelweiss?: number
    ResponseFlexi?: string | null
    ResponseFibe?: string | null
    ResponseMpocket?: string | null
    ResponseCashe?: string | null
    ResponseSafeBima?: string | null
    ResponseEdelweiss?: string | null
  }

  export type LeadToPushRecordUncheckedCreateWithoutLeadInput = {
    Id?: number
    Campaign: number
    PushDateTime?: Date | string | null
    IsAutomatic: boolean
    Logic: string
    IsResponseOk?: string | null
    LastUpdated?: Date | string
    PushedToClientFibe?: number
    PushedToClientMpocket?: number
    PushedToClientCashe?: number
    PushedToClientFlexi?: number
    PushedToClientSafeBima?: number
    PushedToClientEdelweiss?: number
    ResponseFlexi?: string | null
    ResponseFibe?: string | null
    ResponseMpocket?: string | null
    ResponseCashe?: string | null
    ResponseSafeBima?: string | null
    ResponseEdelweiss?: string | null
  }

  export type LeadToPushRecordCreateOrConnectWithoutLeadInput = {
    where: LeadToPushRecordWhereUniqueInput
    create: XOR<LeadToPushRecordCreateWithoutLeadInput, LeadToPushRecordUncheckedCreateWithoutLeadInput>
  }

  export type LeadToPushRecordUpsertWithoutLeadInput = {
    update: XOR<LeadToPushRecordUpdateWithoutLeadInput, LeadToPushRecordUncheckedUpdateWithoutLeadInput>
    create: XOR<LeadToPushRecordCreateWithoutLeadInput, LeadToPushRecordUncheckedCreateWithoutLeadInput>
    where?: LeadToPushRecordWhereInput
  }

  export type LeadToPushRecordUpdateToOneWithWhereWithoutLeadInput = {
    where?: LeadToPushRecordWhereInput
    data: XOR<LeadToPushRecordUpdateWithoutLeadInput, LeadToPushRecordUncheckedUpdateWithoutLeadInput>
  }

  export type LeadToPushRecordUpdateWithoutLeadInput = {
    Campaign?: IntFieldUpdateOperationsInput | number
    PushDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsAutomatic?: BoolFieldUpdateOperationsInput | boolean
    Logic?: StringFieldUpdateOperationsInput | string
    IsResponseOk?: NullableStringFieldUpdateOperationsInput | string | null
    LastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    PushedToClientFibe?: IntFieldUpdateOperationsInput | number
    PushedToClientMpocket?: IntFieldUpdateOperationsInput | number
    PushedToClientCashe?: IntFieldUpdateOperationsInput | number
    PushedToClientFlexi?: IntFieldUpdateOperationsInput | number
    PushedToClientSafeBima?: IntFieldUpdateOperationsInput | number
    PushedToClientEdelweiss?: IntFieldUpdateOperationsInput | number
    ResponseFlexi?: NullableStringFieldUpdateOperationsInput | string | null
    ResponseFibe?: NullableStringFieldUpdateOperationsInput | string | null
    ResponseMpocket?: NullableStringFieldUpdateOperationsInput | string | null
    ResponseCashe?: NullableStringFieldUpdateOperationsInput | string | null
    ResponseSafeBima?: NullableStringFieldUpdateOperationsInput | string | null
    ResponseEdelweiss?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LeadToPushRecordUncheckedUpdateWithoutLeadInput = {
    Id?: IntFieldUpdateOperationsInput | number
    Campaign?: IntFieldUpdateOperationsInput | number
    PushDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsAutomatic?: BoolFieldUpdateOperationsInput | boolean
    Logic?: StringFieldUpdateOperationsInput | string
    IsResponseOk?: NullableStringFieldUpdateOperationsInput | string | null
    LastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    PushedToClientFibe?: IntFieldUpdateOperationsInput | number
    PushedToClientMpocket?: IntFieldUpdateOperationsInput | number
    PushedToClientCashe?: IntFieldUpdateOperationsInput | number
    PushedToClientFlexi?: IntFieldUpdateOperationsInput | number
    PushedToClientSafeBima?: IntFieldUpdateOperationsInput | number
    PushedToClientEdelweiss?: IntFieldUpdateOperationsInput | number
    ResponseFlexi?: NullableStringFieldUpdateOperationsInput | string | null
    ResponseFibe?: NullableStringFieldUpdateOperationsInput | string | null
    ResponseMpocket?: NullableStringFieldUpdateOperationsInput | string | null
    ResponseCashe?: NullableStringFieldUpdateOperationsInput | string | null
    ResponseSafeBima?: NullableStringFieldUpdateOperationsInput | string | null
    ResponseEdelweiss?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LeadCreateWithoutLeadToPushRecordInput = {
    LoanType?: number | null
    FirstName?: string | null
    LastName?: string | null
    MobileNumber?: string | null
    LeadCaptureDateTime?: Date | string
    Email?: string | null
    Dob?: Date | string | null
    Age?: number | null
    Gender?: number | null
    MaritalStatus?: number | null
    Profession?: number | null
    Pancard?: string | null
    AadharNumber?: string | null
    CurrentAddress?: string | null
    CurrentAddress2?: string | null
    CurrentPincode?: string | null
    CurrentCity?: string | null
    CurrentState?: string | null
    Tobacco?: number | null
    CurrentResidenceType?: string | null
    FatherName?: string | null
    MotherName?: string | null
    Education?: number | null
    IpAddress: string
    CompanyType?: number | null
    IndustryType?: string | null
    CompanyName?: string | null
    CurrentDesignation?: string | null
    CompanyAddress?: string | null
    Landmark?: string | null
    CompanyPincode?: string | null
    CompanyCity?: string | null
    NetMonthlyIncome?: number | null
    BankName?: string | null
    ActiveCreditcardHolder?: number | null
    OfficialEmailId?: string | null
    LoanAmountRequired?: number | null
    LoanTenure?: string | null
    Businesspan?: string | null
    Gst?: string | null
    CompanyTurnover?: number | null
    BusinessAgeInYears?: number | null
    BusinessOwnership?: number | null
    PromoterfirstName?: string | null
    PromoterlastName?: string | null
    PromoterEmail?: string | null
    PromoterDob?: Date | string | null
    PromoterGender?: number | null
    PromoterPancard?: string | null
    PromoterAddress?: string | null
    PromoterOwnership?: number | null
    OTP?: string | null
    otpGenerationDateTime?: Date | string | null
    IsMobileNumberVerified?: number | null
    Email_Verified?: number | null
    Latitude?: number | null
    Longitude?: number | null
    Location?: string | null
    UtmSource?: string | null
    Pid?: string | null
    UserBrowser?: string | null
    UserDevice?: string | null
    UserOs?: string | null
    UniqueToken?: string | null
  }

  export type LeadUncheckedCreateWithoutLeadToPushRecordInput = {
    LeadId?: number
    LoanType?: number | null
    FirstName?: string | null
    LastName?: string | null
    MobileNumber?: string | null
    LeadCaptureDateTime?: Date | string
    Email?: string | null
    Dob?: Date | string | null
    Age?: number | null
    Gender?: number | null
    MaritalStatus?: number | null
    Profession?: number | null
    Pancard?: string | null
    AadharNumber?: string | null
    CurrentAddress?: string | null
    CurrentAddress2?: string | null
    CurrentPincode?: string | null
    CurrentCity?: string | null
    CurrentState?: string | null
    Tobacco?: number | null
    CurrentResidenceType?: string | null
    FatherName?: string | null
    MotherName?: string | null
    Education?: number | null
    IpAddress: string
    CompanyType?: number | null
    IndustryType?: string | null
    CompanyName?: string | null
    CurrentDesignation?: string | null
    CompanyAddress?: string | null
    Landmark?: string | null
    CompanyPincode?: string | null
    CompanyCity?: string | null
    NetMonthlyIncome?: number | null
    BankName?: string | null
    ActiveCreditcardHolder?: number | null
    OfficialEmailId?: string | null
    LoanAmountRequired?: number | null
    LoanTenure?: string | null
    Businesspan?: string | null
    Gst?: string | null
    CompanyTurnover?: number | null
    BusinessAgeInYears?: number | null
    BusinessOwnership?: number | null
    PromoterfirstName?: string | null
    PromoterlastName?: string | null
    PromoterEmail?: string | null
    PromoterDob?: Date | string | null
    PromoterGender?: number | null
    PromoterPancard?: string | null
    PromoterAddress?: string | null
    PromoterOwnership?: number | null
    OTP?: string | null
    otpGenerationDateTime?: Date | string | null
    IsMobileNumberVerified?: number | null
    Email_Verified?: number | null
    Latitude?: number | null
    Longitude?: number | null
    Location?: string | null
    UtmSource?: string | null
    Pid?: string | null
    UserBrowser?: string | null
    UserDevice?: string | null
    UserOs?: string | null
    UniqueToken?: string | null
  }

  export type LeadCreateOrConnectWithoutLeadToPushRecordInput = {
    where: LeadWhereUniqueInput
    create: XOR<LeadCreateWithoutLeadToPushRecordInput, LeadUncheckedCreateWithoutLeadToPushRecordInput>
  }

  export type LeadUpsertWithoutLeadToPushRecordInput = {
    update: XOR<LeadUpdateWithoutLeadToPushRecordInput, LeadUncheckedUpdateWithoutLeadToPushRecordInput>
    create: XOR<LeadCreateWithoutLeadToPushRecordInput, LeadUncheckedCreateWithoutLeadToPushRecordInput>
    where?: LeadWhereInput
  }

  export type LeadUpdateToOneWithWhereWithoutLeadToPushRecordInput = {
    where?: LeadWhereInput
    data: XOR<LeadUpdateWithoutLeadToPushRecordInput, LeadUncheckedUpdateWithoutLeadToPushRecordInput>
  }

  export type LeadUpdateWithoutLeadToPushRecordInput = {
    LoanType?: NullableIntFieldUpdateOperationsInput | number | null
    FirstName?: NullableStringFieldUpdateOperationsInput | string | null
    LastName?: NullableStringFieldUpdateOperationsInput | string | null
    MobileNumber?: NullableStringFieldUpdateOperationsInput | string | null
    LeadCaptureDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    Dob?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Age?: NullableIntFieldUpdateOperationsInput | number | null
    Gender?: NullableIntFieldUpdateOperationsInput | number | null
    MaritalStatus?: NullableIntFieldUpdateOperationsInput | number | null
    Profession?: NullableIntFieldUpdateOperationsInput | number | null
    Pancard?: NullableStringFieldUpdateOperationsInput | string | null
    AadharNumber?: NullableStringFieldUpdateOperationsInput | string | null
    CurrentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    CurrentAddress2?: NullableStringFieldUpdateOperationsInput | string | null
    CurrentPincode?: NullableStringFieldUpdateOperationsInput | string | null
    CurrentCity?: NullableStringFieldUpdateOperationsInput | string | null
    CurrentState?: NullableStringFieldUpdateOperationsInput | string | null
    Tobacco?: NullableIntFieldUpdateOperationsInput | number | null
    CurrentResidenceType?: NullableStringFieldUpdateOperationsInput | string | null
    FatherName?: NullableStringFieldUpdateOperationsInput | string | null
    MotherName?: NullableStringFieldUpdateOperationsInput | string | null
    Education?: NullableIntFieldUpdateOperationsInput | number | null
    IpAddress?: StringFieldUpdateOperationsInput | string
    CompanyType?: NullableIntFieldUpdateOperationsInput | number | null
    IndustryType?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyName?: NullableStringFieldUpdateOperationsInput | string | null
    CurrentDesignation?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyAddress?: NullableStringFieldUpdateOperationsInput | string | null
    Landmark?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyPincode?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyCity?: NullableStringFieldUpdateOperationsInput | string | null
    NetMonthlyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    BankName?: NullableStringFieldUpdateOperationsInput | string | null
    ActiveCreditcardHolder?: NullableIntFieldUpdateOperationsInput | number | null
    OfficialEmailId?: NullableStringFieldUpdateOperationsInput | string | null
    LoanAmountRequired?: NullableFloatFieldUpdateOperationsInput | number | null
    LoanTenure?: NullableStringFieldUpdateOperationsInput | string | null
    Businesspan?: NullableStringFieldUpdateOperationsInput | string | null
    Gst?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyTurnover?: NullableIntFieldUpdateOperationsInput | number | null
    BusinessAgeInYears?: NullableIntFieldUpdateOperationsInput | number | null
    BusinessOwnership?: NullableIntFieldUpdateOperationsInput | number | null
    PromoterfirstName?: NullableStringFieldUpdateOperationsInput | string | null
    PromoterlastName?: NullableStringFieldUpdateOperationsInput | string | null
    PromoterEmail?: NullableStringFieldUpdateOperationsInput | string | null
    PromoterDob?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    PromoterGender?: NullableIntFieldUpdateOperationsInput | number | null
    PromoterPancard?: NullableStringFieldUpdateOperationsInput | string | null
    PromoterAddress?: NullableStringFieldUpdateOperationsInput | string | null
    PromoterOwnership?: NullableIntFieldUpdateOperationsInput | number | null
    OTP?: NullableStringFieldUpdateOperationsInput | string | null
    otpGenerationDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsMobileNumberVerified?: NullableIntFieldUpdateOperationsInput | number | null
    Email_Verified?: NullableIntFieldUpdateOperationsInput | number | null
    Latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    Longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    Location?: NullableStringFieldUpdateOperationsInput | string | null
    UtmSource?: NullableStringFieldUpdateOperationsInput | string | null
    Pid?: NullableStringFieldUpdateOperationsInput | string | null
    UserBrowser?: NullableStringFieldUpdateOperationsInput | string | null
    UserDevice?: NullableStringFieldUpdateOperationsInput | string | null
    UserOs?: NullableStringFieldUpdateOperationsInput | string | null
    UniqueToken?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LeadUncheckedUpdateWithoutLeadToPushRecordInput = {
    LeadId?: IntFieldUpdateOperationsInput | number
    LoanType?: NullableIntFieldUpdateOperationsInput | number | null
    FirstName?: NullableStringFieldUpdateOperationsInput | string | null
    LastName?: NullableStringFieldUpdateOperationsInput | string | null
    MobileNumber?: NullableStringFieldUpdateOperationsInput | string | null
    LeadCaptureDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    Dob?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Age?: NullableIntFieldUpdateOperationsInput | number | null
    Gender?: NullableIntFieldUpdateOperationsInput | number | null
    MaritalStatus?: NullableIntFieldUpdateOperationsInput | number | null
    Profession?: NullableIntFieldUpdateOperationsInput | number | null
    Pancard?: NullableStringFieldUpdateOperationsInput | string | null
    AadharNumber?: NullableStringFieldUpdateOperationsInput | string | null
    CurrentAddress?: NullableStringFieldUpdateOperationsInput | string | null
    CurrentAddress2?: NullableStringFieldUpdateOperationsInput | string | null
    CurrentPincode?: NullableStringFieldUpdateOperationsInput | string | null
    CurrentCity?: NullableStringFieldUpdateOperationsInput | string | null
    CurrentState?: NullableStringFieldUpdateOperationsInput | string | null
    Tobacco?: NullableIntFieldUpdateOperationsInput | number | null
    CurrentResidenceType?: NullableStringFieldUpdateOperationsInput | string | null
    FatherName?: NullableStringFieldUpdateOperationsInput | string | null
    MotherName?: NullableStringFieldUpdateOperationsInput | string | null
    Education?: NullableIntFieldUpdateOperationsInput | number | null
    IpAddress?: StringFieldUpdateOperationsInput | string
    CompanyType?: NullableIntFieldUpdateOperationsInput | number | null
    IndustryType?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyName?: NullableStringFieldUpdateOperationsInput | string | null
    CurrentDesignation?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyAddress?: NullableStringFieldUpdateOperationsInput | string | null
    Landmark?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyPincode?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyCity?: NullableStringFieldUpdateOperationsInput | string | null
    NetMonthlyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    BankName?: NullableStringFieldUpdateOperationsInput | string | null
    ActiveCreditcardHolder?: NullableIntFieldUpdateOperationsInput | number | null
    OfficialEmailId?: NullableStringFieldUpdateOperationsInput | string | null
    LoanAmountRequired?: NullableFloatFieldUpdateOperationsInput | number | null
    LoanTenure?: NullableStringFieldUpdateOperationsInput | string | null
    Businesspan?: NullableStringFieldUpdateOperationsInput | string | null
    Gst?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyTurnover?: NullableIntFieldUpdateOperationsInput | number | null
    BusinessAgeInYears?: NullableIntFieldUpdateOperationsInput | number | null
    BusinessOwnership?: NullableIntFieldUpdateOperationsInput | number | null
    PromoterfirstName?: NullableStringFieldUpdateOperationsInput | string | null
    PromoterlastName?: NullableStringFieldUpdateOperationsInput | string | null
    PromoterEmail?: NullableStringFieldUpdateOperationsInput | string | null
    PromoterDob?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    PromoterGender?: NullableIntFieldUpdateOperationsInput | number | null
    PromoterPancard?: NullableStringFieldUpdateOperationsInput | string | null
    PromoterAddress?: NullableStringFieldUpdateOperationsInput | string | null
    PromoterOwnership?: NullableIntFieldUpdateOperationsInput | number | null
    OTP?: NullableStringFieldUpdateOperationsInput | string | null
    otpGenerationDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IsMobileNumberVerified?: NullableIntFieldUpdateOperationsInput | number | null
    Email_Verified?: NullableIntFieldUpdateOperationsInput | number | null
    Latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    Longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    Location?: NullableStringFieldUpdateOperationsInput | string | null
    UtmSource?: NullableStringFieldUpdateOperationsInput | string | null
    Pid?: NullableStringFieldUpdateOperationsInput | string | null
    UserBrowser?: NullableStringFieldUpdateOperationsInput | string | null
    UserDevice?: NullableStringFieldUpdateOperationsInput | string | null
    UserOs?: NullableStringFieldUpdateOperationsInput | string | null
    UniqueToken?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CampaignCreateManyLoanTypeInput = {
    id?: number
    CampaignName?: string | null
    LoanType?: string | null
    CampaignFields?: string | null
    CampaignImg?: string | null
    isActive?: number
  }

  export type CampaignUpdateWithoutLoanTypeInput = {
    CampaignName?: NullableStringFieldUpdateOperationsInput | string | null
    LoanType?: NullableStringFieldUpdateOperationsInput | string | null
    CampaignFields?: NullableStringFieldUpdateOperationsInput | string | null
    CampaignImg?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: IntFieldUpdateOperationsInput | number
  }

  export type CampaignUncheckedUpdateWithoutLoanTypeInput = {
    id?: IntFieldUpdateOperationsInput | number
    CampaignName?: NullableStringFieldUpdateOperationsInput | string | null
    LoanType?: NullableStringFieldUpdateOperationsInput | string | null
    CampaignFields?: NullableStringFieldUpdateOperationsInput | string | null
    CampaignImg?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: IntFieldUpdateOperationsInput | number
  }

  export type CampaignUncheckedUpdateManyWithoutLoanTypeInput = {
    id?: IntFieldUpdateOperationsInput | number
    CampaignName?: NullableStringFieldUpdateOperationsInput | string | null
    LoanType?: NullableStringFieldUpdateOperationsInput | string | null
    CampaignFields?: NullableStringFieldUpdateOperationsInput | string | null
    CampaignImg?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: IntFieldUpdateOperationsInput | number
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use LoanTypeCountOutputTypeDefaultArgs instead
     */
    export type LoanTypeCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = LoanTypeCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CampaignDefaultArgs instead
     */
    export type CampaignArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CampaignDefaultArgs<ExtArgs>
    /**
     * @deprecated Use LoanTypeDefaultArgs instead
     */
    export type LoanTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = LoanTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use LeadDefaultArgs instead
     */
    export type LeadArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = LeadDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserDefaultArgs instead
     */
    export type UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserDefaultArgs<ExtArgs>
    /**
     * @deprecated Use LeadToPushRecordDefaultArgs instead
     */
    export type LeadToPushRecordArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = LeadToPushRecordDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}