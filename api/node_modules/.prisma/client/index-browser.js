
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  detectRuntime,
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.9.1
 * Query Engine version: 23fdc5965b1e05fc54e5f26ed3de66776b93de64
 */
Prisma.prismaVersion = {
  client: "5.9.1",
  engine: "23fdc5965b1e05fc54e5f26ed3de66776b93de64"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  throw new Error(`Extensions.getExtensionContext is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  throw new Error(`Extensions.defineExtension is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.CampaignScalarFieldEnum = {
  id: 'id',
  CampaignName: 'CampaignName',
  LoanType: 'LoanType',
  CampaignFields: 'CampaignFields',
  CampaignImg: 'CampaignImg',
  isActive: 'isActive',
  LoanTypeId: 'LoanTypeId'
};

exports.Prisma.LoanTypeScalarFieldEnum = {
  id: 'id',
  LoanType: 'LoanType'
};

exports.Prisma.LeadScalarFieldEnum = {
  LeadId: 'LeadId',
  LoanType: 'LoanType',
  FirstName: 'FirstName',
  LastName: 'LastName',
  MobileNumber: 'MobileNumber',
  LeadCaptureDateTime: 'LeadCaptureDateTime',
  Email: 'Email',
  Dob: 'Dob',
  Age: 'Age',
  Gender: 'Gender',
  MaritalStatus: 'MaritalStatus',
  Profession: 'Profession',
  Pancard: 'Pancard',
  AadharNumber: 'AadharNumber',
  CurrentAddress: 'CurrentAddress',
  CurrentAddress2: 'CurrentAddress2',
  CurrentPincode: 'CurrentPincode',
  CurrentCity: 'CurrentCity',
  CurrentState: 'CurrentState',
  Tobacco: 'Tobacco',
  CurrentResidenceType: 'CurrentResidenceType',
  FatherName: 'FatherName',
  MotherName: 'MotherName',
  Education: 'Education',
  IpAddress: 'IpAddress',
  CompanyType: 'CompanyType',
  IndustryType: 'IndustryType',
  CompanyName: 'CompanyName',
  CurrentDesignation: 'CurrentDesignation',
  CompanyAddress: 'CompanyAddress',
  Landmark: 'Landmark',
  CompanyPincode: 'CompanyPincode',
  CompanyCity: 'CompanyCity',
  NetMonthlyIncome: 'NetMonthlyIncome',
  BankName: 'BankName',
  ActiveCreditcardHolder: 'ActiveCreditcardHolder',
  OfficialEmailId: 'OfficialEmailId',
  LoanAmountRequired: 'LoanAmountRequired',
  LoanTenure: 'LoanTenure',
  Businesspan: 'Businesspan',
  Gst: 'Gst',
  CompanyTurnover: 'CompanyTurnover',
  BusinessAgeInYears: 'BusinessAgeInYears',
  BusinessOwnership: 'BusinessOwnership',
  PromoterfirstName: 'PromoterfirstName',
  PromoterlastName: 'PromoterlastName',
  PromoterEmail: 'PromoterEmail',
  PromoterDob: 'PromoterDob',
  PromoterGender: 'PromoterGender',
  PromoterPancard: 'PromoterPancard',
  PromoterAddress: 'PromoterAddress',
  PromoterOwnership: 'PromoterOwnership',
  OTP: 'OTP',
  otpGenerationDateTime: 'otpGenerationDateTime',
  IsMobileNumberVerified: 'IsMobileNumberVerified',
  Email_Verified: 'Email_Verified',
  Latitude: 'Latitude',
  Longitude: 'Longitude',
  Location: 'Location',
  UtmSource: 'UtmSource',
  Pid: 'Pid',
  UserBrowser: 'UserBrowser',
  UserDevice: 'UserDevice',
  UserOs: 'UserOs',
  UniqueToken: 'UniqueToken'
};

exports.Prisma.UserScalarFieldEnum = {
  userID: 'userID',
  adminId: 'adminId',
  firstName: 'firstName',
  lastName: 'lastName',
  email: 'email',
  mobileNumber: 'mobileNumber',
  password: 'password',
  status: 'status',
  role: 'role',
  OTP: 'OTP',
  OTPGenerationDateTime: 'OTPGenerationDateTime'
};

exports.Prisma.LeadToPushRecordScalarFieldEnum = {
  Id: 'Id',
  Campaign: 'Campaign',
  LeadId: 'LeadId',
  PushDateTime: 'PushDateTime',
  IsAutomatic: 'IsAutomatic',
  Logic: 'Logic',
  IsResponseOk: 'IsResponseOk',
  LastUpdated: 'LastUpdated',
  PushedToClientFibe: 'PushedToClientFibe',
  PushedToClientMpocket: 'PushedToClientMpocket',
  PushedToClientCashe: 'PushedToClientCashe',
  PushedToClientFlexi: 'PushedToClientFlexi',
  PushedToClientSafeBima: 'PushedToClientSafeBima',
  PushedToClientEdelweiss: 'PushedToClientEdelweiss',
  ResponseFlexi: 'ResponseFlexi',
  ResponseFibe: 'ResponseFibe',
  ResponseMpocket: 'ResponseMpocket',
  ResponseCashe: 'ResponseCashe',
  ResponseSafeBima: 'ResponseSafeBima',
  ResponseEdelweiss: 'ResponseEdelweiss'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Role = exports.$Enums.Role = {
  client: 'client',
  admin: 'admin',
  user: 'user',
  superadmin: 'superadmin'
};

exports.Prisma.ModelName = {
  Campaign: 'Campaign',
  LoanType: 'LoanType',
  Lead: 'Lead',
  User: 'User',
  LeadToPushRecord: 'LeadToPushRecord'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        const runtime = detectRuntime()
        const edgeRuntimeName = {
          'workerd': 'Cloudflare Workers',
          'deno': 'Deno and Deno Deploy',
          'netlify': 'Netlify Edge Functions',
          'edge-light': 'Vercel Edge Functions or Edge Middleware',
        }[runtime]

        let message = 'PrismaClient is unable to run in '
        if (edgeRuntimeName !== undefined) {
          message += edgeRuntimeName + '. As an alternative, try Accelerate: https://pris.ly/d/accelerate.'
        } else {
          message += 'this browser environment, or has been bundled for the browser (running in `' + runtime + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
